<?xml version="1.0" encoding="utf-8"?>
<AssetCollection xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <Metadata>
    <UniqueId>3dee2d5b-5bae-4987-8828-9ffc4bca327c</UniqueId>
    <GroupId>3dee2d5b-5bae-4987-8828-9ffc4bca327c</GroupId>
    <Name>Message Analyzer Filters</Name>
    <AssetType>FilterAsset</AssetType>
    <VersionNumber>1</VersionNumber>
    <Author>Message Analyzer</Author>
    <Corporation>Microsoft</Corporation>
    <PublishedDate>2013-09-01T00:00:00</PublishedDate>
    <ModifiedDate>2014-08-01T00:00:00</ModifiedDate>
    <Revision>4</Revision>
    <Description>The official release of filters from the Message Analyzer Team. Download and sync this set to get periodic updates.</Description>
    <Rating>0</Rating>
  </Metadata>
  <Assets>
    <Asset>
      <Metadata>
        <UniqueId>c2b95d51-b43c-4204-a3c8-8be2bfa6b8bf</UniqueId>
        <Name>IPv4 Address</Name>
        <Description>Filter for a IPv4 Address in either direction.</Description>
        <Category>Address Filtering</Category>
        <Properties />
      </Metadata>
      <Content xsi:type="FilterAsset">
        <Expression>IPv4.Address == 192.168.1.1</Expression>
      </Content>
      <Properties />
    </Asset>
    <Asset>
      <Metadata>
        <UniqueId>25fde8a5-394e-45e7-b20f-a14888b36dd0</UniqueId>
        <Name>Remove IPv4 Address Traffic</Name>
        <Description>Removes traffic based on an IPv4 Address.   The ~= specifies that you only want messages that have an IPv4 Address to begin with.  Conversely != will return other messages, like include ARP or IPv6.</Description>
        <Category>Address Filtering</Category>
        <Properties />
      </Metadata>
      <Content xsi:type="FilterAsset">
        <Expression>IPv4.Address ~= 192.168.1.1</Expression>
      </Content>
      <Properties />
    </Asset>
    <Asset>
      <Metadata>
        <UniqueId>3f1e13eb-13a4-447f-9058-5a3d62200212</UniqueId>
        <Name>IPv6 Address</Name>
        <Description>Filters for an IPv6 Address going in either direction.</Description>
        <Category>Address Filtering</Category>
        <Properties />
      </Metadata>
      <Content xsi:type="FilterAsset">
        <Expression>IPv6.Address == 2001:4898:0:FFF:200:5EFE:4135:4A7</Expression>
      </Content>
      <Properties />
    </Asset>
    <Asset>
      <Metadata>
        <UniqueId>27dd3546-5ce0-4190-a9b2-9f0911b026a2</UniqueId>
        <Name>Any Address Type</Name>
        <Description>Search for any address.  Could be IPv4, IPv6, Ethernet, and others in either direction.  There is a performance hit with * type filters.</Description>
        <Category>Address Filtering</Category>
        <Properties />
      </Metadata>
      <Content xsi:type="FilterAsset">
        <Expression>*Address == 192.168.1.1 or *Address == 2001:4898:0:FFF:200:5EFE:4135:4A7</Expression>
      </Content>
      <Properties />
    </Asset>
    <Asset>
      <Metadata>
        <UniqueId>8fcd8db5-4bdb-4bad-a432-ed02fd3bb1ac</UniqueId>
        <Name>HTTP TCP Port Filter</Name>
        <Description>Filters HTTP port 80 traffic in either direction.  You can also use a number like 80 instead of the built-in constants.</Description>
        <Category>TCP</Category>
        <Properties />
      </Metadata>
      <Content xsi:type="FilterAsset">
        <Expression>tcp.port == IANA.Port.HTTP</Expression>
      </Content>
      <Properties />
    </Asset>
    <Asset>
      <Metadata>
        <UniqueId>3dcae0c7-f041-4787-9d31-e0b71b48951f</UniqueId>
        <Name>Remove LDAP Traffic by Port</Name>
        <Description>Remove LDAP traffic on TCP and UDP transports.  *Port represents SourcePort or DestinationPort or any other protocol with a field/property named port.</Description>
        <Category>LDAP</Category>
        <Properties />
      </Metadata>
      <Content xsi:type="FilterAsset">
        <Expression>*Port != IANA.Port.LDAP</Expression>
      </Content>
      <Properties />
    </Asset>
    <Asset>
      <Metadata>
        <UniqueId>88c18bd9-effe-411a-b845-ebd0fd96fe5a</UniqueId>
        <Name>Multiple TCP Source Port</Name>
        <Description>Include traffic based on a set of TCP Source ports.</Description>
        <Category>TCP</Category>
        <Properties />
      </Metadata>
      <Content xsi:type="FilterAsset">
        <Expression>TCP.SourcePort in [6608, 6609, 6610]</Expression>
      </Content>
      <Properties />
    </Asset>
    <Asset>
      <Metadata>
        <UniqueId>1bd24bd4-a4a2-4cb0-b5ad-9ab170c79bed</UniqueId>
        <Name>SMB Port on UDP and TCP</Name>
        <Description>Filter on any Port traffic. This includes UDP and TCP as well as any protocol with a top level field or property called Port.</Description>
        <Category>File Sharing</Category>
        <Properties />
      </Metadata>
      <Content xsi:type="FilterAsset">
        <Expression>*Port == IANA.Port.SMB</Expression>
      </Content>
      <Properties />
    </Asset>
    <Asset>
      <Metadata>
        <UniqueId>8c2b6610-3d5d-444b-b4cd-83ec61476ad4</UniqueId>
        <Name>Remove Remote Desktop</Name>
        <Description>Removes all remote desktop messages that traverse ports 3389, 1494, and 1503.</Description>
        <Category>Remove Noise</Category>
        <Properties />
      </Metadata>
      <Content xsi:type="FilterAsset">
        <Expression>!(*Port in [3389, 1494, 1503])</Expression>
      </Content>
      <Properties />
    </Asset>
    <Asset>
      <Metadata>
        <UniqueId>da29e3f5-e7a5-4367-a84c-f90e0c3b81ea</UniqueId>
        <Name>TCP SYN Set</Name>
        <Description>Return messages where TCP SYN bit is set.  Note that the "flags" portion of the filter can be skipped.</Description>
        <Category>TCP</Category>
        <Properties />
      </Metadata>
      <Content xsi:type="FilterAsset">
        <Expression>tcp.syn == true</Expression>
      </Content>
      <Properties />
    </Asset>
    <Asset>
      <Metadata>
        <UniqueId>bfe11bbf-1cba-42f8-8555-e8406d3252f1</UniqueId>
        <Name>TCP SYN with Explicit Path</Name>
        <Description>Return messages where TCP SYN bit is set using an explicit path.  SYN must be underneath Flags.  And TCP can have an arbitrary number of entities between it and Flags.</Description>
        <Category>General Examples</Category>
        <Properties />
      </Metadata>
      <Content xsi:type="FilterAsset">
        <Expression>TCP::Flags:SYN == true</Expression>
      </Content>
      <Properties />
    </Asset>
    <Asset>
      <Metadata>
        <UniqueId>8141e06e-18e3-4fe3-8cf3-5188a9fb8919</UniqueId>
        <Name>TCP Window Size</Name>
        <Description>Finds TCP packets with a scaled window size &lt; 1000.  Used to find shrinking windows.</Description>
        <Category>TCP</Category>
        <Properties />
      </Metadata>
      <Content xsi:type="FilterAsset">
        <Expression>TCP.WindowScaled &lt; 1000</Expression>
      </Content>
      <Properties />
	</Asset>
    <Asset>
      <Metadata>
        <UniqueId>d2fa35fd-6046-4a3f-999c-cecc387b097e</UniqueId>
        <Name>HTTP over TCP</Name>
        <Description>Filters HTTP Messages, but only if HTTP is directly over TCP</Description>
        <Category>HTTP</Category>
        <Properties />
      </Metadata>
      <Content xsi:type="FilterAsset">
        <Expression>HTTP\TCP.Port == IANA.Port.HTTP</Expression>
      </Content>
      <Properties />
    </Asset>
    <Asset>
      <Metadata>
        <UniqueId>a9b14d35-1206-4f9c-8a41-8f477cdf531a</UniqueId>
        <Name>TCP Options</Name>
        <Description>Filter messages where TCP options exist.</Description>
        <Category>TCP</Category>
        <Properties />
      </Metadata>
      <Content xsi:type="FilterAsset">
        <Expression>tcp.options</Expression>
      </Content>
      <Properties />
    </Asset>
    <Asset>
      <Metadata>
        <UniqueId>cbd8981a-6773-4d9c-9d3c-7adeed00ddcd</UniqueId>
        <Name>String Search</Name>
        <Description>Search all message data for a string that matches “Microsoft”.  By default the search is case and encoding (ASCII vs. UTF8 vs. Unicode) is insensitive.</Description>
        <Category>Contains Filters</Category>
        <Properties />
      </Metadata>
      <Content xsi:type="FilterAsset">
        <Expression>contains "Microsoft"</Expression>
      </Content>
      <Properties />
    </Asset>
    <Asset>
      <Metadata>
        <UniqueId>19d5e776-25eb-45b0-9814-a95f9c9252ff</UniqueId>
        <Name>Hex Pattern Search</Name>
        <Description>Searches message data for hex pattern in all message data.</Description>
        <Category>Contains Filters</Category>
        <Properties />
      </Metadata>
      <Content xsi:type="FilterAsset">
        <Expression>contains $[534d42]</Expression>
      </Content>
      <Properties />
    </Asset>
    <Asset>
      <Metadata>
        <UniqueId>933e870e-c2ff-4352-ac59-544bcb00357a</UniqueId>
        <Name>Messages with specific Diagnosis Errors</Name>
        <Description>Return any message with a validation diagnosis error, which is type 2.</Description>
        <Category>Diagnosis</Category>
        <Properties />
      </Metadata>
      <Content xsi:type="FilterAsset">
        <Expression>#DiagnosisTypes == 2</Expression>
      </Content>
      <Properties />
    </Asset>
    <Asset>
      <Metadata>
        <UniqueId>897615bc-42fb-43db-87c5-cae98d1c311b</UniqueId>
        <Name>Any Diagnosis Error</Name>
        <Description>Return any message with any diagnosis error.</Description>
        <Category>Diagnosis</Category>
        <Properties />
      </Metadata>
      <Content xsi:type="FilterAsset">
        <Expression>#DiagnosisLevels</Expression>
      </Content>
      <Properties />
    </Asset>
    <Asset>
      <Metadata>
        <UniqueId>f9cf2c37-624b-401d-a737-5561fca2c1d0</UniqueId>
        <Name>SMB Messages with Diagnosis Errors</Name>
        <Description>Finds SMB messages where any diagnosis errors exist.</Description>
        <Category>File Sharing</Category>
        <Properties />
      </Metadata>
      <Content xsi:type="FilterAsset">
        <Expression>SMB#DiagnosisLevels</Expression>
      </Content>
      <Properties />
    </Asset>
    <Asset>
      <Metadata>
        <UniqueId>c1646137-11b4-4ebb-add5-8b34fa1db229</UniqueId>
        <Name>Compound Statement with AND</Name>
        <Description>Example of using AND.  Return HTTP messages that don't have UDP in them.</Description>
        <Category>General Examples</Category>
        <Properties />
      </Metadata>
      <Content xsi:type="FilterAsset">
        <Expression>HTTP and !UDP</Expression>
      </Content>
      <Properties />
    </Asset>
    <Asset>
      <Metadata>
        <UniqueId>69fb52e9-adec-4d16-9a76-402e84ac47fd</UniqueId>
        <Name>SMB File Name Search</Name>
        <Description>Search for SMB Messages with FileName defined.  If you use != instead, you see all non-SMB traffic as well.</Description>
        <Category>File Sharing</Category>
        <Properties />
      </Metadata>
      <Content xsi:type="FilterAsset">
        <Expression>SMB.FileName ~= "" OR SMB2.FileName ~= ""</Expression>
      </Content>
      <Properties />
    </Asset>
    <Asset>
      <Metadata>
        <UniqueId>e1c708c6-416c-40a0-8eca-21092c2d5507</UniqueId>
        <Name>USB Control Transfer Errors</Name>
        <Description>Finds USB transfer messages which contain errors</Description>
        <Category>USB</Category>
        <Properties />
      </Metadata>
      <Content xsi:type="FilterAsset">
        <Expression>Microsoft_Windows_USB_USBPORT.fid_URB_Hdr_Status ~= 0</Expression>
      </Content>
      <Properties />
    </Asset>
    <Asset>
      <Metadata>
        <UniqueId>91c6ec7c-396c-4b66-ac25-3f4d59b61f7b</UniqueId>
        <Name>Summary Description Search</Name>
        <Description>Search the Summary description for the text "error".</Description>
        <Category>Contains Filters</Category>
        <Properties />
      </Metadata>
      <Content xsi:type="FilterAsset">
        <Expression>*Summary contains "error"</Expression>
      </Content>
      <Properties />
    </Asset>
    <Asset>
      <Metadata>
        <UniqueId>b122a3f8-fd5f-49a9-9e42-af782bc1d2d1</UniqueId>
        <Name>String Search, Case Sensitive</Name>
        <Description>Search all message data for a string that matches “Microsoft”. Case sensitive search is used. The default insensitive encoding will match ASCII, Unicode and any other encoding type."</Description>
        <Category>Contains Filters</Category>
        <Properties />
      </Metadata>
      <Content xsi:type="FilterAsset">
        <Expression>contains "Microsoft" caseSensitive</Expression>
      </Content>
      <Properties />
    </Asset>
    <Asset>
      <Metadata>
        <UniqueId>2b64c263-fedf-4c5b-ad03-f0f6118db234</UniqueId>
        <Name>Search String as ASCII</Name>
        <Description>Search all message data for a string that matches “Microsoft” and the encoding is ASCII.  Case insensitive search is performed.</Description>
        <Category>Contains Filters</Category>
        <Properties />
      </Metadata>
      <Content xsi:type="FilterAsset">
        <Expression>contains "Microsoft" encoding ASCII</Expression>
      </Content>
      <Properties />
    </Asset>
    <Asset>
      <Metadata>
        <UniqueId>bd92f0ef-660f-4725-8b53-39751a383922</UniqueId>
        <Name>HTTP Address Search</Name>
        <Description>Searches HTTP Address for the text "msn".  Case insensitive and Encoding insensitive.</Description>
        <Category>HTTP</Category>
        <Properties />
      </Metadata>
      <Content xsi:type="FilterAsset">
        <Expression>HTTP.Uri contains "msn"</Expression>
      </Content>
      <Properties />
    </Asset>
    <Asset>
      <Metadata>
        <UniqueId>1362df43-d73f-4375-abe0-13132f3f486b</UniqueId>
        <Name>HTTP Errors</Name>
        <Description>Returns HTTP messages with an error code &gt;= 400.</Description>
        <Category>HTTP</Category>
        <Properties />
      </Metadata>
      <Content xsi:type="FilterAsset">
        <Expression>HTTP.StatusCode &gt;= 400</Expression>
      </Content>
      <Properties />
    </Asset>
    <Asset>
      <Metadata>
        <UniqueId>f5029e6d-bac1-44d8-b44c-0c502353d3a7</UniqueId>
        <Name>Ethernet Address</Name>
        <Description>Ethernet address filter for traffic in either direction.</Description>
        <Category>Address Filtering</Category>
        <Properties />
      </Metadata>
      <Content xsi:type="FilterAsset">
        <Expression>*Address == 02-01-0A-01-01-64</Expression>
      </Content>
      <Properties />
    </Asset>
    <Asset>
      <Metadata>
        <UniqueId>482c7baf-4455-4b0f-a300-a53556356346</UniqueId>
        <Name>IPv4 Address Subnetting</Name>
        <Description>Filter IPv4 addresses by /16 subnet.  The in operator is used because the result is a set.</Description>
        <Category>Address Filtering</Category>
        <Properties />
      </Metadata>
      <Content xsi:type="FilterAsset">
        <Expression>IPv4.Address in 10.1.0.0/16</Expression>
      </Content>
      <Properties />
    </Asset>
    <Asset>
      <Metadata>
        <UniqueId>c93441fd-9f91-48d3-bea3-16d40f9aa389</UniqueId>
        <Name>Remove Wifi Noise</Name>
        <Description>Remove Wifi Noise by getting rid of Beacons.</Description>
        <Category>Remove Noise</Category>
        <Properties />
      </Metadata>
      <Content xsi:type="FilterAsset">
        <Expression>WiFi.FrameControl.Type != 0</Expression>
      </Content>
      <Properties />
    </Asset>
    <Asset>
      <Metadata>
        <UniqueId>12a7c982-88e7-437f-912f-40946b13647b</UniqueId>
        <Name>Phone Number pattern</Name>
        <Description>Uses a regular expression filter to find a phone number pattern.</Description>
        <Category>RegEx</Category>
        <Properties />
      </Metadata>
      <Content xsi:type="FilterAsset">
        <Expression>regex "(?!000)([0-6]\\d{2}|7([0-6]\\d|7[012]))([ -]?)(?!00)\\d\\d\\3(?!0000)\\d{4}"</Expression>
      </Content>
      <Properties />
    </Asset>
    <Asset>
      <Metadata>
        <UniqueId>268963bf-075a-4a35-abed-f1fd10a81dba</UniqueId>
        <Name>Email Address pattern</Name>
        <Description>Filters Email Addresses using a regular expression.</Description>
        <Category>RegEx</Category>
        <Properties />
      </Metadata>
      <Content xsi:type="FilterAsset">
        <Expression>regex @"^([\w\.\-]+)@([\w\-]+)((\.(\w){2,3})+)$"</Expression>
      </Content>
      <Properties />
    </Asset>
    <Asset>
      <Metadata>
        <UniqueId>805fea36-42e5-4759-bc96-ed75f377a7b8</UniqueId>
        <Name>SSN Pattern</Name>
        <Description>Uses a regular expressoin to gind a social security number.</Description>
        <Category>RegEx</Category>
        <Properties />
      </Metadata>
      <Content xsi:type="FilterAsset">
        <Expression>regex @"^\d{3}-\d{2}-\d{4}$"</Expression>
      </Content>
      <Properties />
    </Asset>
    <Asset>
      <Metadata>
        <UniqueId>0510de32-747b-409a-88a0-77e6992679a4</UniqueId>
        <Name>This near That</Name>
        <Description>Example to show how to locate the word "this" near the word "that".</Description>
        <Category>RegEx</Category>
        <Properties />
      </Metadata>
      <Content xsi:type="FilterAsset">
        <Expression>regex @"\bthis\W+(?:\w+\W+){1,6}?that\b"</Expression>
      </Content>
      <Properties />
    </Asset>
  </Assets>
  <Properties />
</AssetCollection>
