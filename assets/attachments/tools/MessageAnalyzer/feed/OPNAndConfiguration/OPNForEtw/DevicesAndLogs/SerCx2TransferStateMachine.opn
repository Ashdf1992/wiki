
protocol SerCx2TransferStateMachine;

string TransferState(ulong State)
{
    string stateStr;

    switch(State)
    {
        case 0x00000000 => stateStr = "SmEngineStateNull";
        case 0x57a70000 => stateStr = "SmEngineStateWaitingForPassive";
        case 0x57a70001 => stateStr = "SmEngineStatePaused";
        case 0x57a70bad => stateStr = "SmEngineStateUnexpected";
        case 0x57a70def => stateStr = "SmEngineStateDeferEvent";
        case 0x57A78000 => stateStr = "TransferStateBase";
        case 0x57a78001 => stateStr = "TransferStateCancelPioReadyNotification";
        case 0x57a78002 => stateStr = "TransferStateCompleteRequest";
        case 0x57a78003 => stateStr = "TransferStateEnablePioReadyNotification";
        case 0x57a78004 => stateStr = "TransferStateEnsureRequestNotCancelled";
        case 0x57a78005 => stateStr = "TransferStateFailRequest";
        case 0x57a78006 => stateStr = "TransferStateFailRequestWithStatusCancelled";
        case 0x57a78007 => stateStr = "TransferStateFailUnsupportedRequest";
        case 0x57a78008 => stateStr = "TransferStateIsPioSupported";
        case 0x57a78009 => stateStr = "TransferStateMarkRequestCancellable";
        case 0x57a7800a => stateStr = "TransferStatePreparePioAndStartPartialTransfer";
        case 0x57a7800b => stateStr = "TransferStateStartPartialPioTransfer";
        case 0x57a7800c => stateStr = "TransferStateUnmarkRequestCancellable";
        case 0x57a7800d => stateStr = "TransferStateUnmarkRequestCancellableOnTransferCompletion";
        case 0x57a7800e => stateStr = "TransferStateWaitForCancelTransfer";
        case 0x57a7800f => stateStr = "TransferStateWaitForCancelTransfer2";
        case 0x57a78010 => stateStr = "TransferStateWaitingForPioReadyNotification";
        case 0x57a78011 => stateStr = "TransferStateWaitingForTransferRequest";
        case 0x57a78012 => stateStr = "TransferStatePreparePioAndStartTransfer";
        case 0x57a78013 => stateStr = "TransferStateStartPioTransfer";
        case 0x57a78014 => stateStr = "TransferStateCancelPioReadyNotificaiton";
        case 0x57a78015 => stateStr = "TransferStateCleanupPioTransfer2";
        case 0x57a78016 => stateStr = "TransferStateCleanupPioTransfer3";
        case 0x57a78017 => stateStr = "TransferStateCleanupPioTransfer4";
        case 0x57a78018 => stateStr = "TransferStateContinuePioTransfer";
        case 0x57a78019 => stateStr = "TransferStatePreparePioTransfer";
        case 0x57a7801a => stateStr = "TransferStateSetTransferStatusCancelled";
        case 0x57a7801b => stateStr = "TransferStateSetTransferStatusForIntervalTimeout";
        case 0x57a7801c => stateStr = "TransferStateSetTransferStatusTotalTimeout";
        case 0x57a7801d => stateStr = "TransferStateStartTimerForIntervalTimeout";
        case 0x57a7801e => stateStr = "TransferStateStartTimerForTotalTimeout";
        case 0x57a7801f => stateStr = "TransferStateStopTimer";
        case 0x57a78020 => stateStr = "TransferStateStopTimer2";
        case 0x57a78021 => stateStr = "TransferStateStopTimer3";
        case 0x57a78022 => stateStr = "TransferStateWaitingForPioReadyNotification2";
        case 0x57a78023 => stateStr = "TransferStateWaitingForTimerFired";
        case 0x57a78024 => stateStr = "TransferStateWaitingForTimerFired2";
        case 0x57a78025 => stateStr = "TransferStateWaitingForTimerFired3";
        case 0x57a78026 => stateStr = "TransferStateCancelPioReadyNotificaiton2";
        case 0x57a78027 => stateStr = "TransferStateSetTransferStatusOnIntervalTimeout";
        case 0x57a78028 => stateStr = "TransferStateSetTransferStatusOnTotalTimeout";
        case 0x57a78029 => stateStr = "TransferStateOnNewTransfer";
        case 0x57a7802a => stateStr = "TransferStateSetTransferStatusOnTotalTimeout1";
        case 0x57a7802b => stateStr = "TransferStateSetTransferStatusOnTimeout";
        case 0x57a7802c => stateStr = "TransferStateSetTransferStatusOnTimeout1";
        case 0x57a7802d => stateStr = "TransferStateSetStatusForCancelledTransfer";
        case 0x57a7802e => stateStr = "TransferStateSetStatusForCancelledTransfer2";
        case 0x57a7802f => stateStr = "TransferStateSetStatusForUnsupportedRequest";
        case 0x57a78030 => stateStr = "TransferStateCancelSystemDma";
        case 0x57a78031 => stateStr = "TransferStateCancelSystemDma2";
        case 0x57a78032 => stateStr = "TransferStateCancelSystemDma4";
        case 0x57a78033 => stateStr = "TransferStateCancelSystemDmaBytesArrivedNotifcation3";
        case 0x57a78034 => stateStr = "TransferStateCancelSystemDmaBytesArrivedNotification";
        case 0x57a78035 => stateStr = "TransferStateCancelSystemDmaBytesArrivedNotification2";
        case 0x57a78036 => stateStr = "TransferStateCancelSystemDmaBytesArrivedNotification4";
        case 0x57a78037 => stateStr = "TransferStateChooseNextTransferMode";
        case 0x57a78038 => stateStr = "TransferStateCleanupSystemDmaTransfer";
        case 0x57a78039 => stateStr = "TransferStateCleanupSystemDmaTransfer2";
        case 0x57a7803a => stateStr = "TransferStateCleanupSystemDmaTransfer3";
        case 0x57a7803b => stateStr = "TransferStateCleanupSystemDmaTransfer4";
        case 0x57a7803c => stateStr = "TransferStateDidNewBytesArrive";
        case 0x57a7803d => stateStr = "TransferStateDidNewBytesArrive2";
        case 0x57a7803e => stateStr = "TransferStateEnableAndWaitForPioReadyNotification";
        case 0x57a7803f => stateStr = "TransferStateEnableSystemDmaBytesArrivedNotification";
        case 0x57a78040 => stateStr = "TransferStateHaveAnyBytesAlreadyBeenTransferred";
        case 0x57a78041 => stateStr = "TransferStateHaveAnyBytesAlreadyBeenTransferred2";
        case 0x57a78042 => stateStr = "TransferStateIsBytesArrivedNotificationSupported";
        case 0x57a78043 => stateStr = "TransferStateIsReceiveTransfer";
        case 0x57a78044 => stateStr = "TransferStatePrepareSystemDmaTransfer";
        case 0x57a78045 => stateStr = "TransferStateProgramSystemDma";
        case 0x57a78046 => stateStr = "TransferStateRecordSystemDmaBytesArrivedNotificationNotEnabled";
        case 0x57a78047 => stateStr = "TransferStateSetStatusForCancelledTransfer4";
        case 0x57a78048 => stateStr = "TransferStateSetTransferStatusOnTimeout2";
        case 0x57a78049 => stateStr = "TransferStateStartTimerForIntervalTimeout1";
        case 0x57a7804a => stateStr = "TransferStateStartTimerForIntervalTimeout2";
        case 0x57a7804b => stateStr = "TransferStateStartTimerForTotalTimeout1";
        case 0x57a7804c => stateStr = "TransferStateStopTimer4";
        case 0x57a7804d => stateStr = "TransferStateStopTimer5";
        case 0x57a7804e => stateStr = "TransferStateStopTimer6";
        case 0x57a7804f => stateStr = "TransferStateStopTimer7";
        case 0x57a78050 => stateStr = "TransferStateWaitingForBytesArrivedNotification";
        case 0x57a78051 => stateStr = "TransferStateWaitingForBytesArrivedNotification2";
        case 0x57a78052 => stateStr = "TransferStateWaitingForBytesArrivedNotification3";
        case 0x57a78053 => stateStr = "TransferStateWaitingForBytesArrivedNotification4";
        case 0x57a78054 => stateStr = "TransferStateWaitingForDmaToComplete";
        case 0x57a78055 => stateStr = "TransferStateWaitingForTimerFired4";
        case 0x57a78056 => stateStr = "TransferStateWaitingForTimerFired5";
        case 0x57a78057 => stateStr = "TransferStateWaitingForTimerFired6";
        case 0x57a78058 => stateStr = "TransferStateWaitingForTimerFired7";
        case 0x57a78059 => stateStr = "TransferStateWasSystemDmaBytesArrivedNotificationEnabled";
        case 0x57a7805a => stateStr = "TransferStateWasSystemDmaBytesArrivedNotificationEnabled2";
        case 0x57a7805b => stateStr = "TransferStateWasSystemDmaBytesArrivedNotificationEnabled3";
        case 0x57a7805c => stateStr = "TransferStateWasSystemDmaBytesArrivedNotificationEnabled4";
        case 0x57a7805d => stateStr = "TransferStateCancelSystemDmaTransfer";
        case 0x57a7805e => stateStr = "TransferStateCancelSystemDmaTransfer2";
        case 0x57a7805f => stateStr = "TransferStateCancelSystemDmaTransfer4";
        case 0x57a78060 => stateStr = "TransferStateProgramSystemDmaTransfer";
        case 0x57a78061 => stateStr = "TransferStateDidNewBytesArriveDuringSystemDma";
        case 0x57a78062 => stateStr = "TransferStateDidNewBytesArriveDuringSystemDma2";
        case 0x57a78063 => stateStr = "TransferStateIsSystemDmaBytesArrivedNotificationSupported";
        case 0x57a78064 => stateStr = "TransferStateHaveAnyBytesAlreadyBeenTransferred1";
        case 0x57a78065 => stateStr = "TransferStateSetTransferStatusOnTimeout3";
        case 0x57a78066 => stateStr = "TransferStateIsCleanupSystemDmaTransferNeeded";
        case 0x57a78067 => stateStr = "TransferStateIsPrepareSystemDmaTransferNeeded";
        case 0x57a78068 => stateStr = "TransferStateIsCleanupSystemDmaTransferNeeded2";
        case 0x57a78069 => stateStr = "TransferStateIsCleanupSystemDmaTransferNeeded3";
        case 0x57a7806a => stateStr = "TransferStateIsCleanupSystemDmaTransferNeeded4";
        case 0x57a7806b => stateStr = "TransferStateDidAnyBytesArriveDuringSystemDma";
        case 0x57a7806c => stateStr = "TransferStateSetTransferStatusOnTimeout4";
        case 0x57a7806d => stateStr = "TransferStateCopyBytesFromRingBuffer";
        case 0x57a7806e => stateStr = "TransferStateIsReceiveTransfer2";
        case 0x57a7806f => stateStr = "TransferStateIsCleanupPioTransferNeeded2";
        case 0x57a78070 => stateStr = "TransferStateIsCleanupPioTransferNeeded3";
        case 0x57a78071 => stateStr = "TransferStateIsCleanupPioTransferNeeded4";
        case 0x57a78072 => stateStr = "TransferStateIsPreparePioTransferNeeded";
        case 0x57a78073 => stateStr = "TransferStateProcessSystemDmaCompletion";
        case 0x57a78074 => stateStr = "TransferStateProcessSystemDmaCompletion1";
        case 0x57a78075 => stateStr = "TransferStateProcessSystemDmaCompletion2";
        case 0x57a78076 => stateStr = "TransferStateProcessSystemDmaCompletion4";
        case 0x57a78077 => stateStr = "TransferStateWaitingForDmaToComplete1";
        case 0x57a78078 => stateStr = "TransferStateWaitingForDmaToComplete2";
        case 0x57a78079 => stateStr = "TransferStateWaitingForDmaToComplete4";
        case 0x57a7807a => stateStr = "TransferStateSetStatusForCancelledTransferIfNoBytesTransferred2";
        case 0x57a7807b => stateStr = "TransferStateSetStatusForCancelledTransferIfNoBytesTransferred4";
        case 0x57a7807c => stateStr = "TransferStateProcessSystemDmaConfigureChannelFailure";
        case 0x57a7807d => stateStr = "TransferStateProcessSystemDmaConfigureChannelFailure1";
        case 0x57a7807e => stateStr = "TransferStateProcessSystemDmaConfigureChannelFailure2";
        case 0x57a7807f => stateStr = "TransferStateProcessSystemDmaConfigureChannelFailure4";
        case 0x57a78080 => stateStr = "TransferStateCancelDataDrain1";
        case 0x57a78081 => stateStr = "TransferStateCancelDataDrain2";
        case 0x57a78082 => stateStr = "TransferStateDrainData1";
        case 0x57a78083 => stateStr = "TransferStateIsDataDrainNeeded1";
        case 0x57a78084 => stateStr = "TransferStateIsDataPurgeNeeded";
        case 0x57a78085 => stateStr = "TransferStateIsDataPurgeNeeded1";
        case 0x57a78086 => stateStr = "TransferStateIsDataPurgeNeeded3";
        case 0x57a78087 => stateStr = "TransferStatePurgeData1";
        case 0x57a78088 => stateStr = "TransferStatePurgeData2";
        case 0x57a78089 => stateStr = "TransferStatePurgeData3";
        case 0x57a7808a => stateStr = "TransferStateSetStatusForCancelledTransferIfNoBytesTransferred3";
        case 0x57a7808b => stateStr = "TransferStateSetTransferStatusOnTimeout6";
        case 0x57a7808c => stateStr = "TransferStateCancelDataDrain";
        case 0x57a7808d => stateStr = "TransferStateDrainData";
        case 0x57a7808e => stateStr = "TransferStateIsDataDrainNeeded";
        case 0x57a7808f => stateStr = "TransferStateIsDataPurgeNeeded2";
        case 0x57a78090 => stateStr = "TransferStatePurgeData";
        case 0x57a78091 => stateStr = "TransferStateSetTransferStatusOnTimeout5";
        case 0x57a78092 => stateStr = "TransferStateIsDataDrainNeeded2";
        case 0x57a78093 => stateStr = "TransferStateStartTimerForTotalTimeout2";
        case 0x57a78094 => stateStr = "TransferStateWaitingForDrainComplete";
        case 0x57a78095 => stateStr = "TransferStateWaitingForDrainComplete2";
        case 0x57a78096 => stateStr = "TransferStateIsTransmitDataDrainOrPurgeNeeded";
        case 0x57a78097 => stateStr = "TransferStateIsTransmitDataDrainOrPurgeNeeded2";
        case 0x57a78098 => stateStr = "TransferStateIsTransmitDataDrainOrPurgeNeeded3";
        case 0x57a78099 => stateStr = "TransferStateIsTransmitDataDrainOrPurgeNeeded4";
        case 0x57a7809a => stateStr = "TransferStateIsPioTransmitDataDrainOrPurgeNeeded";
        case 0x57a7809b => stateStr = "TransferStateIsPioTransmitDataDrainOrPurgeNeeded2";
        case 0x57a7809c => stateStr = "TransferStateIsPioTransmitDataDrainOrPurgeNeeded3";
        case 0x57a7809d => stateStr = "TransferStateIsPioTransmitDataDrainOrPurgeNeeded4";
        case 0x57a7809e => stateStr = "TransferStateCancelPioDataDrain";
        case 0x57a7809f => stateStr = "TransferStateCancelPioDataDrain2";
        case 0x57a780a0 => stateStr = "TransferStatePioDrainData";
        case 0x57a780a1 => stateStr = "TransferStatePioPurgeData";
        case 0x57a780a2 => stateStr = "TransferStatePioPurgeData2";
        case 0x57a780a3 => stateStr = "TransferStateIsTransmitTransferAndPioDrainOrPurgeNeeded";
        case 0x57a780a4 => stateStr = "TransferStateIsTransmitTransferAndPioDrainOrPurgeNeeded2";
        case 0x57a780a5 => stateStr = "TransferStateIsTransmitTransferAndPioDrainOrPurgeNeeded3";
        case 0x57a780a6 => stateStr = "TransferStateIsTransmitTransferAndPioDrainOrPurgeNeeded4";
        case 0x57a780a7 => stateStr = "TransferStateAcquirePowerReferenceAsync";
        case 0x57a780a8 => stateStr = "TransferStateAcquirePowerReferenceSync";
        case 0x57a780a9 => stateStr = "TransferStateReleasePowerReference";
        case 0x57a780aa => stateStr = "TransferStateReleasePowerReference2";
        case 0x57a780ab => stateStr = "TransferStateCancelSystemDmaDataDrain";
        case 0x57a780ac => stateStr = "TransferStateCancelSystemDmaDataDrain2";
        case 0x57a780ad => stateStr = "TransferStateIsTransmitTransferAndSystemDmaDataDrainOrPurgeNeeded";
        case 0x57a780ae => stateStr = "TransferStateIsTransmitTransferAndSystemDmaDataDrainOrPurgeNeeded2";
        case 0x57a780af => stateStr = "TransferStateIsTransmitTransferAndSystemDmaDataDrainOrPurgeNeeded3";
        case 0x57a780b0 => stateStr = "TransferStateIsTransmitTransferAndSystemDmaDataDrainOrPurgeNeeded4";
        case 0x57a780b1 => stateStr = "TransferStateSystemDmaDrainData";
        case 0x57a780b2 => stateStr = "TransferStateSystemDmaPurgeData2";
        case 0x57a780b3 => stateStr = "TransferStateSystemDmaPurgeData3";
        case 0x57a780b4 => stateStr = "TransferStateSystemDmaPurgeData4";
        case 0x57a780b5 => stateStr = "TransferStateWaitingForDrainComplete3";
        case 0x57a780b6 => stateStr = "TransferStateWaitingForDrainComplete4";
        case 0x57a780b7 => stateStr = "TransferStateCancelPioFifoDrain";
        case 0x57a780b8 => stateStr = "TransferStateCancelPioFifoDrain2";
        case 0x57a780b9 => stateStr = "TransferStateCancelSystemDmaFifoDrain";
        case 0x57a780ba => stateStr = "TransferStateCancelSystemDmaFifoDrain2";
        case 0x57a780bb => stateStr = "TransferStateIsTransmitTransferAndPioFifoDrainOrPurgeNeeded";
        case 0x57a780bc => stateStr = "TransferStateIsTransmitTransferAndPioFifoDrainOrPurgeNeeded2";
        case 0x57a780bd => stateStr = "TransferStateIsTransmitTransferAndPioFifoDrainOrPurgeNeeded3";
        case 0x57a780be => stateStr = "TransferStateIsTransmitTransferAndPioFifoDrainOrPurgeNeeded4";
        case 0x57a780bf => stateStr = "TransferStateIsTransmitTransferAndSystemDmaFifoDrainOrPurgeNeeded";
        case 0x57a780c0 => stateStr = "TransferStateIsTransmitTransferAndSystemDmaFifoDrainOrPurgeNeeded2";
        case 0x57a780c1 => stateStr = "TransferStateIsTransmitTransferAndSystemDmaFifoDrainOrPurgeNeeded3";
        case 0x57a780c2 => stateStr = "TransferStateIsTransmitTransferAndSystemDmaFifoDrainOrPurgeNeeded4";
        case 0x57a780c3 => stateStr = "TransferStatePioDrainFifo";
        case 0x57a780c4 => stateStr = "TransferStatePioPurgeFifo";
        case 0x57a780c5 => stateStr = "TransferStatePioPurgeFifo2";
        case 0x57a780c6 => stateStr = "TransferStateSystemDmaDrainFifo";
        case 0x57a780c7 => stateStr = "TransferStateSystemDmaPurgeFifo2";
        case 0x57a780c8 => stateStr = "TransferStateSystemDmaPurgeFifo3";
        case 0x57a780c9 => stateStr = "TransferStateSystemDmaPurgeFifo4";
        case 0x57a780ca => stateStr = "TransferStateCancelCustomTransaction";
        case 0x57a780cb => stateStr = "TransferStateCancelCustomTransaction1";
        case 0x57a780cc => stateStr = "TransferStateCancelCustomTransaction2";
        case 0x57a780cd => stateStr = "TransferStateCleanupCustomTransaction2";
        case 0x57a780ce => stateStr = "TransferStateCleanupCustomTransaction3";
        case 0x57a780cf => stateStr = "TransferStateCleanupPioTransfer5";
        case 0x57a780d0 => stateStr = "TransferStateCustomTransactionQueryProgress";
        case 0x57a780d1 => stateStr = "TransferStateCustomTransactionQueryProgress2";
        case 0x57a780d2 => stateStr = "TransferStateDidAnyBytesArriveDuringCustomTransaction";
        case 0x57a780d3 => stateStr = "TransferStateEnableCustomTransactionNewDataNotification";
        case 0x57a780d4 => stateStr = "TransferStateErrorState10";
        case 0x57a780d5 => stateStr = "TransferStateErrorState11";
        case 0x57a780d6 => stateStr = "TransferStateHaveAnyBytesAlreadyBeenTransferred10";
        case 0x57a780d7 => stateStr = "TransferStateInitializeCustomTransaction";
        case 0x57a780d8 => stateStr = "TransferStateIsCleanupCustomTransactionNeeded";
        case 0x57a780d9 => stateStr = "TransferStateIsCleanupCustomTransactionNeeded2";
        case 0x57a780da => stateStr = "TransferStateIsCleanupCustomTransactionNeeded3";
        case 0x57a780db => stateStr = "TransferStateIsCleanupCustomTransactionNeeded4";
        case 0x57a780dc => stateStr = "TransferStateIsCleanupPioTransferNeeded5";
        case 0x57a780dd => stateStr = "TransferStateIsCustomTransactionNewDataNotificationSupported";
        case 0x57a780de => stateStr = "TransferStateIsInitializeCustomTransactionNeeded";
        case 0x57a780df => stateStr = "TransferStateIsPreparePioTransferNeeded1";
        case 0x57a780e0 => stateStr = "TransferStatePreparePioTransfer2";
        case 0x57a780e1 => stateStr = "TransferStateSetRequestStatusOnTimeout10";
        case 0x57a780e2 => stateStr = "TransferStateSetRequestStatusOnTimeout11";
        case 0x57a780e3 => stateStr = "TransferStateSetStatusForCancelledRequestIfNoBytesTransferred";
        case 0x57a780e4 => stateStr = "TransferStateSetStatusForCancelledRequestIfNoBytesTransferred11";
        case 0x57a780e5 => stateStr = "TransferStateSetStatusForCancelledRequestIfNoBytesTransferred2";
        case 0x57a780e6 => stateStr = "TransferStateSetStatusForCancelledRequestIfNoBytesTransferred4";
        case 0x57a780e7 => stateStr = "TransferStateStartCustomTransaction";
        case 0x57a780e8 => stateStr = "TransferStateStartTimerForIntervalTimeout10";
        case 0x57a780e9 => stateStr = "TransferStateStartTimerForIntervalTimeout11";
        case 0x57a780ea => stateStr = "TransferStateStartTimerForTotalTimeout10";
        case 0x57a780eb => stateStr = "TransferStateStopTimer10";
        case 0x57a780ec => stateStr = "TransferStateStopTimer11";
        case 0x57a780ed => stateStr = "TransferStateStopTimer12";
        case 0x57a780ee => stateStr = "TransferStateStopTimer13";
        case 0x57a780ef => stateStr = "TransferStateWaitingForCustomTransactionToComplete";
        case 0x57a780f0 => stateStr = "TransferStateWaitingForTimerFired10";
        case 0x57a780f1 => stateStr = "TransferStateWaitingForTimerFired11";
        case 0x57a780f2 => stateStr = "TransferStateWaitingForTimerFired12";
        case 0x57a780f3 => stateStr = "TransferStateWaitingForTimerFired13";
        case 0x57a780f4 => stateStr = "TransferStateCancelCustomReceiveTransaction";
        case 0x57a780f5 => stateStr = "TransferStateCustomReceiveTransactionQueryProgress2";
        case 0x57a780f6 => stateStr = "TransferStateCustomReveiveTransactionQueryProgress";
        case 0x57a780f7 => stateStr = "TransferStateDidAnyBytesArriveDuringCustomReceiveTransaction";
        case 0x57a780f8 => stateStr = "TransferStateEnableCustomReceiveTransactionNewDataNotification";
        case 0x57a780f9 => stateStr = "TransferStateHaveAnyBytesAlreadyBeenReceived";
        case 0x57a780fa => stateStr = "TransferStateHaveAnyBytesAlreadyBeenReceived1";
        case 0x57a780fb => stateStr = "TransferStateHaveAnyBytesAlreadyBeenReceived10";
        case 0x57a780fc => stateStr = "TransferStateIsCustomReceiveTransactionNewDataNotificationSupported";
        case 0x57a780fd => stateStr = "TransferStateWaitingForCustomReceiveTransactionToComplete";
        case 0x57a780fe => stateStr = "TransferStateSetRequestStatusOnTimeout";
        case 0x57a780ff => stateStr = "TransferStateSetRequestStatusOnTimeout2";
        case 0x57a78100 => stateStr = "TransferStateSetRequestStatusOnTimeout3";
        case 0x57a78101 => stateStr = "TransferStateSetRequestStatusOnTimeout4";
        case 0x57a78102 => stateStr = "TransferStateCleanupCustomTransaction";
        case 0x57a78103 => stateStr = "TransferStateCleanupCustomTransaction4";
        case 0x57a78104 => stateStr = "TransferStateCleanupCustomTransaction5";
        case 0x57a78105 => stateStr = "TransferStateIsCleanupCustomTransactionNeeded5";
        case 0x57a78106 => stateStr = "TransferStateIsReceiveTransaction";
        case 0x57a78107 => stateStr = "TransferStateIsReceiveTransaction10";
        case 0x57a78108 => stateStr = "TransferStateIsReceiveTransaction2";
        case 0x57a78109 => stateStr = "TransferStateStartPioTransfer2";
        case 0x57a7810a => stateStr = "TransferStateWaitingForCustomTransactionToComplete4";
        case 0x57a7810b => stateStr = "TransferStateWaitingForCustomTransactionToComplete5";
        case 0x57a7810c => stateStr = "TransferStateSetStatusForCancelledRequestIfNoBytesTransferred12";
        case 0x57a7810d => stateStr = "TransferStateCustomReceiveTransactionQueryProgress";
        case 0x57a7810e => stateStr = "TransferStateHaveAnyBytesBeenReceivedEarlierOrInCurrentCustomTransaction";
        case 0x57a7810f => stateStr = "TransferStateCancelSystemDmaNewDataNotifcation3";
        case 0x57a78110 => stateStr = "TransferStateCancelSystemDmaNewDataNotification";
        case 0x57a78111 => stateStr = "TransferStateCancelSystemDmaNewDataNotification2";
        case 0x57a78112 => stateStr = "TransferStateCancelSystemDmaNewDataNotification4";
        case 0x57a78113 => stateStr = "TransferStateChooseNextTransactionMode";
        case 0x57a78114 => stateStr = "TransferStateCleanupPioTransaction2";
        case 0x57a78115 => stateStr = "TransferStateCleanupPioTransaction3";
        case 0x57a78116 => stateStr = "TransferStateCleanupPioTransaction4";
        case 0x57a78117 => stateStr = "TransferStateCleanupPioTransaction5";
        case 0x57a78118 => stateStr = "TransferStateCleanupSystemDmaTransaction";
        case 0x57a78119 => stateStr = "TransferStateCleanupSystemDmaTransaction2";
        case 0x57a7811a => stateStr = "TransferStateCleanupSystemDmaTransaction3";
        case 0x57a7811b => stateStr = "TransferStateCleanupSystemDmaTransaction4";
        case 0x57a7811c => stateStr = "TransferStateContinuePioTransaction";
        case 0x57a7811d => stateStr = "TransferStateEnableSystemDmaNewDataNotification";
        case 0x57a7811e => stateStr = "TransferStateInitializePioTransaction";
        case 0x57a7811f => stateStr = "TransferStateInitializePioTransaction2";
        case 0x57a78120 => stateStr = "TransferStateInitializeSystemDmaTransaction";
        case 0x57a78121 => stateStr = "TransferStateIsCleanupPioTransactionNeeded2";
        case 0x57a78122 => stateStr = "TransferStateIsCleanupPioTransactionNeeded3";
        case 0x57a78123 => stateStr = "TransferStateIsCleanupPioTransactionNeeded4";
        case 0x57a78124 => stateStr = "TransferStateIsCleanupPioTransactionNeeded5";
        case 0x57a78125 => stateStr = "TransferStateIsCleanupSystemDmaTransactionNeeded";
        case 0x57a78126 => stateStr = "TransferStateIsCleanupSystemDmaTransactionNeeded2";
        case 0x57a78127 => stateStr = "TransferStateIsCleanupSystemDmaTransactionNeeded3";
        case 0x57a78128 => stateStr = "TransferStateIsCleanupSystemDmaTransactionNeeded4";
        case 0x57a78129 => stateStr = "TransferStateIsInitializePioTransactionNeeded";
        case 0x57a7812a => stateStr = "TransferStateIsInitializePioTransactionNeeded1";
        case 0x57a7812b => stateStr = "TransferStateIsInitializeSystemDmaTransactionNeeded";
        case 0x57a7812c => stateStr = "TransferStateIsSystemDmaNewDataNotificationSupported";
        case 0x57a7812d => stateStr = "TransferStateIsTransmitTransactionAndPioFifoDrainOrPurgeNeeded";
        case 0x57a7812e => stateStr = "TransferStateIsTransmitTransactionAndPioFifoDrainOrPurgeNeeded2";
        case 0x57a7812f => stateStr = "TransferStateIsTransmitTransactionAndPioFifoDrainOrPurgeNeeded3";
        case 0x57a78130 => stateStr = "TransferStateIsTransmitTransactionAndPioFifoDrainOrPurgeNeeded4";
        case 0x57a78131 => stateStr = "TransferStateIsTransmitTransactionAndSystemDmaFifoDrainOrPurgeNeeded";
        case 0x57a78132 => stateStr = "TransferStateIsTransmitTransactionAndSystemDmaFifoDrainOrPurgeNeeded2";
        case 0x57a78133 => stateStr = "TransferStateIsTransmitTransactionAndSystemDmaFifoDrainOrPurgeNeeded3";
        case 0x57a78134 => stateStr = "TransferStateIsTransmitTransactionAndSystemDmaFifoDrainOrPurgeNeeded4";
        case 0x57a78135 => stateStr = "TransferStateOnNewRequest";
        case 0x57a78136 => stateStr = "TransferStateProgramSystemDmaTransaction";
        case 0x57a78137 => stateStr = "TransferStateStartPioTransaction";
        case 0x57a78138 => stateStr = "TransferStateStartPioTransaction2";
        case 0x57a78139 => stateStr = "TransferStateWaitForCancelRequest";
        case 0x57a7813a => stateStr = "TransferStateWaitingForNewDataNotification";
        case 0x57a7813b => stateStr = "TransferStateWaitingForNewDataNotification2";
        case 0x57a7813c => stateStr = "TransferStateWaitingForNewDataNotification4";
        case 0x57a7813d => stateStr = "TransferStateWaitingForRequest";
        case 0x57a7813e => stateStr = "TransferStateWasSystemDmaNewDataNotificationEnabled";
        case 0x57a7813f => stateStr = "TransferStateWasSystemDmaNewDataNotificationEnabled2";
        case 0x57a78140 => stateStr = "TransferStateWasSystemDmaNewDataNotificationEnabled3";
        case 0x57a78141 => stateStr = "TransferStateWasSystemDmaNewDataNotificationEnabled4";
        case 0x57a78142 => stateStr = "TransferStateRecordSystemDmaNewDataNotificationNotEnabled";
        case 0x57a78143 => stateStr = "TransferStateHaveAnyBytesBeenReceivedEarlierOrInCurrentSystemDma";
        case 0x57a78144 => stateStr = "TransferStateHaveAnyBytesBeenReceivedEarlierOrDuringCurrentSystemDma";
        case 0x57a78145 => stateStr = "TransferStateErrorState";
        case 0x57a78146 => stateStr = "TransferStateSetStatusForCancelledRequestIfNoBytesTransferred3";
        case 0x57a78147 => stateStr = "TransferStateInternalInitializeSystemDmaTransaction";
        case 0x57a78148 => stateStr = "TransferStateIsSystemDmaNewDataNotificationEnabled";
        case 0x57a78149 => stateStr = "TransferStateIsSystemDmaNewDataNotificationEnabled2";
        case 0x57a7814a => stateStr = "TransferStateIsSystemDmaNewDataNotificationEnabled3";
        case 0x57a7814b => stateStr = "TransferStateIsSystemDmaNewDataNotificationEnabled4";
        case 0x57a7814c => stateStr = "TransferStateRecordSystemDmaNewDataNotificationFired";
        case 0x57a7814d => stateStr = "TransferStateErrorState2";
        case 0x57a7814e => stateStr = "TransferStateIsDpcWatchDogExpiringSoon";
        case 0x57a7814f => stateStr = "TransferStateSwitchToPassive";
        case 0x57a78150 => stateStr = "TransferStateHaveAllBytesForCurrentTransactionTransferred";
        case 0x57a78151 => stateStr = "TransferStateGetTimerMode";
        case 0x57a78152 => stateStr = "TransferStateReduceRequestLengthTo1Byte";
        case 0x57a78153 => stateStr = "TransferStateGetTimerMode2";
        case 0x57a78154 => stateStr = "TransferStateGetTimeoutMode";
        case 0x57a78155 => stateStr = "TransferStateGetTimeoutMode2";
        case 0x57a78156 => stateStr = "TransferStateIsPioOnTimeoutUsingRegularPioMode";
        case 0x57a78157 => stateStr = "TransferStateIsSingleByteRequest";
        case 0x57a78158 => stateStr = "TransferStateIsSingleByteRequest10";
        case 0x57a78159 => stateStr = "TransferStateIsReceiveTransaction1";
        case 0x57a7815a => stateStr = "TransferStateIsReceiveTransaction3";
        default => stateStr = "Unknown State " + (State as string);
    }

    return stateStr;
}

string TransferEvent(ulong Event)
{
    string eventStr;

    switch(Event & 0xFFFFFFF0)
    {
        case 0x00000000 => eventStr = "SmEngineEventNull";
        case 0xebe00010 => eventStr = "SmEngineEventNeedsPassive";
        case 0xebe00020 => eventStr = "SmEngineEventPaused";
        case 0xebe00030 => eventStr = "SmEngineEventStart";
        case 0xebe78000 => eventStr = "TransferEventBase";
        case 0xebe78010 => eventStr = "TransferEventCancelTransfer";
        case 0xebe78020 => eventStr = "TransferEventFail";
        case 0xebe78030 => eventStr = "TransferEventIoRecieved";
        case 0xebe78040 => eventStr = "TransferEventPioReady";
        case 0xebe78050 => eventStr = "TransferEventPioTransferComplete";
        case 0xebe78060 => eventStr = "TransferEventPioTransferPartiallyComplete";
        case 0xebe78070 => eventStr = "TransferEventSuccess";
        case 0xebe78080 => eventStr = "TransferEventSyncFail";
        case 0xebe78090 => eventStr = "TransferEventSyncSuccess";
        case 0xebe780a0 => eventStr = "TransferEventIoReceived";
        case 0xebe780b0 => eventStr = "TransferEventIntervalTimeout";
        case 0xebe780c0 => eventStr = "TransferEventTotalTimeout";
        case 0xebe780d0 => eventStr = "TransferEventPioTransferNoProgress";
        case 0xebe780e0 => eventStr = "TransferEventBytesArrivedDuringReceiveSystemDma";
        case 0xebe780f0 => eventStr = "TransferEventSystemDmaCancelled";
        case 0xebe78100 => eventStr = "TransferEventSystemDmaComplete";
        case 0xebe78110 => eventStr = "TransferEventSystemDmaCompleteWithError";
        case 0xebe78120 => eventStr = "TransferEventNo";
        case 0xebe78130 => eventStr = "TransferEventNoTransferModeSupported";
        case 0xebe78140 => eventStr = "TransferEventPioMode";
        case 0xebe78150 => eventStr = "TransferEventSystemDmaMode";
        case 0xebe78160 => eventStr = "TransferEventTransferCompleted";
        case 0xebe78170 => eventStr = "TransferEventYes";
        case 0xebe78180 => eventStr = "TransferEventSystemDmaCompletionCalled";
        case 0xebe78190 => eventStr = "TransferEventSystemDmaContinue";
        case 0xebe781a0 => eventStr = "TransferEventSystemDmaConfigureChannelFailed";
        case 0xebe781b0 => eventStr = "TransferEventDataDrainComplete";
        case 0xebe781c0 => eventStr = "TransferEventDataPurgeComplete";
        case 0xebe781d0 => eventStr = "TransferEventD0Pending";
        case 0xebe781e0 => eventStr = "TransferEventInD0";
        case 0xebe781f0 => eventStr = "TransferEventFifoDrainComplete";
        case 0xebe78200 => eventStr = "TransferEventFifoPurgeComplete";
        case 0xebe78210 => eventStr = "TransferEventCancelRequest";
        case 0xebe78220 => eventStr = "TransferEventCustomMode";
        case 0xebe78230 => eventStr = "TransferEventCustomTransactionBytesTransferred";
        case 0xebe78240 => eventStr = "TransferEventCustomTransactionCompletedWithCancel";
        case 0xebe78250 => eventStr = "TransferEventCustomTransactionCompletedWithError";
        case 0xebe78260 => eventStr = "TransferEventCustomTransactionCompletedWithSuccess";
        case 0xebe78270 => eventStr = "TransferEventCustomTransactionNoProgress";
        case 0xebe78280 => eventStr = "TransferEventNewDataNotification";
        case 0xebe78290 => eventStr = "TransferEventPioOnTimeoutMode";
        case 0xebe782a0 => eventStr = "TransferEventCustomReceiveTransactionBytesTransferred";
        case 0xebe782b0 => eventStr = "TransferEventCustomReceiveTransactionNoProgress";
        case 0xebe782c0 => eventStr = "TransferEventNewReceiveDataNotification";
        case 0xebe782d0 => eventStr = "TransferEventNewDataReceivedNotification";
        case 0xebe782e0 => eventStr = "TransferEventNoTransactionModeSupported";
        case 0xebe782f0 => eventStr = "TransferEventPioTransactionComplete";
        case 0xebe78300 => eventStr = "TransferEventPioTransactionNoProgress";
        case 0xebe78310 => eventStr = "TransferEventPioTransactionPartiallyComplete";
        case 0xebe78320 => eventStr = "TransferEventRequestCompleted";
        case 0xebe78330 => eventStr = "TransferEventBytesCopied";
        case 0xebe78340 => eventStr = "TransferEventNoBytesCopied";
        case 0xebe78350 => eventStr = "TransferEventTimeoutModeImmediate";
        case 0xebe78360 => eventStr = "TransferEventTimeoutModeImmediateOr1Byte";
        case 0xebe78370 => eventStr = "TransferEventTimeoutModeTotalOrInterval";
        case 0xebe78380 => eventStr = "TransferEventPioOnTimeoutUsingRegularPioMode";
        default => eventStr = "Unknown Event " + (Event as string);
    }

    return eventStr;
}
