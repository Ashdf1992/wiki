protocol Windows_Kernel_Trace_ProcessTracking;

using Microsoft_Windows_Winsock_AFD;
using Microsoft_Windows_TCPIP;
using Windows_Kernel_Trace;



//
//	Set process name actors
//
autostart actor ProcessObserve(Windows_Kernel_Trace.ep_Windows_Kernel_Trace procmsg_ep)
{
	observe procmsg_ep accepts e:(any message)
    {
		if(!HasField(e, "ProcessId"))
			return;
		
		dynamic d = e;
			
		any processNameValue;
		if(HasField(e, "ImageFileName"))
			processNameValue = d.ImageFileName;
		else
		if(HasField(e, "ProcessName"))
			processNameValue = d.ProcessName;
		else
			return;
			
		if (!(processNameValue is string))
			return;		
		string processName = processNameValue as string;


		var processIdValue = d.ProcessId;
		if (!(processIdValue is uint))
			return;
		uint processId = processIdValue as uint;


		e.SetProcessName(processId, processName);
    }

}
