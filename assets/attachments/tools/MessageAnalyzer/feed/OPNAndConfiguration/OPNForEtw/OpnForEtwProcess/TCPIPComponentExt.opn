module ExtendTCPIP;

using Utility;
using Microsoft_Windows_TCPIP;
using WindowsReference;
using IANA;

// -------------------------------------------------------------------
// Event_1002

(IPv4Address | IPv6Address) get Source(this Event_1002 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

(IPv4Address | IPv6Address) get Destination(this Event_1002 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1002 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv4Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv6Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1002 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

ushort get DestinationPort(this Event_1002 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Port;            
        }
    }
    return 0;
}

string get Transport(this Event_1002 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1015

(IPv4Address | IPv6Address) get Source(this Event_1015 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

(IPv4Address | IPv6Address) get Destination(this Event_1015 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1015 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv4Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv6Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1015 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

ushort get DestinationPort(this Event_1015 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Port;            
        }
    }
    return 0;
}

string get Transport(this Event_1015 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1030

(IPv4Address | IPv6Address) get Source(this Event_1030 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

(IPv4Address | IPv6Address) get Destination(this Event_1030 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1030 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv4Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv6Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1030 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

ushort get DestinationPort(this Event_1030 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Port;            
        }
    }
    return 0;
}

string get Transport(this Event_1030 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1182

(IPv4Address | IPv6Address) get Source(this Event_1182 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

(IPv4Address | IPv6Address) get Destination(this Event_1182 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1182 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv4Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv6Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1182 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

ushort get DestinationPort(this Event_1182 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Port;            
        }
    }
    return 0;
}

string get Transport(this Event_1182 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1183

(IPv4Address | IPv6Address) get Source(this Event_1183 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

(IPv4Address | IPv6Address) get Destination(this Event_1183 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1183 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv4Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv6Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1183 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

ushort get DestinationPort(this Event_1183 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Port;            
        }
    }
    return 0;
}

string get Transport(this Event_1183 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1184

(IPv4Address | IPv6Address) get Source(this Event_1184 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

(IPv4Address | IPv6Address) get Destination(this Event_1184 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1184 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv4Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv6Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1184 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

ushort get DestinationPort(this Event_1184 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Port;            
        }
    }
    return 0;
}

string get Transport(this Event_1184 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1185

(IPv4Address | IPv6Address) get Source(this Event_1185 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

(IPv4Address | IPv6Address) get Destination(this Event_1185 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1185 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv4Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv6Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1185 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

ushort get DestinationPort(this Event_1185 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Port;            
        }
    }
    return 0;
}

string get Transport(this Event_1185 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1186

(IPv4Address | IPv6Address) get Source(this Event_1186 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

(IPv4Address | IPv6Address) get Destination(this Event_1186 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1186 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv4Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv6Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1186 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

ushort get DestinationPort(this Event_1186 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Port;            
        }
    }
    return 0;
}

string get Transport(this Event_1186 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1187

(IPv4Address | IPv6Address) get Source(this Event_1187 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

(IPv4Address | IPv6Address) get Destination(this Event_1187 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1187 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv4Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv6Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1187 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

ushort get DestinationPort(this Event_1187 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Port;            
        }
    }
    return 0;
}

string get Transport(this Event_1187 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1364

(IPv4Address | IPv6Address) get Source(this Event_1364 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

(IPv4Address | IPv6Address) get Destination(this Event_1364 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1364 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv4Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv6Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1364 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

ushort get DestinationPort(this Event_1364 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Port;            
        }
    }
    return 0;
}

string get Transport(this Event_1364 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1365

(IPv4Address | IPv6Address) get Source(this Event_1365 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

(IPv4Address | IPv6Address) get Destination(this Event_1365 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1365 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv4Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv6Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1365 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

ushort get DestinationPort(this Event_1365 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Port;            
        }
    }
    return 0;
}

string get Transport(this Event_1365 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1300

(IPv4Address | IPv6Address) get Source(this Event_1300 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

(IPv4Address | IPv6Address) get Destination(this Event_1300 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1300 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv4Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv6Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1300 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

ushort get DestinationPort(this Event_1300 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Port;            
        }
    }
    return 0;
}

string get Transport(this Event_1300 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1324

(IPv4Address | IPv6Address) get Source(this Event_1324 e)
{
    if(e.IP_Address is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.IP_Address as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1324 e)
{
    if(e.IP_Address is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.IP_Address as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            return (src + " - unspecified");
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            return (src + " - unspecified");
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1324 e)
{
    if(e.IP_Address is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.IP_Address as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Port;            
        }
    }
    return 0;
}

string get Transport(this Event_1324 e)
{
    if(e.IP_Address is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.IP_Address as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;

            ushort sp = s.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            return ("TCP: " + src + " - unspecified");
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;

            ushort sp = s.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            return ("TCP: " + src + " - unspecified");
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1327

(IPv4Address | IPv6Address) get Source(this Event_1327 e)
{
    if(e.Preferred_Source_IP_Address is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.Preferred_Source_IP_Address as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

(IPv4Address | IPv6Address) get Destination(this Event_1327 e)
{
    if(e.Preferred_Destination_IP_Address is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.Preferred_Destination_IP_Address as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1327 e)
{
    if(e.Preferred_Source_IP_Address is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.Preferred_Source_IP_Address as SocketAddress;
        SocketAddress da = e.Preferred_Destination_IP_Address as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv4Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv6Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1327 e)
{
    if(e.Preferred_Source_IP_Address is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.Preferred_Source_IP_Address as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

ushort get DestinationPort(this Event_1327 e)
{
    if(e.Preferred_Destination_IP_Address is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.Preferred_Destination_IP_Address as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Port;            
        }
    }
    return 0;
}

string get Transport(this Event_1327 e)
{
    if(e.Preferred_Source_IP_Address is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.Preferred_Source_IP_Address as SocketAddress;
        SocketAddress da = e.Preferred_Destination_IP_Address as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1117

(IPv4Address | IPv6Address) get Source(this Event_1117 e)
{
    if(e.SocketAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.SocketAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1117 e)
{
    if(e.SocketAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.SocketAddress as SocketAddress;
        SocketAddress da = e.SocketAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv4Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv6Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1117 e)
{
    if(e.SocketAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.SocketAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

string get Transport(this Event_1117 e)
{
    if(e.SocketAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.SocketAddress as SocketAddress;
        SocketAddress da = e.SocketAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1118

(IPv4Address | IPv6Address) get Source(this Event_1118 e)
{
    if(e.SocketAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.SocketAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1118 e)
{
    if(e.SocketAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.SocketAddress as SocketAddress;
        SocketAddress da = e.SocketAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv4Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv6Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1118 e)
{
    if(e.SocketAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.SocketAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

string get Transport(this Event_1118 e)
{
    if(e.SocketAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.SocketAddress as SocketAddress;
        SocketAddress da = e.SocketAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1119

(IPv4Address | IPv6Address) get Source(this Event_1119 e)
{
    if(e.SocketAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.SocketAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1119 e)
{
    if(e.SocketAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.SocketAddress as SocketAddress;
        SocketAddress da = e.SocketAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv4Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv6Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1119 e)
{
    if(e.SocketAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.SocketAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

string get Transport(this Event_1119 e)
{
    if(e.SocketAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.SocketAddress as SocketAddress;
        SocketAddress da = e.SocketAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1120

(IPv4Address | IPv6Address) get Source(this Event_1120 e)
{
    if(e.SocketAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.SocketAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1120 e)
{
    if(e.SocketAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.SocketAddress as SocketAddress;
        SocketAddress da = e.SocketAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv4Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv6Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1120 e)
{
    if(e.SocketAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.SocketAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

string get Transport(this Event_1120 e)
{
    if(e.SocketAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.SocketAddress as SocketAddress;
        SocketAddress da = e.SocketAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1121

(IPv4Address | IPv6Address) get Source(this Event_1121 e)
{
    if(e.SocketAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.SocketAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1121 e)
{
    if(e.SocketAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.SocketAddress as SocketAddress;
        SocketAddress da = e.SocketAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv4Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv6Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1121 e)
{
    if(e.SocketAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.SocketAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

string get Transport(this Event_1121 e)
{
    if(e.SocketAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.SocketAddress as SocketAddress;
        SocketAddress da = e.SocketAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1122

(IPv4Address | IPv6Address) get Source(this Event_1122 e)
{
    if(e.SocketAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.SocketAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1122 e)
{
    if(e.SocketAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.SocketAddress as SocketAddress;
        SocketAddress da = e.SocketAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv4Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv6Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1122 e)
{
    if(e.SocketAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.SocketAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

string get Transport(this Event_1122 e)
{
    if(e.SocketAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.SocketAddress as SocketAddress;
        SocketAddress da = e.SocketAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1123

(IPv4Address | IPv6Address) get Source(this Event_1123 e)
{
    if(e.SocketAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.SocketAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1123 e)
{
    if(e.SocketAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.SocketAddress as SocketAddress;
        SocketAddress da = e.SocketAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv4Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv6Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1123 e)
{
    if(e.SocketAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.SocketAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

string get Transport(this Event_1123 e)
{
    if(e.SocketAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.SocketAddress as SocketAddress;
        SocketAddress da = e.SocketAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1124

(IPv4Address | IPv6Address) get Source(this Event_1124 e)
{
    if(e.SocketAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.SocketAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1124 e)
{
    if(e.SocketAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.SocketAddress as SocketAddress;
        SocketAddress da = e.SocketAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv4Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv6Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1124 e)
{
    if(e.SocketAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.SocketAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

string get Transport(this Event_1124 e)
{
    if(e.SocketAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.SocketAddress as SocketAddress;
        SocketAddress da = e.SocketAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1005

(IPv4Address | IPv6Address) get Source(this Event_1005 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1005 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            return (src + " - unspecified");
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            return (src + " - unspecified");
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1005 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

string get Transport(this Event_1005 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;

            ushort sp = s.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            return ("TCP: " + src + " - unspecified");
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;

            ushort sp = s.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            return ("TCP: " + src + " - unspecified");
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1006

(IPv4Address | IPv6Address) get Source(this Event_1006 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1006 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            return (src + " - unspecified");
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            return (src + " - unspecified");
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1006 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

string get Transport(this Event_1006 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;

            ushort sp = s.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            return ("TCP: " + src + " - unspecified");
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;

            ushort sp = s.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            return ("TCP: " + src + " - unspecified");
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1007

(IPv4Address | IPv6Address) get Source(this Event_1007 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1007 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            return (src + " - unspecified");
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            return (src + " - unspecified");
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1007 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

string get Transport(this Event_1007 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;

            ushort sp = s.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            return ("TCP: " + src + " - unspecified");
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;

            ushort sp = s.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            return ("TCP: " + src + " - unspecified");
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1008

(IPv4Address | IPv6Address) get Source(this Event_1008 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1008 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            return (src + " - unspecified");
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            return (src + " - unspecified");
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1008 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

string get Transport(this Event_1008 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;

            ushort sp = s.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            return ("TCP: " + src + " - unspecified");
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;

            ushort sp = s.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            return ("TCP: " + src + " - unspecified");
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1009

(IPv4Address | IPv6Address) get Source(this Event_1009 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1009 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            return (src + " - unspecified");
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            return (src + " - unspecified");
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1009 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

string get Transport(this Event_1009 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;

            ushort sp = s.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            return ("TCP: " + src + " - unspecified");
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;

            ushort sp = s.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            return ("TCP: " + src + " - unspecified");
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1366

(IPv4Address | IPv6Address) get Source(this Event_1366 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1366 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            return (src + " - unspecified");
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            return (src + " - unspecified");
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1366 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

string get Transport(this Event_1366 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;

            ushort sp = s.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            return ("TCP: " + src + " - unspecified");
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;

            ushort sp = s.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            return ("TCP: " + src + " - unspecified");
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1169

(IPv4Address | IPv6Address) get Source(this Event_1169 e)
{
    if(e.LocalSockAddr is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalSockAddr as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

(IPv4Address | IPv6Address) get Destination(this Event_1169 e)
{
    if(e.RemoteSockAddr is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteSockAddr as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1169 e)
{
    if(e.LocalSockAddr is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalSockAddr as SocketAddress;
        SocketAddress da = e.RemoteSockAddr as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv4Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv6Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1169 e)
{
    if(e.LocalSockAddr is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalSockAddr as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

ushort get DestinationPort(this Event_1169 e)
{
    if(e.RemoteSockAddr is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteSockAddr as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Port;            
        }
    }
    return 0;
}

string get Transport(this Event_1169 e)
{
    if(e.LocalSockAddr is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalSockAddr as SocketAddress;
        SocketAddress da = e.RemoteSockAddr as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1170

(IPv4Address | IPv6Address) get Source(this Event_1170 e)
{
    if(e.LocalSockAddr is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalSockAddr as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

(IPv4Address | IPv6Address) get Destination(this Event_1170 e)
{
    if(e.RemoteSockAddr is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteSockAddr as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1170 e)
{
    if(e.LocalSockAddr is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalSockAddr as SocketAddress;
        SocketAddress da = e.RemoteSockAddr as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv4Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv6Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1170 e)
{
    if(e.LocalSockAddr is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalSockAddr as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

ushort get DestinationPort(this Event_1170 e)
{
    if(e.RemoteSockAddr is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteSockAddr as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Port;            
        }
    }
    return 0;
}

string get Transport(this Event_1170 e)
{
    if(e.LocalSockAddr is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalSockAddr as SocketAddress;
        SocketAddress da = e.RemoteSockAddr as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1214

(IPv4Address | IPv6Address) get Source(this Event_1214 e)
{
    if(e.LocalSockAddr is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalSockAddr as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

(IPv4Address | IPv6Address) get Destination(this Event_1214 e)
{
    if(e.RemoteSockAddr is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteSockAddr as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1214 e)
{
    if(e.LocalSockAddr is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalSockAddr as SocketAddress;
        SocketAddress da = e.RemoteSockAddr as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv4Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv6Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1214 e)
{
    if(e.LocalSockAddr is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalSockAddr as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

ushort get DestinationPort(this Event_1214 e)
{
    if(e.RemoteSockAddr is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteSockAddr as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Port;            
        }
    }
    return 0;
}

string get Transport(this Event_1214 e)
{
    if(e.LocalSockAddr is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalSockAddr as SocketAddress;
        SocketAddress da = e.RemoteSockAddr as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1014

(IPv4Address | IPv6Address) get Source(this Event_1014 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

(IPv4Address | IPv6Address) get Destination(this Event_1014 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1014 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv4Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv6Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1014 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

ushort get DestinationPort(this Event_1014 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Port;            
        }
    }
    return 0;
}

string get Transport(this Event_1014 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1016

(IPv4Address | IPv6Address) get Source(this Event_1016 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

(IPv4Address | IPv6Address) get Destination(this Event_1016 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1016 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv4Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv6Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1016 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

ushort get DestinationPort(this Event_1016 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Port;            
        }
    }
    return 0;
}

string get Transport(this Event_1016 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1017

(IPv4Address | IPv6Address) get Source(this Event_1017 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

(IPv4Address | IPv6Address) get Destination(this Event_1017 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1017 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv4Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv6Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1017 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

ushort get DestinationPort(this Event_1017 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Port;            
        }
    }
    return 0;
}

string get Transport(this Event_1017 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1018

(IPv4Address | IPv6Address) get Source(this Event_1018 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

(IPv4Address | IPv6Address) get Destination(this Event_1018 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1018 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv4Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv6Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1018 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

ushort get DestinationPort(this Event_1018 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Port;            
        }
    }
    return 0;
}

string get Transport(this Event_1018 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1019

(IPv4Address | IPv6Address) get Source(this Event_1019 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

(IPv4Address | IPv6Address) get Destination(this Event_1019 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1019 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv4Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv6Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1019 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

ushort get DestinationPort(this Event_1019 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Port;            
        }
    }
    return 0;
}

string get Transport(this Event_1019 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1020

(IPv4Address | IPv6Address) get Source(this Event_1020 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

(IPv4Address | IPv6Address) get Destination(this Event_1020 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1020 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv4Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv6Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1020 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

ushort get DestinationPort(this Event_1020 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Port;            
        }
    }
    return 0;
}

string get Transport(this Event_1020 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1021

(IPv4Address | IPv6Address) get Source(this Event_1021 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

(IPv4Address | IPv6Address) get Destination(this Event_1021 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1021 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv4Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv6Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1021 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

ushort get DestinationPort(this Event_1021 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Port;            
        }
    }
    return 0;
}

string get Transport(this Event_1021 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1024

(IPv4Address | IPv6Address) get Source(this Event_1024 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

(IPv4Address | IPv6Address) get Destination(this Event_1024 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1024 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv4Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv6Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1024 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

ushort get DestinationPort(this Event_1024 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Port;            
        }
    }
    return 0;
}

string get Transport(this Event_1024 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1027

(IPv4Address | IPv6Address) get Source(this Event_1027 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

(IPv4Address | IPv6Address) get Destination(this Event_1027 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1027 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv4Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv6Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1027 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

ushort get DestinationPort(this Event_1027 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Port;            
        }
    }
    return 0;
}

string get Transport(this Event_1027 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1029

(IPv4Address | IPv6Address) get Source(this Event_1029 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

(IPv4Address | IPv6Address) get Destination(this Event_1029 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1029 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv4Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv6Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1029 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

ushort get DestinationPort(this Event_1029 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Port;            
        }
    }
    return 0;
}

string get Transport(this Event_1029 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1031

(IPv4Address | IPv6Address) get Source(this Event_1031 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

(IPv4Address | IPv6Address) get Destination(this Event_1031 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1031 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv4Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv6Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1031 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

ushort get DestinationPort(this Event_1031 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Port;            
        }
    }
    return 0;
}

string get Transport(this Event_1031 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1032

(IPv4Address | IPv6Address) get Source(this Event_1032 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

(IPv4Address | IPv6Address) get Destination(this Event_1032 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1032 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv4Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv6Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1032 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

ushort get DestinationPort(this Event_1032 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Port;            
        }
    }
    return 0;
}

string get Transport(this Event_1032 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1033

(IPv4Address | IPv6Address) get Source(this Event_1033 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

(IPv4Address | IPv6Address) get Destination(this Event_1033 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1033 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv4Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv6Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1033 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

ushort get DestinationPort(this Event_1033 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Port;            
        }
    }
    return 0;
}

string get Transport(this Event_1033 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1034

(IPv4Address | IPv6Address) get Source(this Event_1034 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

(IPv4Address | IPv6Address) get Destination(this Event_1034 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1034 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv4Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv6Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1034 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

ushort get DestinationPort(this Event_1034 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Port;            
        }
    }
    return 0;
}

string get Transport(this Event_1034 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1035

(IPv4Address | IPv6Address) get Source(this Event_1035 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

(IPv4Address | IPv6Address) get Destination(this Event_1035 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1035 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv4Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv6Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1035 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

ushort get DestinationPort(this Event_1035 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Port;            
        }
    }
    return 0;
}

string get Transport(this Event_1035 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1036

(IPv4Address | IPv6Address) get Source(this Event_1036 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

(IPv4Address | IPv6Address) get Destination(this Event_1036 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1036 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv4Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv6Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1036 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

ushort get DestinationPort(this Event_1036 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Port;            
        }
    }
    return 0;
}

string get Transport(this Event_1036 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1037

(IPv4Address | IPv6Address) get Source(this Event_1037 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

(IPv4Address | IPv6Address) get Destination(this Event_1037 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1037 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv4Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv6Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1037 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

ushort get DestinationPort(this Event_1037 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Port;            
        }
    }
    return 0;
}

string get Transport(this Event_1037 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1038

(IPv4Address | IPv6Address) get Source(this Event_1038 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

(IPv4Address | IPv6Address) get Destination(this Event_1038 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1038 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv4Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv6Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1038 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

ushort get DestinationPort(this Event_1038 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Port;            
        }
    }
    return 0;
}

string get Transport(this Event_1038 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1039

(IPv4Address | IPv6Address) get Source(this Event_1039 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

(IPv4Address | IPv6Address) get Destination(this Event_1039 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1039 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv4Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv6Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1039 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

ushort get DestinationPort(this Event_1039 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Port;            
        }
    }
    return 0;
}

string get Transport(this Event_1039 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1040

(IPv4Address | IPv6Address) get Source(this Event_1040 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

(IPv4Address | IPv6Address) get Destination(this Event_1040 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1040 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv4Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv6Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1040 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

ushort get DestinationPort(this Event_1040 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Port;            
        }
    }
    return 0;
}

string get Transport(this Event_1040 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1043

(IPv4Address | IPv6Address) get Source(this Event_1043 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

(IPv4Address | IPv6Address) get Destination(this Event_1043 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1043 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv4Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv6Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1043 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

ushort get DestinationPort(this Event_1043 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Port;            
        }
    }
    return 0;
}

string get Transport(this Event_1043 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1044

(IPv4Address | IPv6Address) get Source(this Event_1044 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

(IPv4Address | IPv6Address) get Destination(this Event_1044 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1044 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv4Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv6Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1044 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

ushort get DestinationPort(this Event_1044 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Port;            
        }
    }
    return 0;
}

string get Transport(this Event_1044 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1045

(IPv4Address | IPv6Address) get Source(this Event_1045 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

(IPv4Address | IPv6Address) get Destination(this Event_1045 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1045 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv4Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv6Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1045 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

ushort get DestinationPort(this Event_1045 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Port;            
        }
    }
    return 0;
}

string get Transport(this Event_1045 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1046

(IPv4Address | IPv6Address) get Source(this Event_1046 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

(IPv4Address | IPv6Address) get Destination(this Event_1046 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1046 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv4Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv6Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1046 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

ushort get DestinationPort(this Event_1046 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Port;            
        }
    }
    return 0;
}

string get Transport(this Event_1046 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1047

(IPv4Address | IPv6Address) get Source(this Event_1047 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

(IPv4Address | IPv6Address) get Destination(this Event_1047 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1047 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv4Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv6Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1047 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

ushort get DestinationPort(this Event_1047 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Port;            
        }
    }
    return 0;
}

string get Transport(this Event_1047 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1048

(IPv4Address | IPv6Address) get Source(this Event_1048 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

(IPv4Address | IPv6Address) get Destination(this Event_1048 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1048 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv4Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv6Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1048 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

ushort get DestinationPort(this Event_1048 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Port;            
        }
    }
    return 0;
}

string get Transport(this Event_1048 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1049

(IPv4Address | IPv6Address) get Source(this Event_1049 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

(IPv4Address | IPv6Address) get Destination(this Event_1049 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1049 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv4Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv6Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1049 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

ushort get DestinationPort(this Event_1049 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Port;            
        }
    }
    return 0;
}

string get Transport(this Event_1049 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1050

(IPv4Address | IPv6Address) get Source(this Event_1050 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

(IPv4Address | IPv6Address) get Destination(this Event_1050 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1050 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv4Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv6Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1050 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

ushort get DestinationPort(this Event_1050 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Port;            
        }
    }
    return 0;
}

string get Transport(this Event_1050 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1200

(IPv4Address | IPv6Address) get Source(this Event_1200 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

(IPv4Address | IPv6Address) get Destination(this Event_1200 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1200 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv4Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv6Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1200 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

ushort get DestinationPort(this Event_1200 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Port;            
        }
    }
    return 0;
}

string get Transport(this Event_1200 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1201

(IPv4Address | IPv6Address) get Source(this Event_1201 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

(IPv4Address | IPv6Address) get Destination(this Event_1201 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Address;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Address;            
        }
        else
        {
            return null;
        }
    }
    return null;
}

string get Network(this Event_1201 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            string src = GetAlias("Utility.IPv4Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv4Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            string src = GetAlias("Utility.IPv6Address", s.Address) ?? s.Address.ToString();
            string dst = GetAlias("Utility.IPv6Address", d.Address) ?? d.Address.ToString();
            return (s.Address.Octets > d.Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

ushort get SourcePort(this Event_1201 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;            
            return s.Port;   
        }
    }
    return 0;
}

ushort get DestinationPort(this Event_1201 e)
{
    if(e.RemoteAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.RemoteAddress as SocketAddress;

        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            return s.Port;            
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            return s.Port;            
        }
    }
    return 0;
}

string get Transport(this Event_1201 e)
{
    if(e.LocalAddress is WindowsReference.SocketAddress)
    {
        SocketAddress sa = e.LocalAddress as SocketAddress;
        SocketAddress da = e.RemoteAddress as SocketAddress;
        if(sa.Address is SockAddrIn)
        {
            SockAddrIn s = sa.Address as SockAddrIn;
            SockAddrIn d = da.Address as SockAddrIn;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else if(sa.Address is SockAddrIn6)
        {
            SockAddrIn6 s = sa.Address as SockAddrIn6;
            SockAddrIn6 d = da.Address as SockAddrIn6;

            ushort sp = s.Port;
            ushort dp = d.Port;

            string src = IANA.PortToServiceNameForAlias(sp);
            string dst = IANA.PortToServiceNameForAlias(dp);
            return "TCP: " + ((sp > dp) ? (src + " - " + dst) : (dst + " - " + src));
        }
        else
        {
            return null;
        }
    }
    return "None";
}

// -------------------------------------------------------------------
// Event_1205
(IPv4Address | IPv6Address) get Source(this Event_1205 e)
{
    return e.Source_IPv4_Address;
}

(IPv4Address | IPv6Address) get Destination(this Event_1205 e)
{
    return e.Dest_IPv4_Address;
}

string get Network(this Event_1205 e)
{  
    string src = GetAlias("Utility.IPv4Address", e.Source_IPv4_Address) ?? e.Source_IPv4_Address.ToString();
    string dst = GetAlias("Utility.IPv4Address", e.Dest_IPv4_Address) ?? e.Dest_IPv4_Address.ToString();

    return (e.Source_IPv4_Address.Octets > e.Dest_IPv4_Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
}

// -------------------------------------------------------------------
// Event_1206
(IPv4Address | IPv6Address) get Source(this Event_1206 e)
{
    return e.Source_IPv4_Address;
}

(IPv4Address | IPv6Address) get Destination(this Event_1206 e)
{
    return e.Dest_IPv4_Address;
}

string get Network(this Event_1206 e)
{  
    string src = GetAlias("Utility.IPv4Address", e.Source_IPv4_Address) ?? e.Source_IPv4_Address.ToString();
    string dst = GetAlias("Utility.IPv4Address", e.Dest_IPv4_Address) ?? e.Dest_IPv4_Address.ToString();

    return (e.Source_IPv4_Address.Octets > e.Dest_IPv4_Address.Octets ? (dst + " - " + src) : (src + " - " + dst));
}