// partial implemented
module WSFederation with 
XmlEncodingDefaults{Namespace = AuthNamespace},
Documentation
{
    ProtocolName = "Web Services Federation Language",
    ShortName = "WSFederation",
    Description = ""
},
OPNAuthoring
{
    Copyright = "(c) Microsoft Corporation",
    References = 
        [
            new Reference{Name = "WS-Federation", Link = "http://specs.xmlsoap.org/ws/2006/12/federation/ws-federation.pdf"},
        ],
    RevisionSummary =
        [
            new Revision{Class=RevisionClass.Major, Version="379728", Date="07/27/2015"}
        ]
};

using XSD;

const string AuthNamespace = "http://schemas.xmlsoap.org/ws/2006/12/authorization";

// 9.2 AdditionalContext
type AdditionalContextType
{
    array<ContextItemType> ContextItem;
    optional array<xml> AnyElement with XmlEncoding{IsAny = true, Kind = XmlKind.Element, Namespace = XmlNamespaceIndicator.Any};
    optional array<xml> AnyAttribute with XmlEncoding{IsAny = true, Kind = XmlKind.Attribute, Namespace = XmlNamespaceIndicator.Other};
} with XmlEncoding{Order = XmlOrderIndicator.All};

type ContextItemType
{
    XSAnyURI Name with XmlEncoding{Kind = XmlKind.Attribute, Namespace = ""};
    optional XSAnyURI Scope with XmlEncoding{Kind = XmlKind.Attribute, Namespace = ""};
    optional ValueType Value;
    optional array<xml> AnyElement with XmlEncoding{IsAny = true, Kind = XmlKind.Element, Namespace = XmlNamespaceIndicator.Any};
    optional array<xml> AnyAttribute with XmlEncoding{IsAny = true, Kind = XmlKind.Attribute, Namespace = XmlNamespaceIndicator.Other};
    
    override string ToString()
    {
        string summary = Name.ToString();
        if (Value is valueType:ValueType)
        {
            summary += ": " + valueType.ToString();
        }
        return summary;
    }
} with XmlEncoding{ Order = XmlOrderIndicator.All};

type ValueType
{
    string Value with XmlEncoding{Kind = XmlKind.Text};

    override string ToString()
    {
        return Value;
    }
}
