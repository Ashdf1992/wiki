protocol MSPPSAS with
Documentation
{
    ProtocolName = "PerformancePoint Services Authoring Service Protocol",
    ShortName = "MS-PPSAS",
    DocumentName = "MS-PPSAS",
    ProtocolType = "SOAP",
    Description = ""
},
OPNAuthoring
{
    Copyright = "(c) 2014 Microsoft Corporation",
    References = 
        [
            new Reference {Name = "MS-PPSAS", Version = "2.2"},
        ],
    RevisionSummary =    
        [
            new Revision {Class=RevisionClass.Major, Version="1.0.0", Date="06/01/2013"},
        ]
};

using DSAD;
using SOAP;

const string ModuleName = "MSPPSAS";

const map<string, string> SoapActionsMap =
{
    "http://www.microsoft.com/performancepoint/scorecards/CreateAnnotation" -> "CreateAnnotation",
    "http://www.microsoft.com/performancepoint/scorecards/CreateDashboard" -> "CreateDashboard",
    "http://www.microsoft.com/performancepoint/scorecards/CreateDataSource" -> "CreateDataSource",
    "http://www.microsoft.com/performancepoint/scorecards/CreateFilter" -> "CreateFilter",
    "http://www.microsoft.com/performancepoint/scorecards/CreateIndicator" -> "CreateIndicator",
    "http://www.microsoft.com/performancepoint/scorecards/CreateKpi" -> "CreateKpi",
    "http://www.microsoft.com/performancepoint/scorecards/CreateReportView" -> "CreateReportView",
    "http://www.microsoft.com/performancepoint/scorecards/CreateScorecard" -> "CreateScorecard",
    "http://www.microsoft.com/performancepoint/scorecards/DeleteAnnotation" -> "DeleteAnnotation",
    "http://www.microsoft.com/performancepoint/scorecards/DeleteDashboard" -> "DeleteDashboard",
    "http://www.microsoft.com/performancepoint/scorecards/DeleteDataSource" -> "DeleteDataSource",
    "http://www.microsoft.com/performancepoint/scorecards/DeleteFilter" -> "DeleteFilter",
    "http://www.microsoft.com/performancepoint/scorecards/DeleteIndicator" -> "DeleteIndicator",
    "http://www.microsoft.com/performancepoint/scorecards/DeleteKpi" -> "DeleteKpi",
    "http://www.microsoft.com/performancepoint/scorecards/DeleteReportView" -> "DeleteReportView",
    "http://www.microsoft.com/performancepoint/scorecards/DeleteScorecard" -> "DeleteScorecard",
    "http://www.microsoft.com/performancepoint/scorecards/GenerateView" -> "GenerateView",
    "http://www.microsoft.com/performancepoint/scorecards/GenerateViewDirect" -> "GenerateViewDirect",
    "http://www.microsoft.com/performancepoint/scorecards/GetAllAnnotationsByScorecardLocation" -> "GetAllAnnotationsByScorecardLocation",
    "http://www.microsoft.com/performancepoint/scorecards/GetAnalyticReportView" -> "GetAnalyticReportView",
    "http://www.microsoft.com/performancepoint/scorecards/GetAnnotation" -> "GetAnnotation",
    "http://www.microsoft.com/performancepoint/scorecards/GetAnnotationByID" -> "GetAnnotationByID",
    "http://www.microsoft.com/performancepoint/scorecards/GetAnnotationSetting" -> "GetAnnotationSetting",
    "http://www.microsoft.com/performancepoint/scorecards/GetAsKpis" -> "GetAsKpis",
    "http://www.microsoft.com/performancepoint/scorecards/GetCube" -> "GetCube",
    "http://www.microsoft.com/performancepoint/scorecards/GetCubeFromDataSource" -> "GetCubeFromDataSource",
    "http://www.microsoft.com/performancepoint/scorecards/GetCubeMetaData" -> "GetCubeMetaData",
    "http://www.microsoft.com/performancepoint/scorecards/GetCubeMetaDataForDataSource" -> "GetCubeMetaDataForDataSource",
    "http://www.microsoft.com/performancepoint/scorecards/GetCubeNameInfos" -> "GetCubeNameInfos",
    "http://www.microsoft.com/performancepoint/scorecards/GetCurrentCultureLcid" -> "GetCurrentCultureLcid",
    "http://www.microsoft.com/performancepoint/scorecards/GetCurrentUserInfo" -> "GetCurrentUserInfo",
    "http://www.microsoft.com/performancepoint/scorecards/GetDashboard" -> "GetDashboard",
    "http://www.microsoft.com/performancepoint/scorecards/GetDatabaseNamesFromDataSource" -> "GetDatabaseNamesFromDataSource",
    "http://www.microsoft.com/performancepoint/scorecards/GetDataSource" -> "GetDataSource",
    "http://www.microsoft.com/performancepoint/scorecards/GetDependentElements" -> "GetDependentElements",
    "http://www.microsoft.com/performancepoint/scorecards/GetDimensions" -> "GetDimensions",
    "http://www.microsoft.com/performancepoint/scorecards/GetDimensionsFromDataSource" -> "GetDimensionsFromDataSource",
    "http://www.microsoft.com/performancepoint/scorecards/GetFilter" -> "GetFilter",
    "http://www.microsoft.com/performancepoint/scorecards/GetIndicator" -> "GetIndicator",
    "http://www.microsoft.com/performancepoint/scorecards/GetKpi" -> "GetKpi",
    "http://www.microsoft.com/performancepoint/scorecards/GetKpisFromScorecard" -> "GetKpisFromScorecard",
    "http://www.microsoft.com/performancepoint/scorecards/GetLatestAnalyticReportVersion" -> "GetLatestAnalyticReportVersion",
    "http://www.microsoft.com/performancepoint/scorecards/GetListItems" -> "GetListItems",
    "http://www.microsoft.com/performancepoint/scorecards/GetMdx" -> "GetMdx",
    "http://www.microsoft.com/performancepoint/scorecards/GetParameterDisplayData" -> "GetParameterDisplayData",
    "http://www.microsoft.com/performancepoint/scorecards/GetPreviewDataSet" -> "GetPreviewDataSet",
    "http://www.microsoft.com/performancepoint/scorecards/GetQueryResultMembers" -> "GetQueryResultMembers",
    "http://www.microsoft.com/performancepoint/scorecards/GetRegisteredCustomFCOs" -> "GetRegisteredCustomFCOs",
    "http://www.microsoft.com/performancepoint/scorecards/GetReportView" -> "GetReportView",
    "http://www.microsoft.com/performancepoint/scorecards/GetScorecard" -> "GetScorecard",
    "http://www.microsoft.com/performancepoint/scorecards/QueryChildMembers" -> "QueryChildMembers",
    "http://www.microsoft.com/performancepoint/scorecards/QueryChildMembersByRangeFromDataSource" -> "QueryChildMembersByRangeFromDataSource",
    "http://www.microsoft.com/performancepoint/scorecards/QueryChildMembersFromDataSource" -> "QueryChildMembersFromDataSource",
    "http://www.microsoft.com/performancepoint/scorecards/QueryDimensionRootMembers" -> "QueryDimensionRootMembers",
    "http://www.microsoft.com/performancepoint/scorecards/QueryDimensionRootMembersFromDataSource" -> "QueryDimensionRootMembersFromDataSource",
    "http://www.microsoft.com/performancepoint/scorecards/QueryNamedSets" -> "QueryNamedSets",
    "http://www.microsoft.com/performancepoint/scorecards/QueryNamedSetsFromDataSource" -> "QueryNamedSetsFromDataSource",
    "http://www.microsoft.com/performancepoint/scorecards/QueryRelatedMember" -> "QueryRelatedMember",
    "http://www.microsoft.com/performancepoint/scorecards/QueryRelatedMemberFromDataSource" -> "QueryRelatedMemberFromDataSource",
    "http://www.microsoft.com/performancepoint/scorecards/QueryTimeIntelligence" -> "QueryTimeIntelligence",
    "http://www.microsoft.com/performancepoint/scorecards/QueryTimeIntelligenceDirect" -> "QueryTimeIntelligenceDirect",
    "http://www.microsoft.com/performancepoint/scorecards/QueryTransformMembers" -> "QueryTransformMembers",
    "http://www.microsoft.com/performancepoint/scorecards/SaveTemporaryAnalyticReport" -> "SaveTemporaryAnalyticReport",
    "http://www.microsoft.com/performancepoint/scorecards/TestConnection" -> "TestConnection",
    "http://www.microsoft.com/performancepoint/scorecards/TrimAnnotationByOwner" -> "TrimAnnotationByOwner",
    "http://www.microsoft.com/performancepoint/scorecards/TrimAnnotationByScorecardLocation" -> "TrimAnnotationByScorecardLocation",
    "http://www.microsoft.com/performancepoint/scorecards/TrimAnnotationUntouchedSince" -> "TrimAnnotationUntouchedSince",
    "http://www.microsoft.com/performancepoint/scorecards/UpdateAnnotation" -> "UpdateAnnotation",
    "http://www.microsoft.com/performancepoint/scorecards/UpdateDashboard" -> "UpdateDashboard",
    "http://www.microsoft.com/performancepoint/scorecards/UpdateDataSource" -> "UpdateDataSource",
    "http://www.microsoft.com/performancepoint/scorecards/UpdateFilter" -> "UpdateFilter",
    "http://www.microsoft.com/performancepoint/scorecards/UpdateIndicator" -> "UpdateIndicator",
    "http://www.microsoft.com/performancepoint/scorecards/UpdateKpi" -> "UpdateKpi",
    "http://www.microsoft.com/performancepoint/scorecards/UpdateReportView" -> "UpdateReportView",
    "http://www.microsoft.com/performancepoint/scorecards/UpdateScorecard" -> "UpdateScorecard",
    "http://www.microsoft.com/performancepoint/scorecards/ValidateKpi" -> "ValidateKpi",
    "http://www.microsoft.com/performancepoint/scorecards/ValidateScorecard" -> "ValidateScorecard",
    "http://www.microsoft.com/performancepoint/scorecards/ValidateSiteCollection" -> "ValidateSiteCollection",
    "http://www.microsoft.com/performancepoint/scorecards/ExportDashboard" -> "ExportDashboard",
    "http://www.microsoft.com/performancepoint/scorecards/ImportDashboard" -> "ImportDashboard"
};

endpoint Server over SOAP.Server accepts RequestMessage issues ResponseMessage;
client endpoint Client connected to Server;

autostart actor ActorOverSOAP(SOAP.Server soapServer) follows DSAD.ActorOverSOAP
{
    process soapServer accepts soapMsg:SOAP.SoapMessage where ((soapMsg.SoapAction as string) in SoapActionsMap)
    {
        if (soapMsg#EndpointName != nothing && (soapMsg#EndpointName as string != ModuleName))
            reject;
        else
        {
            RequestMessage msg = new RequestMessage();
            msg.Initialize(soapMsg);
            dispatch (endpoint Server over soapServer) accepts msg;
        }
    }
    
    process soapServer issues soapMsg:SOAP.SoapMessage where ((soapMsg.SoapAction as string) in SoapActionsMap)
    {
        if (soapMsg#EndpointName != nothing && (soapMsg#EndpointName as string != ModuleName))
            reject;
        else
        {
            ResponseMessage msg = new ResponseMessage();
            msg.Initialize(soapMsg);
            dispatch (endpoint Server over soapServer) issues msg;
        }
    }
}

message MessageBase
{
    string SoapAction;
    xml Body;
    bool ContainsFault;
    
    void Initialize(SOAP.SoapMessage soapMsg)
    {
        this.SoapAction = soapMsg.SoapAction as string;
        this.ContainsFault = soapMsg.ContainsFault;
        
        if (soapMsg.Body.ChildCount > 0)
        {
            this.Body = soapMsg.Body.Children[0];
        }
        else
        {
            this.Body = null;
        }
    }

    string GetOperationName()
    {
        return SoapActionsMap[this.SoapAction];
    }
}

message RequestMessage : MessageBase
{
    override string ToString()
    {
        if (this.ContainsFault)
        {
            return this.GetOperationName() + " Fault Request";
        }
        
        return this.GetOperationName() + " Request";
    }
}

message ResponseMessage : MessageBase
{
    override string ToString()
    {
        if (this.ContainsFault)
        {
            return this.GetOperationName() + " Fault Response";
        }
        
        return this.GetOperationName() + " Response";
    }
}

