protocol MSQSSWS with
Documentation
{
    ProtocolName = "Search Query Shared Services Protocol",
    ShortName = "MS-QSSWS",
    DocumentName = "MS-QSSWS",
    ProtocolType = "SOAP",
    Description = ""
},
OPNAuthoring
{
    Copyright = "(c) 2014 Microsoft Corporation",
    References = 
        [
            new Reference {Name = "MS-QSSWS", Version = "3.2"},
        ],
    RevisionSummary =    
        [
            new Revision {Class=RevisionClass.Major, Version="1.0.0", Date="06/01/2013"},
        ]
};

using DSAD;
using SOAP;

const string ModuleName = "MSQSSWS";

const map<string, string> WsaActionsMap =
{
    "http://tempuri.org/ISearchQueryServiceApplication/GetSearchTerms" -> "GetSearchTerms",
    "http://tempuri.org/ISearchQueryServiceApplication/GetSearchTermsResponse" -> "GetSearchTerms",
    "http://tempuri.org/ISearchQueryServiceApplication/GetSearchTermsSearchServiceApplicationFaultFault" -> "GetSearchTerms",
    "http://tempuri.org/ISearchQueryServiceApplication/Execute" -> "Execute",
    "http://tempuri.org/ISearchQueryServiceApplication/ExecuteResponse" -> "Execute",
    "http://tempuri.org/ISearchQueryServiceApplication/ExecuteSearchServiceApplicationFaultFault" -> "Execute",
    "http://tempuri.org/ISearchQueryServiceApplication/GetProperties" -> "GetProperties",
    "http://tempuri.org/ISearchQueryServiceApplication/GetPropertiesResponse" -> "GetProperties",
    "http://tempuri.org/ISearchQueryServiceApplication/GetPropertiesSearchServiceApplicationFaultFault" -> "GetProperties",
    "http://tempuri.org/ISearchQueryServiceApplication/GetScopes" -> "GetScopes",
    "http://tempuri.org/ISearchQueryServiceApplication/GetScopesResponse" -> "GetScopes",
    "http://tempuri.org/ISearchQueryServiceApplication/GetScopesSearchServiceApplicationFaultFault" -> "GetScopes",
    "http://tempuri.org/ISearchQueryServiceApplication/GetQuerySuggestions" -> "GetQuerySuggestions",
    "http://tempuri.org/ISearchQueryServiceApplication/GetQuerySuggestionsResponse" -> "GetQuerySuggestions",
    "http://tempuri.org/ISearchQueryServiceApplication/GetQuerySuggestionsSearchServiceApplicationFaultFault" -> "GetQuerySuggestions",
    "http://tempuri.org/ISearchQueryServiceApplication/HighlightStringValue" -> "HighlightStringValue",
    "http://tempuri.org/ISearchQueryServiceApplication/HighlightStringValueResponse" -> "HighlightStringValue",
    "http://tempuri.org/ISearchQueryServiceApplication/HighlightStringValueSearchServiceApplicationFaultFault" -> "HighlightStringValue",
    "http://tempuri.org/ISearchQueryServiceApplication/HighlightStringValueQuerySuggestions" -> "HighlightStringValueQuerySuggestions",
    "http://tempuri.org/ISearchQueryServiceApplication/HighlightStringValueQuerySuggestionsResponse" -> "HighlightStringValueQuerySuggestions",
    "http://tempuri.org/ISearchQueryServiceApplication/HighlightStringValueQuerySuggestionsSearchServiceApplicationFaultFault" -> "HighlightStringValueQuerySuggestions",
    "http://tempuri.org/ISearchQueryServiceApplication/GetClickFrequenciesForUrl" -> "GetClickFrequenciesForUrl",
    "http://tempuri.org/ISearchQueryServiceApplication/GetClickFrequenciesForUrlResponse" -> "GetClickFrequenciesForUrl",
    "http://tempuri.org/ISearchQueryServiceApplication/GetClickFrequenciesForUrlSearchServiceApplicationFaultFault" -> "GetClickFrequenciesForUrl",
    "http://tempuri.org/ISearchQueryServiceApplication/GetTopQueryStringsForUrl" -> "GetTopQueryStringsForUrl",
    "http://tempuri.org/ISearchQueryServiceApplication/GetTopQueryStringsForUrlResponse" -> "GetTopQueryStringsForUrl",
    "http://tempuri.org/ISearchQueryServiceApplication/GetTopQueryStringsForUrlSearchServiceApplicationFaultFault" -> "GetTopQueryStringsForUrl",
    "http://tempuri.org/ISearchQueryServiceApplication/RecordClick" -> "RecordClick",
    "http://tempuri.org/ISearchQueryServiceApplication/RecordClickResponse" -> "RecordClick",
    "http://tempuri.org/ISearchQueryServiceApplication/RecordClickSearchServiceApplicationFaultFault" -> "RecordClick",
    "http://tempuri.org/ISearchQueryServiceApplication/RecordPageClick" -> "RecordPageClick",
    "http://tempuri.org/ISearchQueryServiceApplication/RecordPageClickResponse" -> "RecordPageClick",
    "http://tempuri.org/ISearchQueryServiceApplication/RecordPageClickSearchServiceApplicationFaultFault" -> "RecordPageClick",
    "http://tempuri.org/ISearchQueryServiceApplication/GetSearchServiceApplicationInfo" -> "GetSearchServiceApplicationInfo",
    "http://tempuri.org/ISearchQueryServiceApplication/GetSearchServiceApplicationInfoResponse" -> "GetSearchServiceApplicationInfo",
    "http://tempuri.org/ISearchQueryServiceApplication/GetSearchServiceApplicationInfoSearchServiceApplicationFaultFault" -> "GetSearchServiceApplicationInfo",
    "http://tempuri.org/ISearchQueryServiceApplication/RecordUIQueryDoneEvent" -> "RecordUIQueryDoneEvent",
    "http://tempuri.org/ISearchQueryServiceApplication/RecordUIQueryDoneEventResponse" -> "RecordUIQueryDoneEvent",
    "http://tempuri.org/ISearchQueryServiceApplication/RecordUIQueryDoneEventSearchServiceApplicationFaultFault" -> "RecordUIQueryDoneEvent",
    "http://tempuri.org/ISearchQueryServiceApplication/RecordWebPartQueryDoneEvent" -> "RecordWebPartQueryDoneEvent",
    "http://tempuri.org/ISearchQueryServiceApplication/RecordWebPartQueryDoneEventResponse" -> "RecordWebPartQueryDoneEvent",
    "http://tempuri.org/ISearchQueryServiceApplication/RecordWebPartQueryDoneEventSearchServiceApplicationFaultFault" -> "RecordWebPartQueryDoneEvent",
    "http://tempuri.org/ISearchQueryServiceApplication/RecordOMQueryDoneEvent" -> "RecordOMQueryDoneEvent",
    "http://tempuri.org/ISearchQueryServiceApplication/RecordOMQueryDoneEventResponse" -> "RecordOMQueryDoneEvent",
    "http://tempuri.org/ISearchQueryServiceApplication/RecordOMQueryDoneEventSearchServiceApplicationFaultFault" -> "RecordOMQueryDoneEvent",
    "http://tempuri.org/ISearchQueryServiceApplication/RecordQueryErrorEvent" -> "RecordQueryErrorEvent",
    "http://tempuri.org/ISearchQueryServiceApplication/RecordQueryErrorEventResponse" -> "RecordQueryErrorEvent",
    "http://tempuri.org/ISearchQueryServiceApplication/RecordQueryErrorEventSearchServiceApplicationFaultFault" -> "RecordQueryErrorEvent",
    "http://tempuri.org/ISearchQueryServiceApplication/GetQuerySuggestionsWithResults" -> "GetQuerySuggestionsWithResults",
    "http://tempuri.org/ISearchQueryServiceApplication/GetQuerySuggestionsWithResultsResponse" -> "GetQuerySuggestionsWithResults",
    "http://tempuri.org/ISearchQueryServiceApplication/GetQuerySuggestionsWithResultsSearchServiceApplicationFaultFault" -> "GetQuerySuggestionsWithResults",
    "http://tempuri.org/ISearchHealthMonitoringServiceApplication/RecordUIQueryDone" -> "RecordUIQueryDone",
    "http://tempuri.org/ISearchHealthMonitoringServiceApplication/RecordUIQueryDoneResponse" -> "RecordUIQueryDone",
    "http://tempuri.org/ISearchHealthMonitoringServiceApplication/RecordUIQueryDoneSearchServiceApplicationFaultFault" -> "RecordUIQueryDone",
    "http://tempuri.org/ISearchHealthMonitoringServiceApplication/RecordWebPartQueryDone" -> "RecordWebPartQueryDone",
    "http://tempuri.org/ISearchHealthMonitoringServiceApplication/RecordWebPartQueryDoneResponse" -> "RecordWebPartQueryDone",
    "http://tempuri.org/ISearchHealthMonitoringServiceApplication/RecordWebPartQueryDoneSearchServiceApplicationFaultFault" -> "RecordWebPartQueryDone",
    "http://tempuri.org/ISearchHealthMonitoringServiceApplication/RecordOMQueryDone" -> "RecordOMQueryDone",
    "http://tempuri.org/ISearchHealthMonitoringServiceApplication/RecordOMQueryDoneResponse" -> "RecordOMQueryDone",
    "http://tempuri.org/ISearchHealthMonitoringServiceApplication/RecordOMQueryDoneSearchServiceApplicationFaultFault" -> "RecordOMQueryDone",
    "http://tempuri.org/ISearchHealthMonitoringServiceApplication/RecordQueryError" -> "RecordQueryError",
    "http://tempuri.org/ISearchHealthMonitoringServiceApplication/RecordQueryErrorResponse" -> "RecordQueryError",
    "http://tempuri.org/ISearchHealthMonitoringServiceApplication/RecordQueryErrorSearchServiceApplicationFaultFault" -> "RecordQueryError",
    "http://tempuri.org/ISearchHealthMonitoringServiceApplication/GetQueryHealthMonitoringSettings" -> "GetQueryHealthMonitoringSettings",
    "http://tempuri.org/ISearchHealthMonitoringServiceApplication/GetQueryHealthMonitoringSettingsResponse" -> "GetQueryHealthMonitoringSettings",
    "http://tempuri.org/ISearchHealthMonitoringServiceApplication/GetQueryHealthMonitoringSettingsSearchServiceApplicationFaultFault" -> "GetQueryHealthMonitoringSettings",
    "http://tempuri.org/ISearchHealthMonitoringServiceApplication/GetQueryHealthMonitoringSettingsForComponents" -> "GetQueryHealthMonitoringSettingsForComponents",
    "http://tempuri.org/ISearchHealthMonitoringServiceApplication/GetQueryHealthMonitoringSettingsForComponentsResponse" -> "GetQueryHealthMonitoringSettingsForComponents",
    "http://tempuri.org/ISearchHealthMonitoringServiceApplication/GetQueryHealthMonitoringSettingsForComponentsSearchServiceApplicationFaultFault" -> "GetQueryHealthMonitoringSettingsForComponents"
};

const map<string, string> SoapActionsMap = {
    "http://tempuri.org/ISearchQueryServiceApplication/GetSearchTerms" -> "GetSearchTerms",
    "http://tempuri.org/ISearchQueryServiceApplication/Execute" -> "Execute",
    "http://tempuri.org/ISearchQueryServiceApplication/GetProperties" -> "GetProperties",
    "http://tempuri.org/ISearchQueryServiceApplication/GetScopes" -> "GetScopes",
    "http://tempuri.org/ISearchQueryServiceApplication/GetQuerySuggestions" -> "GetQuerySuggestions",
    "http://tempuri.org/ISearchQueryServiceApplication/HighlightStringValue" -> "HighlightStringValue",
    "http://tempuri.org/ISearchQueryServiceApplication/HighlightStringValueQuerySuggestions" -> "HighlightStringValueQuerySuggestions",
    "http://tempuri.org/ISearchQueryServiceApplication/GetClickFrequenciesForUrl" -> "GetClickFrequenciesForUrl",
    "http://tempuri.org/ISearchQueryServiceApplication/GetTopQueryStringsForUrl" -> "GetTopQueryStringsForUrl",
    "http://tempuri.org/ISearchQueryServiceApplication/RecordClick" -> "RecordClick",
    "http://tempuri.org/ISearchQueryServiceApplication/RecordPageClick" -> "RecordPageClick",
    "http://tempuri.org/ISearchQueryServiceApplication/GetSearchServiceApplicationInfo" -> "GetSearchServiceApplicationInfo",
    "http://tempuri.org/ISearchQueryServiceApplication/RecordUIQueryDoneEvent" -> "RecordUIQueryDoneEvent",
    "http://tempuri.org/ISearchQueryServiceApplication/RecordWebPartQueryDoneEvent" -> "RecordWebPartQueryDoneEvent",
    "http://tempuri.org/ISearchQueryServiceApplication/RecordOMQueryDoneEvent" -> "RecordOMQueryDoneEvent",
    "http://tempuri.org/ISearchQueryServiceApplication/RecordQueryErrorEvent" -> "RecordQueryErrorEvent",
    "http://tempuri.org/ISearchQueryServiceApplication/GetQuerySuggestionsWithResults" -> "GetQuerySuggestionsWithResults",
    "http://tempuri.org/ISearchHealthMonitoringServiceApplication/RecordUIQueryDone" -> "RecordUIQueryDone",
    "http://tempuri.org/ISearchHealthMonitoringServiceApplication/RecordWebPartQueryDone" -> "RecordWebPartQueryDone",
    "http://tempuri.org/ISearchHealthMonitoringServiceApplication/RecordOMQueryDone" -> "RecordOMQueryDone",
    "http://tempuri.org/ISearchHealthMonitoringServiceApplication/RecordQueryError" -> "RecordQueryError",
    "http://tempuri.org/ISearchHealthMonitoringServiceApplication/GetQueryHealthMonitoringSettings" -> "GetQueryHealthMonitoringSettings",
    "http://tempuri.org/ISearchHealthMonitoringServiceApplication/GetQueryHealthMonitoringSettingsForComponents" -> "GetQueryHealthMonitoringSettingsForComponents"
};

endpoint Server over SOAP.Server accepts RequestMessage issues ResponseMessage;
client endpoint Client connected to Server;

autostart actor ActorOverSOAP(SOAP.Server soapServer) follows DSAD.ActorOverSOAP
{
    process soapServer accepts soapMsg:SOAP.SoapMessage where (soapMsg.WsaAction in WsaActionsMap || soapMsg.SoapAction in SoapActionsMap)
    {
        if (soapMsg#EndpointName != nothing && (soapMsg#EndpointName as string != ModuleName))
            reject;
        else
        {
            RequestMessage msg = new RequestMessage();
            msg.Initialize(soapMsg);
            dispatch (endpoint Server over soapServer) accepts msg;
        }
    }
    
    process soapServer issues soapMsg:SOAP.SoapMessage where (soapMsg.WsaAction in WsaActionsMap || soapMsg.SoapAction in SoapActionsMap)
    {
        if (soapMsg#EndpointName != nothing && (soapMsg#EndpointName as string != ModuleName))
            reject;
        else
        {
            ResponseMessage msg = new ResponseMessage();
            msg.Initialize(soapMsg);
            dispatch (endpoint Server over soapServer) issues msg;
        }
    }
}

message MessageBase
{
    optional string WsaAction;
    optional string SoapAction;
    xml Body;
    bool ContainsFault;
    
    void Initialize(SOAP.SoapMessage soapMsg)
    {
        if (soapMsg.WsaAction != "")
            this.WsaAction = soapMsg.WsaAction;
            
        if (soapMsg.SoapAction != "")
            this.SoapAction = soapMsg.SoapAction;
            
        this.ContainsFault = soapMsg.ContainsFault;

        if (soapMsg.Body.ChildCount > 0)
        {
            this.Body = soapMsg.Body.Children[0];
        }
        else
        {
            this.Body = null;
        }
    }

    string GetOperationName()
    {
        if (this.WsaAction is wsaAcction:string)
            return WsaActionsMap[wsaAcction];
            
        if (this.SoapAction is soapAcction:string)
            return SoapActionsMap[soapAcction];
            
        return "Unknown";
    }
}

message RequestMessage : MessageBase
{
    override string ToString()
    {
        if (this.ContainsFault)
        {
            return this.GetOperationName() + " Fault Request";
        }
        
        return this.GetOperationName() + " Request";
    }
}

message ResponseMessage : MessageBase
{
    override string ToString()
    {
        if (this.ContainsFault)
        {
            return this.GetOperationName() + " Fault Response";
        }
        
        return this.GetOperationName() + " Response";
    }
}
