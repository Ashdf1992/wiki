protocol MSUSPSWS with
Documentation
{
    ProtocolName = "User Profile Service Web Service Protocol",
    ShortName = "MS-USPSWS",
    DocumentName = "MS-USPSWS",
    ProtocolType = "SOAP",
    Description = ""
},
OPNAuthoring
{
    Copyright = "(c) 2014 Microsoft Corporation",
    References = 
        [
            new Reference {Name = "MS-USPSWS", Version = "4.1"},
        ],
    RevisionSummary =    
        [
            new Revision {Class=RevisionClass.Major, Version="1.0.0", Date="06/01/2013"},
        ]
};

using DSAD;
using SOAP;

const string ModuleName = "MSUSPSWS";

const map<string, string> SoapActionsMap =
{
    "http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/AddColleague" -> "AddColleague",
    "http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/AddLink" -> "AddLink",
    "http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/AddMembership" -> "AddMembership",
    "http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/AddPinnedLink" -> "AddPinnedLink",
    "http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/AddSuggestions" -> "AddSuggestions",
    "http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/CreateMemberGroup" -> "CreateMemberGroup",
    "http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/CreateUserProfileByAccountName" -> "CreateUserProfileByAccountName",
    "http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/GetCommonColleagues" -> "GetCommonColleagues",
    "http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/GetCommonManager" -> "GetCommonManager",
    "http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/GetCommonMemberships" -> "GetCommonMemberships",
    "http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/GetInCommon" -> "GetInCommon",
    "http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/GetProfileSchema" -> "GetProfileSchema",
    "http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/GetProfileSchemaNameByAccountName" -> "GetProfileSchemaNameByAccountName",
    "http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/GetProfileSchemaNames" -> "GetProfileSchemaNames",
    "http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/GetPropertyChoiceList" -> "GetPropertyChoiceList",
    "http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/GetUserColleagues" -> "GetUserColleagues",
    "http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/GetUserLinks" -> "GetUserLinks",
    "http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/GetUserMemberships" -> "GetUserMemberships",
    "http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/GetUserOrganizations" -> "GetUserOrganizations",
    "http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/GetUserPinnedLinks" -> "GetUserPinnedLinks",
    "http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/GetUserProfileByGuid" -> "GetUserProfileByGuid",
    "http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/GetUserProfileByIndex" -> "GetUserProfileByIndex",
    "http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/GetUserProfileByName" -> "GetUserProfileByName",
    "http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/GetUserProfileCount" -> "GetUserProfileCount",
    "http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/GetUserProfileSchema" -> "GetUserProfileSchema",
    "http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/GetUserPropertyByAccountName" -> "GetUserPropertyByAccountName",
    "http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/ModifyUserPropertyByAccountName" -> "ModifyUserPropertyByAccountName",
    "http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/RemoveAllColleagues" -> "RemoveAllColleagues",
    "http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/RemoveAllLinks" -> "RemoveAllLinks",
    "http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/RemoveAllMemberships" -> "RemoveAllMemberships",
    "http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/RemoveAllPinnedLinks" -> "RemoveAllPinnedLinks",
    "http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/RemoveColleague" -> "RemoveColleague",
    "http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/RemoveLink" -> "RemoveLink",
    "http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/RemoveMembership" -> "RemoveMembership",
    "http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/RemovePinnedLink" -> "RemovePinnedLink",
    "http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/UpdateColleaguePrivacy" -> "UpdateColleaguePrivacy",
    "http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/UpdateLink" -> "UpdateLink",
    "http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/UpdateMembershipPrivacy" -> "UpdateMembershipPrivacy",
    "http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/UpdatePinnedLink" -> "UpdatePinnedLink",
    "http://microsoft.com/webservices/SharePointPortalServer/UserProfileService/AddColleagueWithoutEmailNotification" -> "AddColleagueWithoutEmailNotification"
};

endpoint Server over SOAP.Server accepts RequestMessage issues ResponseMessage;
client endpoint Client connected to Server;

autostart actor ActorOverSOAP(SOAP.Server soapServer) follows DSAD.ActorOverSOAP
{
    process soapServer accepts soapMsg:SOAP.SoapMessage where ((soapMsg.SoapAction as string) in SoapActionsMap)
    {
        if (soapMsg#EndpointName != nothing && (soapMsg#EndpointName as string != ModuleName))
            reject;
        else
        {
            RequestMessage msg = new RequestMessage();
            msg.Initialize(soapMsg);
            dispatch (endpoint Server over soapServer) accepts msg;
        }
    }
    
    process soapServer issues soapMsg:SOAP.SoapMessage where ((soapMsg.SoapAction as string) in SoapActionsMap)
    {
        if (soapMsg#EndpointName != nothing && (soapMsg#EndpointName as string != ModuleName))
            reject;
        else
        {
            ResponseMessage msg = new ResponseMessage();
            msg.Initialize(soapMsg);
            dispatch (endpoint Server over soapServer) issues msg;
        }
    }
}

message MessageBase
{
    string SoapAction;
    xml Body;
    bool ContainsFault;
    
    void Initialize(SOAP.SoapMessage soapMsg)
    {
        this.SoapAction = soapMsg.SoapAction as string;
        this.ContainsFault = soapMsg.ContainsFault;
        
        if (soapMsg.Body.ChildCount > 0)
        {
            this.Body = soapMsg.Body.Children[0];
        }
        else
        {
            this.Body = null;
        }
    }

    string GetOperationName()
    {
        return SoapActionsMap[this.SoapAction];
    }
}

message RequestMessage : MessageBase
{
    override string ToString()
    {
        if (this.ContainsFault)
        {
            return this.GetOperationName() + " Fault Request";
        }
        
        return this.GetOperationName() + " Request";
    }
}

message ResponseMessage : MessageBase
{
    override string ToString()
    {
        if (this.ContainsFault)
        {
            return this.GetOperationName() + " Fault Response";
        }
        
        return this.GetOperationName() + " Response";
    }
}

