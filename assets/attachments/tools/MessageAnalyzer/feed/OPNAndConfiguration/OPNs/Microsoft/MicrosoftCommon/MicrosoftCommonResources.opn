// OPN MicrosoftCommon strings library
module MicrosoftCommonResources;

// MAIL.opn
string MAIL_STR_WINDOWS_BEHAVIOR = "Windows set it to {0}";

// LDAP.opn
string LDAP_STR_SASL_LENGTH_NOT_MATCH = "LDAP: Failed to parse last Sasl message. It sets buffer Length to {0}, but the count of following bytes is {1}";
string LDAP_STR_SASL_FAILED_DECODE_PLAIN_LDAP = "LDAP: Failed to decode plain LDAP message from Sasl Message starting at offset {0}";
string LDAP_Operation_Error = "LDAP: Operations Error.";
string LDAP_Protocol_Error = "LDAP: Protocol Error.";

// RPCH.opn
string RPCH_STR_ReceiveWindowSize = "RPCH: The ReceiveWindowSize field in type ReceiveWindowSize must be in the inclusive range of 8 kilobytes to 256 kilobytes, not {0}.";
string RPCH_STR_ConnectionTimeout = "RPCH: The ConnectionTimeout field in type ConnectionTimeout must be in the inclusive range of 120,000 through 14,400,000 milliseconds, not {0}.";
string RPCH_STR_ChannelLifetime = "RPCH: The ChannelLifetime field in type ChannelLifetime must be in the inclusive range of 128 kilobytes through 2 gigabytes, not {0}.";
string RPCH_STR_ClientKeepalive = "RPCH: The ClientKeepalive field in type ClientKeepalive must be zero or in the inclusive range of 60,000 through 4,294,967,295, not {0}. If it is zero, it must be interpreted as 300,000.";
string RPCH_STR_Version = "RPCH: The Version field in type Version should be 1, not {0}.";
string RPCH_STR_ConformanceCount = "RPCH: The ConformanceCount field in type Padding must be in the inclusive range of zero to 0xFFFF, not {0}.";
string RPCH_STR_ForwardDestinations = "RPCH: The Destination field in type Destination must be one of 0x00000000, 0x00000001, 0x00000002, 0x00000003, not {0}.";
string RPCH_STR_PDUHeader_Flags = "RPCH: The Flags field in message Destination must contain one or more of the following flags, not {0}.";

// PAC.opn
string PAC_STR_CHECK_OFFSET_IN_PAC_INFO_BUFFER = "PAC: The Offset field in type PAC_INFO_BUFFER must be a multiple of 8.";
string PAC_STR_CHECK_SIDCOUNT_IN_KERB_VALIDATION_INFO = "PAC: The SidCount field in type KERB_VALIDATION_INFO must be zero if D bit of the UserFlags field is not set.";
string PAC_STR_CHECK_EXTRASIDS_IN_KERB_VALIDATION_INFO = "PAC: The ExtraSids field in type KERB_VALIDATION_INFO must be null if D bit of the UserFlags field is not set.";
string PAC_STR_CHECK_RESOURCEGROUPDOMAINSID_IN_KERB_VALIDATION_INFO = "PAC: The ResourceGroupDomainSid field in type KERB_VALIDATION_INFO must be null if H bit of the UserFlags field is not set.";
string PAC_STR_CHECK_RESOURCEGROUPCOUNT_IN_KERB_VALIDATION_INFO = "PAC: The ResourceGroupCount field in type KERB_VALIDATION_INFO must be zero if H bit of the UserFlags field is not set.";
string PAC_STR_CHECK_RESOURCEGROUPIDS_IN_KERB_VALIDATION_INFO = "PAC: The ResourceGroupIds field in type KERB_VALIDATION_INFO must be null if H bit of the UserFlags field is not set.";
string PAC_STR_FAILED_DECODING_BUFFER_ITEM = "PAC: The buffer data cannot be decoded as type {0} while the field ulType is {1}.";

// DNSP.opn
string DNSP_STR_CHECK_cAddressAnswerLimit = "DNSP: The cAddressAnswerLimit field in type {0} must be either zero or between 0x00000005 and 0x0000001C inclusive, not {1}.";

// IKE.opn
string IKE_STR_CHECK_INITIATORSPI = "IKE: The InitiatorSPI field in message IKEDatagram must not be zero.";
string IKE_STR_CHECK_MAJORVERSION = "IKE: The MajorVersion field in message IKEDatagram must be set to 1 or 2, not {0}.";
string IKE_STR_INCOMPLETE_IKE_PAYLOADS = "IKE: Incomplete IKE fragment payloads for full reassembly, due to missing contiguous messages.";
string IKE_STR_CHECK_IKE_SA_INITIATOR_SPI = "IKEE: The IKE_SA_Initiator_SPI field in type CorrelationPayload must not be zero.";
string IKE_STR_CHECK_GET_FRAGMENTPAYLOAD_FAILED = "IKEE: Get FragmentPayload from IKE message failed.";
string IKE_STR_CHECK_RESERVED_IN_PAYLOAD = "IKE: The RESERVED field in Payload must be zero, not {0}";
string IKE_STR_DECODING_CERTIFICATEDATA_FAILED = "IKE: The CertificateData field in type {0} cannot be decoded as type RdnSequence when the {1} field is {2}.";

//TDS.opn
string TDS_STR_REPORT_INSUFFICIENTDATA = "TDS: Incomplete TDS payload for full reassembly, missing contiguous message. Expected length: {0}, Acutal length: {1}.";
string TDS_STR_REPORT_INCOMPLETE_DECODING = "TDS: The {0} field in message {1} cannot be decoded completely due to {2} decoding failed.";
string TDS_STR_REPORT_MISSING_ELEMENT = "TDS: The {0} field in message {1} cannot be decoded completely due to {2} is missing.";
string TDS_STR_REPORT_UNKNOWN_TYPE = "TDS: The TabularResultPacketData field in message TabularResult cannot be decoded completely due to unknown type {0}";
string TDS_INSUFFICIENT_DATA = "TDS: Incomplete message {0} for full reassembly, due to missing EndofMessage.";
string TDS_VALUE_NOT_NULL = "TDS: The {0} in type {1} should not be nothing when field {2} is greater than zero.";

// AuthIP.opn
string AuthIP_STR_CANNOT_DECODE_CRYPTO_PAYLOAD = "AuthIP: The Payload cannot be decoded as Crypto Payload successfully.";
string AuthIP_STR_CHECK_RESERVED_IN_PAYLOAD = "IKE: The RESERVED field in Payload must be zero, not {0}";

// MSRPCE.opn
string MSRPCE_DECODING_AUTHVALUE_FAILURE = "MSRPCE: The {0} field in message {1} cannot be decoded as {2} successfully.";
string MSRPCE_NOT_KNOW_HOW_TO_DECODE_AUTHVALUE = "MSRPCE: Decoding the {0} field in message {1} is not supported when the AuthType is {2}.";
string MSRPCE_AUTHPADDING_LENGTH_TOO_LARGE = "MSRPCE: The length of AuthPad field in type AuthVerifierCoT is greater than 255, which is not compliance with C709.";
string MSRPCE_MISSING_BINDING_MESSAGES = "MSRPCE: Missing context for the PContId. It might be caused by missing MSRPCE binding messages.";
string MSPRCE_REASSEMBLE_FAILURE = "MSRPCE: Failed to reassemble the {0} messages due to missing {0} message fragments.";
string MSPRCE_FRAGLENGTH_IS_TOO_LARGE = "MSRPCE: The actual length of reassembled fragment is {0}, which is greater than 65535(0xFFFF).";

// DCOM.opn
string DCOM_DECODING_PROPERTY_FAILURE = "DCOM: One of the element in Property field in type ActivationPropertiesBLOB cannot be decoded successfully when its CLSID is {0}.";

// EMFPLUS.opn
string EMFPLUS_STR_EmfPlusDrawRecord_C1 = "EMFPLUS: The {0} field in Type {1} must be set to {2} if the C bit is set in Flags field, and set to {3} if the C bit is clear in the Flags field.";
string EMFPLUS_STR_EmfPlusDrawRecord_C2 = "EMFPLUS: The {0} field in Type {1} must be no less than {2} if the C bit is set in Flags field, and no less than {3} if the C bit is clear in the Flags field.";
string EMFPLUS_STR_EmfPlusDrawRecord_CP1 = "EMFPLUS: The {0} field in Type {1} must be set to {2} if the P bit is set in Flags field, set to {3} if the P bit is clear and the C bit is set in the Flags field, and set to {4} if the P bit is clear and the C bit is clear in the Flags field.";
string EMFPLUS_STR_EmfPlusDrawRecord_CP2 = "EMFPLUS: The {0} field in Type {1} must be no less than {2} if the P bit is set in Flags field, no less than {3} if the P bit is clear and the C bit is set in the Flags field, and no less than {4} if the P bit is clear and the C bit is clear in the Flags field.";
string EMFPLUS_STR_EmfPlusSetPageTransform_PageUnit = "EMFPLUS: The PageUnit field in Type EmfPlusSetPageTransform_Flags should not be UnitTypeDisplay or UnitTypeWorld."; 
string EMFPLUS_STR_EmfPlusCustomLineCap = "EMFPLUS: The {0} field in Type {1} must be set to {0.0, 0.0}.";
string EMFPLUS_STR_EmfPlusBlendColorsObject_BlendPositions = "EMFPLUS: Each element in the BlendPositions field in type EmfPlusBlendColorsObject must be a number between 0.0 and 1.0 inclusive.";

// SOAP.opn
string SOAP_ERROR_DETAIL = "SOAP: The fault code of this message is '{0}', detail is '{1}'.";
string SOAP_ERROR = "SOAP: Fault messages.";

// IGMP.opn
string IGMP_CHECKSUM_INVALID = "IGMP: The Checksum in message {0} is invalid.";

// KerberosV5.opn
string KERBEROSV5_DECODING_PADATAVALUE_FAILED = "KerberosV5: The PadataValue field in type PAData cannot be decoded as type {0} successfully when the PADataType is {1}.";

// WSTEP.opn
string WSTEP_INCOMPLETE_REQUESTSECURITYTOKEN_OPERATION_REQUEST = "WSTEP: Incomplete RequestSecurityToken2 operation due to missing request.";
string WSTEP_INCOMPLETE_REQUESTSECURITYTOKEN_OPERATION_RESPONSE = "WSTEP: Incomplete RequestSecurityToken2 operation due to missing response.";

// iSCSI.opn
string iSCSI_STR_1 = "iSCSI: Target failure.";
string iSCSI_TASK_MANEGEMENT_STR = "iSCSI: The ReferencedTaskTag field in ScsiTaskManagementFunctionRequest message must be set to 0xFFFFFFFF when Function field in the same message is not AbortTask or TaskReassign.";
string iSCSI_C_BIT_STR = "iSCSI: The {0} message with the C bit set to 1 must have the {1} bit set to zero.";
string iSCSI_RESIDUAL_OVEFLOW = "iSCSI: Residual Overflow. The initiator's Expected Data Transfer Length was not sufficient.";

// GSSAPIKRB5.opn
string GSSAPIKRB5_DECODING_KERBEROSTOKEN_FAILURE = "GSSAPIKRB5: The Token field in type KerberosToken cannot be decoded sucessfully when the TokID is {0}.";

// WiFiDirect.opn
string WiFiDirect_STR_1 = "WiFiDirect: The third octet of the Country String field in Channel List attribute must be set to x\"04\".";

// WFD.opn
string WFDNotSupportedMethod = "WFD does not support such RTSP method.";
string WFDMissRTSPRequest = "RTSP response cannot be decoded as WFD message because related RSTP Request is missing and RTSP method of the response is not specified";
