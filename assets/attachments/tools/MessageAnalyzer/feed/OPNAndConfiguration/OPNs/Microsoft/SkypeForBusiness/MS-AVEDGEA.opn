protocol MSAVEDGEA with
Documentation
{
    ProtocolName = "Audio Video Edge Authentication Protocol",
    ShortName = "MS-AVEDGEA",
    DocumentName = "MS-AVEDGEA",
    ProtocolType = "Block",
},
OPNAuthoring
{
    Copyright = "(c) 2015 Microsoft Corporation",
    References = 
        [
            new Reference {Name = "MS-AVEDGEA", Version = "5.0"},
        ],
    RevisionSummary =    
        [
            new Revision {Class=RevisionClass.Major, Version="1.0.0", Date="05/19/2015"},
        ]
};

using Diagnostics;
using SIP;
using Standard;
using SkypeforBusinessShared;

endpoint Server 
	over SIP.Server
	accepts RequestMessage issues ResponseMessage;
	
client endpoint Client connected to Server;

autostart actor ActorOverSIP(SIP.Server node)
{	
	process node accepts sipMsg:SIP.Request where (IsAvedgeaReq(sipMsg))
    {   
		RequestMessage msg = new RequestMessage (sipMsg);		
		dispatch (endpoint Server over node) accepts msg;
    }
	
	process node issues sipMsg:SIP.Response where (IsAvedgeaRsp(sipMsg))
    {       	
		ResponseMessage msg = new ResponseMessage(sipMsg);
		dispatch (endpoint Server over node) issues msg;
    }
}

bool IsAvedgeaReq(SIP.Request sipMsg)
{	
	if ((sipMsg.Method == "SERVICE") && (TryGetHeaderValue("Content-Type", sipMsg.Headers) == "application/msrtc-media-relay-auth+xml"))		
	{
		return true;
	}
	else
	{
		return false;
	}
}

bool IsAvedgeaRsp(SIP.Response sipMsg)
{	
	string cSeq = TryGetHeaderValue("CSeq", sipMsg.Headers);

	if ((cSeq == "SERVICE") && (TryGetHeaderValue("Content-Type", sipMsg.Headers) == "application/msrtc-media-relay-auth+xml"))
	{
		return true;
	}
	else
	{
		return false;
	}
}

message RequestMessage : SipRequestMessage
{
	RequestMessage(SIP.Request sipReqMsg)
	{	
		InitializeSIPReq(sipReqMsg, ["From", "To", "CSeq"], this);
	}
		
	override string ToString()
	{
		return "Audio Video Edge Authentication Request";
	}
}

message ResponseMessage : SipResponseMessage
{			
	ResponseMessage(SIP.Response sipRspMsg)
	{	
		InitializeSIPRsp(sipRspMsg, ["From", "To", "CSeq", "Accept"], this);	
	}
		
	override string ToString()
	{
		return Format("Audio Video Edge Authentication Response, {0} {1}", this.StatusCode, this.ReasonPhrase);
	}
}