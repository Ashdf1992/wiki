module CapFileActors with 
OPNAuthoring
{
    Copyright = "(c) Microsoft Corporation",
    References = 
        [
        ],
    RevisionSummary =
        [
            new Revision{Class = RevisionClass.Major, Version = "356384", Date = "11/14/2013"}
        ]
};

using Standard;
using CapFile;
using PPP;
using Utility;

autostart actor CapFileToPPP(CapFile.CapFileEndpoint cap)
{
    /* For each PPP frame, the Ethernet-like source and destination addresses are both set to either
     * " SEND"(hex: 0x2053454E44) or " RECV"(hex: 0x2052454356) to indicate that the PPP frame 
     * was either sent or received by the computer on which the capture was taken.
     */
    process cap accepts cf:CapFile.CapFrame where IsPPPPayload(cf.Payload)
    {
        switch (cf.Payload)
        {
            case f:PPP.Frame from BinaryDecoder<PPP.Frame> =>
                dispatch (endpoint PPP.Node) accepts f;
            default =>
                ThrowDecodingException("PPP");
        }
    }
}
