// partial implemented
module WSPolicy with 
XmlEncodingDefaults{Namespace = WspNamespace},
Documentation
{
    ProtocolName = "Web Services Policy 1.2 - Framework",
    ShortName = "WSPolicy",
    Description = ""
},
OPNAuthoring
{
    Copyright = "(c) Microsoft Corporation",
    References = 
        [
            new Reference{Name = "WS-Policy", Link = "http://www.w3.org/Submission/2006/SUBM-WS-Policy-20060425/"},
        ],
    RevisionSummary =
        [
            new Revision{Class=RevisionClass.Major, Version="359590", Date="02/19/2014"}
        ]
};

using XSD;

const string WspNamespace = "http://schemas.xmlsoap.org/ws/2004/09/policy";
const string WsuNamespace = "http://www.docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd";

type Policy
{
    optional array<xml> AnyElements with XmlEncoding{IsAny = true, Kind = XmlKind.Element, Namespace = XmlNamespaceIndicator.Any};
    XSAnyURI Name with XmlEncoding{Kind = XmlKind.Attribute};
    string Id with XmlEncoding{Kind = XmlKind.Attribute, Namespace = WsuNamespace};
    array<xml> AnyAttributes with XmlEncoding{IsAny = true, Kind = XmlKind.Attribute, Namespace = XmlNamespaceIndicator.Any};
}

type PolicyReference
{
    XSAnyURI URI with XmlEncoding{Kind = XmlKind.Attribute};
    string Digest with XmlEncoding{Kind = XmlKind.Attribute};
    XSAnyURI DigestAlgorithm with XmlEncoding{Kind = XmlKind.Attribute};
    array<xml> AnyAttributes with XmlEncoding{IsAny = true, Kind = XmlKind.Attribute, Namespace = XmlNamespaceIndicator.Any};
}

type AppliesTo
{
    optional array<xml> AnyElements with XmlEncoding{IsAny = true, Kind = XmlKind.Element, Namespace = XmlNamespaceIndicator.Any};
    optional array<xml> AnyAttributes with XmlEncoding{IsAny = true, Kind = XmlKind.Attribute, Namespace = XmlNamespaceIndicator.Any};
}

type AttributedDateTime
{
    string Value with XmlEncoding{Kind = XmlKind.Text};
    optional string Id with XmlEncoding{Kind = XmlKind.Attribute, Namespace = WsuNamespace};
    optional array<xml> AnyAttributes with XmlEncoding{IsAny = true, Kind = XmlKind.Attribute, Namespace = XmlNamespaceIndicator.Other};

    override string ToString()
    {
        return Value;
    }
}
