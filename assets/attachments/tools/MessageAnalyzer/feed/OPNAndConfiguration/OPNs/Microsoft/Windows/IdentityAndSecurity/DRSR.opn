protocol DRSR with
Documentation
{
    ProtocolName = "Directory Replication Service (DRS) Remote Protocol",
    ProtocolType = "rpc",
    ShortName = "DRSR",
    DocumentName = "MS-DRSR",
    Description = ""
},
OPNAuthoring
{
    Copyright = "(c) Microsoft Corporation",
    References = 
    [
        new Reference {Name = "DRSR", Version = "39.0", Date = "3/16/2018", ProgramName = ProgramName.WSPP}
    ],
    RevisionSummary = [new Revision {Class = RevisionClass.Major, Version = "379846", Date = "07/22/2015"}
    ]
};

using Technologies.IDL;
using DTYP;
using MSRPCE;

endpoint DrsrService over MSRPCE.Server provides drsuapi
                                        provides dsaop;

contract drsuapi
{
    accepts operation IDL_DRSBind
    {
        in optional handle_t rpc_handle;
        in UUID puuidClientDsa
               with IDL{PointerType = PointerKind.UniquePtr, IndirectionLevel = 1};
        in DRS_EXTENSIONS pextClient
               with IDL{PointerType = PointerKind.UniquePtr, IndirectionLevel = 1};
        out DRS_EXTENSIONS ppextServer with IDL{IndirectionLevel = 2};
        out DRS_HANDLE phDrs
                with IDL{PointerType = PointerKind.RefPtr, IndirectionLevel = 1};
        result ULONG ReturnValue;
        
        override string ToString()
        {
            return
                "IDL_DRSBind" + 
                ", rpc_handle = " + rpc_handle.ToString() +
                ", puuidClientDsa = " + puuidClientDsa.ToString() +
                ", pextClient = " + pextClient.ToString() + 
                ", ppextServer = " + ppextServer.ToString() + 
                ", phDrs = " + phDrs.ToString() +
                ", ReturnValue = " + ReturnValue.ToString();
        }
    }
    with IDL{Opnum = 0};
    
    accepts operation IDL_DRSUnbind
    {
        in out DRS_HANDLE phDrs
                   with IDL{PointerType = PointerKind.RefPtr, IndirectionLevel = 1};
        result ULONG ReturnValue;
        
        override string ToString()
        {
            return
                "IDL_DRSUnbind" + 
                ", phDrs = " + phDrs.ToString() +
                ", ReturnValue = " + ReturnValue.ToString();
        }
    }
    with IDL{Opnum = 1};
    
    accepts operation IDL_DRSReplicaSync
    {
        in DRS_HANDLE hDrs with IDL{PointerType = PointerKind.RefPtr};
        in DWORD dwVersion;
        in DRS_MSG_REPSYNC[dwVersion] pmsgSync
               with IDL{Switch_Is = dwVersion,
                                         PointerType = PointerKind.RefPtr,
                                         IndirectionLevel = 1};
        result ULONG ReturnValue;
        
        override string ToString()
        {
            return
                "IDL_DRSReplicaSync" + 
                ", hDrs = " + hDrs.ToString() +
                ", dwVersion = " + dwVersion.ToString() + 
                ", pmsgSync = " + pmsgSync.ToString() + 
                ", ReturnValue = " + ReturnValue.ToString();
        }
    }
    with IDL{Opnum = 2};
    
    accepts operation IDL_DRSGetNCChanges
    {
        in DRS_HANDLE hDrs with IDL{PointerType = PointerKind.RefPtr};
        in DWORD dwInVersion;
        in DRS_MSG_GETCHGREQ[dwInVersion] pmsgIn
               with IDL{Switch_Is = dwInVersion,
                                         PointerType = PointerKind.RefPtr,
                                         IndirectionLevel = 1};
        out DWORD pdwOutVersion
                with IDL{PointerType = PointerKind.RefPtr, IndirectionLevel = 1};
        out DRS_MSG_GETCHGREPLY[pdwOutVersion] pmsgOut
                with IDL{Switch_Is = pdwOutVersion,
                                          PointerType = PointerKind.RefPtr,
                                          IndirectionLevel = 1};
        result ULONG ReturnValue;
        
        override string ToString()
        {
            return
                "IDL_DRSGetNCChanges" + 
                ", hDrs = " + hDrs.ToString() +
                ", dwInVersion = " + dwInVersion.ToString() + 
                ", pmsgIn = " + pmsgIn.ToString() + 
                ", pdwOutVersion = " +pdwOutVersion.ToString() + 
                ", pmsgOut = " + pmsgOut.ToString() +
                ", ReturnValue = " + ReturnValue.ToString();
        }
    }
    with IDL{Opnum = 3};
    
    accepts operation IDL_DRSUpdateRefs
    {
        in DRS_HANDLE hDrs with IDL{PointerType = PointerKind.RefPtr};
        in DWORD dwVersion;
        in DRS_MSG_UPDREFS[dwVersion] pmsgUpdRefs
               with IDL{Switch_Is = dwVersion,
                                         PointerType = PointerKind.RefPtr,
                                         IndirectionLevel = 1};
        result ULONG ReturnValue;
        
        override string ToString()
        {
            return
                "IDL_DRSUpdateRefs" + 
                ", hDrs = " + hDrs.ToString() +
                ", dwVersion = " + dwVersion.ToString() + 
                ", pmsgUpdRefs = " + pmsgUpdRefs.ToString() + 
                ", ReturnValue = " + ReturnValue.ToString();
        }
    }
    with IDL{Opnum = 4};
    
    accepts operation IDL_DRSReplicaAdd
    {
        in DRS_HANDLE hDrs with IDL{PointerType = PointerKind.RefPtr};
        in DWORD dwVersion;
        in DRS_MSG_REPADD[dwVersion] pmsgAdd
               with IDL{Switch_Is = dwVersion,
                                         PointerType = PointerKind.RefPtr,
                                         IndirectionLevel = 1};
        result ULONG ReturnValue;
        
        override string ToString()
        {
            return
                "IDL_DRSReplicaAdd" + 
                ", hDrs = " + hDrs.ToString() +
                ", dwVersion = " + dwVersion.ToString() + 
                ", pmsgAdd = " + pmsgAdd.ToString() + 
                ", ReturnValue = " + ReturnValue.ToString();
        }
    }
    with IDL{Opnum = 5};
    
    accepts operation IDL_DRSReplicaDel
    {
        in DRS_HANDLE hDrs with IDL{PointerType = PointerKind.RefPtr};
        in DWORD dwVersion;
        in DRS_MSG_REPDEL[dwVersion] pmsgDel
               with IDL{Switch_Is = dwVersion,
                                         PointerType = PointerKind.RefPtr,
                                         IndirectionLevel = 1};
        result ULONG ReturnValue;
        
        override string ToString()
        {
            return
                "IDL_DRSReplicaDel" + ", hDrs = " + hDrs.ToString() +
                ", dwVersion = " + dwVersion.ToString() + ", pmsgDel = " +
                pmsgDel.ToString() + ", ReturnValue = " + ReturnValue.ToString();
        }
    }
    with IDL{Opnum = 6};
    
    accepts operation IDL_DRSReplicaModify
    {
        in DRS_HANDLE hDrs with IDL{PointerType = PointerKind.RefPtr};
        in DWORD dwVersion;
        in DRS_MSG_REPMOD[dwVersion] pmsgMod
               with IDL{Switch_Is = dwVersion,
                                         PointerType = PointerKind.RefPtr,
                                         IndirectionLevel = 1};
        result ULONG ReturnValue;
        
        override string ToString()
        {
            return
                "IDL_DRSReplicaModify" + ", hDrs = " + hDrs.ToString() +
                ", dwVersion = " + dwVersion.ToString() + ", pmsgMod = " +
                pmsgMod.ToString() + ", ReturnValue = " + ReturnValue.ToString();
        }
    }
    with IDL{Opnum = 7};
    
    accepts operation IDL_DRSVerifyNames
    {
        in DRS_HANDLE hDrs with IDL{PointerType = PointerKind.RefPtr};
        in DWORD dwInVersion;
        in DRS_MSG_VERIFYREQ[dwInVersion] pmsgIn
               with IDL{Switch_Is = dwInVersion,
                                         PointerType = PointerKind.RefPtr,
                                         IndirectionLevel = 1};
        out DWORD pdwOutVersion
                with IDL{PointerType = PointerKind.RefPtr, IndirectionLevel = 1};
        out DRS_MSG_VERIFYREPLY[pdwOutVersion] pmsgOut
                with IDL{Switch_Is = pdwOutVersion,
                                          PointerType = PointerKind.RefPtr,
                                          IndirectionLevel = 1};
        result ULONG ReturnValue;
        
        override string ToString()
        {
            return
                "IDL_DRSVerifyNames" + ", hDrs = " + hDrs.ToString() +
                ", dwInVersion = " + dwInVersion.ToString() + ", pmsgIn = " +
                pmsgIn.ToString() + ", pdwOutVersion = " +
                pdwOutVersion.ToString() + ", pmsgOut = " + pmsgOut.ToString() +
                ", ReturnValue = " + ReturnValue.ToString();
        }
    }
    with IDL{Opnum = 8};
    
    accepts operation IDL_DRSGetMemberships
    {
        in DRS_HANDLE hDrs with IDL{PointerType = PointerKind.RefPtr};
        in DWORD dwInVersion;
        in DRS_MSG_REVMEMB_REQ[dwInVersion] pmsgIn
               with IDL{Switch_Is = dwInVersion,
                                         PointerType = PointerKind.RefPtr,
                                         IndirectionLevel = 1};
        out DWORD pdwOutVersion
                with IDL{PointerType = PointerKind.RefPtr, IndirectionLevel = 1};
        out DRS_MSG_REVMEMB_REPLY[pdwOutVersion] pmsgOut
                with IDL{Switch_Is = pdwOutVersion,
                                          PointerType = PointerKind.RefPtr,
                                          IndirectionLevel = 1};
        result ULONG ReturnValue;
        
        override string ToString()
        {
            return
                "IDL_DRSGetMemberships" + ", hDrs = " + hDrs.ToString() +
                ", dwInVersion = " + dwInVersion.ToString() + ", pmsgIn = " +
                pmsgIn.ToString() + ", pdwOutVersion = " +
                pdwOutVersion.ToString() + ", pmsgOut = " + pmsgOut.ToString() +
                ", ReturnValue = " + ReturnValue.ToString();
        }
    }
    with IDL{Opnum = 9};
    
    accepts operation IDL_DRSInterDomainMove
    {
        in DRS_HANDLE hDrs with IDL{PointerType = PointerKind.RefPtr};
        in DWORD dwInVersion;
        in DRS_MSG_MOVEREQ[dwInVersion] pmsgIn
               with IDL{Switch_Is = dwInVersion,
                                         PointerType = PointerKind.RefPtr,
                                         IndirectionLevel = 1};
        out DWORD pdwOutVersion
                with IDL{PointerType = PointerKind.RefPtr, IndirectionLevel = 1};
        out DRS_MSG_MOVEREPLY[pdwOutVersion] pmsgOut
                with IDL{Switch_Is = pdwOutVersion,
                                          PointerType = PointerKind.RefPtr,
                                          IndirectionLevel = 1};
        result ULONG ReturnValue;
        
        override string ToString()
        {
            return
                "IDL_DRSInterDomainMove" + ", hDrs = " + hDrs.ToString() +
                ", dwInVersion = " + dwInVersion.ToString() + ", pmsgIn = " +
                pmsgIn.ToString() + ", pdwOutVersion = " +
                pdwOutVersion.ToString() + ", pmsgOut = " + pmsgOut.ToString() +
                ", ReturnValue = " + ReturnValue.ToString();
        }
    }
    with IDL{Opnum = 10};
    
    accepts operation IDL_DRSGetNT4ChangeLog
    {
        in DRS_HANDLE hDrs with IDL{PointerType = PointerKind.RefPtr};
        in DWORD dwInVersion;
        in DRS_MSG_NT4_CHGLOG_REQ[dwInVersion] pmsgIn
               with IDL{Switch_Is = dwInVersion,
                                         PointerType = PointerKind.RefPtr,
                                         IndirectionLevel = 1};
        out DWORD pdwOutVersion
                with IDL{PointerType = PointerKind.RefPtr, IndirectionLevel = 1};
        out DRS_MSG_NT4_CHGLOG_REPLY[pdwOutVersion] pmsgOut
                with IDL{Switch_Is = pdwOutVersion,
                                          PointerType = PointerKind.RefPtr,
                                          IndirectionLevel = 1};
        result ULONG ReturnValue;
        
        override string ToString()
        {
            return
                "IDL_DRSGetNT4ChangeLog" + ", hDrs = " + hDrs.ToString() +
                ", dwInVersion = " + dwInVersion.ToString() + ", pmsgIn = " +
                pmsgIn.ToString() + ", pdwOutVersion = " +
                pdwOutVersion.ToString() + ", pmsgOut = " + pmsgOut.ToString() +
                ", ReturnValue = " + ReturnValue.ToString();
        }
    }
    with IDL{Opnum = 11};
    
    accepts operation IDL_DRSCrackNames
    {
        in DRS_HANDLE hDrs with IDL{PointerType = PointerKind.RefPtr};
        in DWORD dwInVersion;
        in DRS_MSG_CRACKREQ[dwInVersion] pmsgIn
               with IDL{Switch_Is = dwInVersion,
                                         PointerType = PointerKind.RefPtr,
                                         IndirectionLevel = 1};
        out DWORD pdwOutVersion
                with IDL{PointerType = PointerKind.RefPtr, IndirectionLevel = 1};
        out DRS_MSG_CRACKREPLY[pdwOutVersion] pmsgOut
                with IDL{Switch_Is = pdwOutVersion,
                                          PointerType = PointerKind.RefPtr,
                                          IndirectionLevel = 1};
        result ULONG ReturnValue;
        
        override string ToString()
        {
            return
                "IDL_DRSCrackNames" + ", hDrs = " + hDrs.ToString() +
                ", dwInVersion = " + dwInVersion.ToString() + ", pmsgIn = " +
                pmsgIn.ToString() + ", pdwOutVersion = " +
                pdwOutVersion.ToString() + ", pmsgOut = " + pmsgOut.ToString() +
                ", ReturnValue = " + ReturnValue.ToString();
        }
    }
    with IDL{Opnum = 12};
    
    accepts operation IDL_DRSWriteSPN
    {
        in DRS_HANDLE hDrs with IDL{PointerType = PointerKind.RefPtr};
        in DWORD dwInVersion;
        in DRS_MSG_SPNREQ[dwInVersion] pmsgIn
               with IDL{Switch_Is = dwInVersion,
                                         PointerType = PointerKind.RefPtr,
                                         IndirectionLevel = 1};
        out DWORD pdwOutVersion
                with IDL{PointerType = PointerKind.RefPtr, IndirectionLevel = 1};
        out DRS_MSG_SPNREPLY[pdwOutVersion] pmsgOut
                with IDL{Switch_Is = pdwOutVersion,
                                          PointerType = PointerKind.RefPtr,
                                          IndirectionLevel = 1};
        result ULONG ReturnValue;
        
        override string ToString()
        {
            return
                "IDL_DRSWriteSPN" + ", hDrs = " + hDrs.ToString() +
                ", dwInVersion = " + dwInVersion.ToString() + ", pmsgIn = " +
                pmsgIn.ToString() + ", pdwOutVersion = " +
                pdwOutVersion.ToString() + ", pmsgOut = " + pmsgOut.ToString() +
                ", ReturnValue = " + ReturnValue.ToString();
        }
    }
    with IDL{Opnum = 13};
    
    accepts operation IDL_DRSRemoveDsServer
    {
        in DRS_HANDLE hDrs with IDL{PointerType = PointerKind.RefPtr};
        in DWORD dwInVersion;
        in DRS_MSG_RMSVRREQ[dwInVersion] pmsgIn
               with IDL{Switch_Is = dwInVersion,
                                         PointerType = PointerKind.RefPtr,
                                         IndirectionLevel = 1};
        out DWORD pdwOutVersion
                with IDL{PointerType = PointerKind.RefPtr, IndirectionLevel = 1};
        out DRS_MSG_RMSVRREPLY[pdwOutVersion] pmsgOut
                with IDL{Switch_Is = pdwOutVersion,
                                          PointerType = PointerKind.RefPtr,
                                          IndirectionLevel = 1};
        result ULONG ReturnValue;
        
        override string ToString()
        {
            return
                "IDL_DRSRemoveDsServer" + ", hDrs = " + hDrs.ToString() +
                ", dwInVersion = " + dwInVersion.ToString() + ", pmsgIn = " +
                pmsgIn.ToString() + ", pdwOutVersion = " +
                pdwOutVersion.ToString() + ", pmsgOut = " + pmsgOut.ToString() +
                ", ReturnValue = " + ReturnValue.ToString();
        }
    }
    with IDL{Opnum = 14};
    
    accepts operation IDL_DRSRemoveDsDomain
    {
        in DRS_HANDLE hDrs with IDL{PointerType = PointerKind.RefPtr};
        in DWORD dwInVersion;
        in DRS_MSG_RMDMNREQ[dwInVersion] pmsgIn
               with IDL{Switch_Is = dwInVersion,
                                         PointerType = PointerKind.RefPtr,
                                         IndirectionLevel = 1};
        out DWORD pdwOutVersion
                with IDL{PointerType = PointerKind.RefPtr, IndirectionLevel = 1};
        out DRS_MSG_RMDMNREPLY[pdwOutVersion] pmsgOut
                with IDL{Switch_Is = pdwOutVersion,
                                          PointerType = PointerKind.RefPtr,
                                          IndirectionLevel = 1};
        result ULONG ReturnValue;
        
        override string ToString()
        {
            return
                "IDL_DRSRemoveDsDomain" + ", hDrs = " + hDrs.ToString() +
                ", dwInVersion = " + dwInVersion.ToString() + ", pmsgIn = " +
                pmsgIn.ToString() + ", pdwOutVersion = " +
                pdwOutVersion.ToString() + ", pmsgOut = " + pmsgOut.ToString() +
                ", ReturnValue = " + ReturnValue.ToString();
        }
    }
    with IDL{Opnum = 15};
    
    accepts operation IDL_DRSDomainControllerInfo
    {
        in DRS_HANDLE hDrs with IDL{PointerType = PointerKind.RefPtr};
        in DWORD dwInVersion;
        in DRS_MSG_DCINFOREQ[dwInVersion] pmsgIn
               with IDL{Switch_Is = dwInVersion,
                                         PointerType = PointerKind.RefPtr,
                                         IndirectionLevel = 1};
        out DWORD pdwOutVersion
                with IDL{PointerType = PointerKind.RefPtr, IndirectionLevel = 1};
        out DRS_MSG_DCINFOREPLY[pdwOutVersion] pmsgOut
                with IDL{Switch_Is = pdwOutVersion,
                                          PointerType = PointerKind.RefPtr,
                                          IndirectionLevel = 1};
        result ULONG ReturnValue;
        
        override string ToString()
        {
            return
                "IDL_DRSDomainControllerInfo" + ", hDrs = " + hDrs.ToString() +
                ", dwInVersion = " + dwInVersion.ToString() + ", pmsgIn = " +
                pmsgIn.ToString() + ", pdwOutVersion = " +
                pdwOutVersion.ToString() + ", pmsgOut = " + pmsgOut.ToString() +
                ", ReturnValue = " + ReturnValue.ToString();
        }
    }
    with IDL{Opnum = 16};
    
    accepts operation IDL_DRSAddEntry
    {
        in DRS_HANDLE hDrs with IDL{PointerType = PointerKind.RefPtr};
        in DWORD dwInVersion;
        in DRS_MSG_ADDENTRYREQ[dwInVersion] pmsgIn
               with IDL{Switch_Is = dwInVersion,
                                         PointerType = PointerKind.RefPtr,
                                         IndirectionLevel = 1};
        out DWORD pdwOutVersion
                with IDL{PointerType = PointerKind.RefPtr, IndirectionLevel = 1};
        out DRS_MSG_ADDENTRYREPLY[pdwOutVersion] pmsgOut
                with IDL{Switch_Is = pdwOutVersion,
                                          PointerType = PointerKind.RefPtr,
                                          IndirectionLevel = 1};
        result ULONG ReturnValue;
        
        override string ToString()
        {
            return
                "IDL_DRSAddEntry" + ", hDrs = " + hDrs.ToString() +
                ", dwInVersion = " + dwInVersion.ToString() + ", pmsgIn = " +
                pmsgIn.ToString() + ", pdwOutVersion = " +
                pdwOutVersion.ToString() + ", pmsgOut = " + pmsgOut.ToString() +
                ", ReturnValue = " + ReturnValue.ToString();
        }
    }
    with IDL{Opnum = 17};
    
    accepts operation IDL_DRSExecuteKCC
    {
        in DRS_HANDLE hDrs with IDL{PointerType = PointerKind.RefPtr};
        in DWORD dwInVersion;
        in DRS_MSG_KCC_EXECUTE[dwInVersion] pmsgIn
               with IDL{Switch_Is = dwInVersion,
                                         PointerType = PointerKind.RefPtr,
                                         IndirectionLevel = 1};
        result ULONG ReturnValue;
        
        override string ToString()
        {
            return
                "IDL_DRSExecuteKCC" + ", hDrs = " + hDrs.ToString() +
                ", dwInVersion = " + dwInVersion.ToString() + ", pmsgIn = " +
                pmsgIn.ToString() + ", ReturnValue = " + ReturnValue.ToString();
        }
    }
    with IDL{Opnum = 18};
    
    accepts operation IDL_DRSGetReplInfo
    {
        in DRS_HANDLE hDrs with IDL{PointerType = PointerKind.RefPtr};
        in DWORD dwInVersion;
        in DRS_MSG_GETREPLINFO_REQ[dwInVersion] pmsgIn
               with IDL{Switch_Is = dwInVersion,
                                         PointerType = PointerKind.RefPtr,
                                         IndirectionLevel = 1};
        out DWORD pdwOutVersion
                with IDL{PointerType = PointerKind.RefPtr, IndirectionLevel = 1};
        out DRS_MSG_GETREPLINFO_REPLY[pdwOutVersion] pmsgOut
                with IDL{Switch_Is = pdwOutVersion,
                                          PointerType = PointerKind.RefPtr,
                                          IndirectionLevel = 1};
        result ULONG ReturnValue;
        
        override string ToString()
        {
            return
                "IDL_DRSGetReplInfo" + ", hDrs = " + hDrs.ToString() +
                ", dwInVersion = " + dwInVersion.ToString() + ", pmsgIn = " +
                pmsgIn.ToString() + ", pdwOutVersion = " +
                pdwOutVersion.ToString() + ", pmsgOut = " + pmsgOut.ToString() +
                ", ReturnValue = " + ReturnValue.ToString();
        }
    }
    with IDL{Opnum = 19};
    
    accepts operation IDL_DRSAddSidHistory
    {
        in DRS_HANDLE hDrs with IDL{PointerType = PointerKind.RefPtr};
        in DWORD dwInVersion;
        in DRS_MSG_ADDSIDREQ[dwInVersion] pmsgIn
               with IDL{Switch_Is = dwInVersion,
                                         PointerType = PointerKind.RefPtr,
                                         IndirectionLevel = 1};
        out DWORD pdwOutVersion
                with IDL{PointerType = PointerKind.RefPtr, IndirectionLevel = 1};
        out DRS_MSG_ADDSIDREPLY[pdwOutVersion] pmsgOut
                with IDL{Switch_Is = pdwOutVersion,
                                          PointerType = PointerKind.RefPtr,
                                          IndirectionLevel = 1};
        result ULONG ReturnValue;
        
        override string ToString()
        {
            return
                "IDL_DRSAddSidHistory" + ", hDrs = " + hDrs.ToString() +
                ", dwInVersion = " + dwInVersion.ToString() + ", pmsgIn = " +
                pmsgIn.ToString() + ", pdwOutVersion = " +
                pdwOutVersion.ToString() + ", pmsgOut = " + pmsgOut.ToString() +
                ", ReturnValue = " + ReturnValue.ToString();
        }
    }
    with IDL{Opnum = 20};
    
    accepts operation IDL_DRSGetMemberships2
    {
        in DRS_HANDLE hDrs with IDL{PointerType = PointerKind.RefPtr};
        in DWORD dwInVersion;
        in DRS_MSG_GETMEMBERSHIPS2_REQ[dwInVersion] pmsgIn
               with IDL{Switch_Is = dwInVersion,
                                         PointerType = PointerKind.RefPtr,
                                         IndirectionLevel = 1};
        out DWORD pdwOutVersion
                with IDL{PointerType = PointerKind.RefPtr, IndirectionLevel = 1};
        out DRS_MSG_GETMEMBERSHIPS2_REPLY[pdwOutVersion] pmsgOut
                with IDL{Switch_Is = pdwOutVersion,
                                          PointerType = PointerKind.RefPtr,
                                          IndirectionLevel = 1};
        result ULONG ReturnValue;
        
        override string ToString()
        {
            return
                "IDL_DRSGetMemberships2" + ", hDrs = " + hDrs.ToString() +
                ", dwInVersion = " + dwInVersion.ToString() + ", pmsgIn = " +
                pmsgIn.ToString() + ", pdwOutVersion = " +
                pdwOutVersion.ToString() + ", pmsgOut = " + pmsgOut.ToString() +
                ", ReturnValue = " + ReturnValue.ToString();
        }
    }
    with IDL{Opnum = 21};
    
    accepts operation IDL_DRSReplicaVerifyObjects
    {
        in DRS_HANDLE hDrs with IDL{PointerType = PointerKind.RefPtr};
        in DWORD dwVersion;
        in DRS_MSG_REPVERIFYOBJ[dwVersion] pmsgVerify
               with IDL{Switch_Is = dwVersion,
                                         PointerType = PointerKind.RefPtr,
                                         IndirectionLevel = 1};
        result ULONG ReturnValue;
        
        override string ToString()
        {
            return
                "IDL_DRSReplicaVerifyObjects" + ", hDrs = " + hDrs.ToString() +
                ", dwVersion = " + dwVersion.ToString() + ", pmsgVerify = " +
                pmsgVerify.ToString() + ", ReturnValue = " +
                ReturnValue.ToString();
        }
    }
    with IDL{Opnum = 22};
    
    accepts operation IDL_DRSGetObjectExistence
    {
        in DRS_HANDLE hDrs with IDL{PointerType = PointerKind.RefPtr};
        in DWORD dwInVersion;
        in DRS_MSG_EXISTREQ[dwInVersion] pmsgIn
               with IDL{Switch_Is = dwInVersion,
                                         PointerType = PointerKind.RefPtr,
                                         IndirectionLevel = 1};
        out DWORD pdwOutVersion
                with IDL{PointerType = PointerKind.RefPtr, IndirectionLevel = 1};
        out DRS_MSG_EXISTREPLY[pdwOutVersion] pmsgOut
                with IDL{Switch_Is = pdwOutVersion,
                                          PointerType = PointerKind.RefPtr,
                                          IndirectionLevel = 1};
        result ULONG ReturnValue;
        
        override string ToString()
        {
            return
                "IDL_DRSGetObjectExistence" + ", hDrs = " + hDrs.ToString() +
                ", dwInVersion = " + dwInVersion.ToString() + ", pmsgIn = " +
                pmsgIn.ToString() + ", pdwOutVersion = " +
                pdwOutVersion.ToString() + ", pmsgOut = " + pmsgOut.ToString() +
                ", ReturnValue = " + ReturnValue.ToString();
        }
    }
    with IDL{Opnum = 23};
    
    accepts operation IDL_DRSQuerySitesByCost
    {
        in DRS_HANDLE hDrs with IDL{PointerType = PointerKind.RefPtr};
        in DWORD dwInVersion;
        in DRS_MSG_QUERYSITESREQ[dwInVersion] pmsgIn
               with IDL{Switch_Is = dwInVersion,
                                         PointerType = PointerKind.RefPtr,
                                         IndirectionLevel = 1};
        out DWORD pdwOutVersion
                with IDL{PointerType = PointerKind.RefPtr, IndirectionLevel = 1};
        out DRS_MSG_QUERYSITESREPLY[pdwOutVersion] pmsgOut
                with IDL{Switch_Is = pdwOutVersion,
                                          PointerType = PointerKind.RefPtr,
                                          IndirectionLevel = 1};
        result ULONG ReturnValue;
        
        override string ToString()
        {
            return
                "IDL_DRSQuerySitesByCost" + ", hDrs = " + hDrs.ToString() +
                ", dwInVersion = " + dwInVersion.ToString() + ", pmsgIn = " +
                pmsgIn.ToString() + ", pdwOutVersion = " +
                pdwOutVersion.ToString() + ", pmsgOut = " + pmsgOut.ToString() +
                ", ReturnValue = " + ReturnValue.ToString();
        }
    }
    with IDL{Opnum = 24};
    
    accepts operation IDL_DRSInitDemotion
    {
        in DRS_HANDLE hDrs with IDL{PointerType = PointerKind.RefPtr};
        in DWORD dwInVersion;
        in DRS_MSG_INIT_DEMOTIONREQ[dwInVersion] pmsgIn
               with IDL{Switch_Is = dwInVersion,
                                         PointerType = PointerKind.RefPtr,
                                         IndirectionLevel = 1};
        out DWORD pdwOutVersion
                with IDL{PointerType = PointerKind.RefPtr, IndirectionLevel = 1};
        out DRS_MSG_INIT_DEMOTIONREPLY[pdwOutVersion] pmsgOut
                with IDL{Switch_Is = pdwOutVersion,
                                          PointerType = PointerKind.RefPtr,
                                          IndirectionLevel = 1};
        result ULONG ReturnValue;
        
        override string ToString()
        {
            return
                "IDL_DRSInitDemotion" + ", hDrs = " + hDrs.ToString() +
                ", dwInVersion = " + dwInVersion.ToString() + ", pmsgIn = " +
                pmsgIn.ToString() + ", pdwOutVersion = " +
                pdwOutVersion.ToString() + ", pmsgOut = " + pmsgOut.ToString() +
                ", ReturnValue = " + ReturnValue.ToString();
        }
    }
    with IDL{Opnum = 25};
    
    accepts operation IDL_DRSReplicaDemotion
    {
        in DRS_HANDLE hDrs with IDL{PointerType = PointerKind.RefPtr};
        in DWORD dwInVersion;
        in DRS_MSG_REPLICA_DEMOTIONREQ[dwInVersion] pmsgIn
               with IDL{Switch_Is = dwInVersion,
                                         PointerType = PointerKind.RefPtr,
                                         IndirectionLevel = 1};
        out DWORD pdwOutVersion
                with IDL{PointerType = PointerKind.RefPtr, IndirectionLevel = 1};
        out DRS_MSG_REPLICA_DEMOTIONREPLY[pdwOutVersion] pmsgOut
                with IDL{Switch_Is = pdwOutVersion,
                                          PointerType = PointerKind.RefPtr,
                                          IndirectionLevel = 1};
        result ULONG ReturnValue;
        
        override string ToString()
        {
            return
                "IDL_DRSReplicaDemotion" + ", hDrs = " + hDrs.ToString() +
                ", dwInVersion = " + dwInVersion.ToString() + ", pmsgIn = " +
                pmsgIn.ToString() + ", pdwOutVersion = " +
                pdwOutVersion.ToString() + ", pmsgOut = " + pmsgOut.ToString() +
                ", ReturnValue = " + ReturnValue.ToString();
        }
    }
    with IDL{Opnum = 26};
    
    accepts operation IDL_DRSFinishDemotion
    {
        in DRS_HANDLE hDrs with IDL{PointerType = PointerKind.RefPtr};
        in DWORD dwInVersion;
        in DRS_MSG_FINISH_DEMOTIONREQ[dwInVersion] pmsgIn
               with IDL{Switch_Is = dwInVersion,
                                         PointerType = PointerKind.RefPtr,
                                         IndirectionLevel = 1};
        out DWORD pdwOutVersion
                with IDL{PointerType = PointerKind.RefPtr, IndirectionLevel = 1};
        out DRS_MSG_FINISH_DEMOTIONREPLY[pdwOutVersion] pmsgOut
                with IDL{Switch_Is = pdwOutVersion,
                                          PointerType = PointerKind.RefPtr,
                                          IndirectionLevel = 1};
        result ULONG ReturnValue;
        
        override string ToString()
        {
            return
                "IDL_DRSFinishDemotion" + ", hDrs = " + hDrs.ToString() +
                ", dwInVersion = " + dwInVersion.ToString() + ", pmsgIn = " +
                pmsgIn.ToString() + ", pdwOutVersion = " +
                pdwOutVersion.ToString() + ", pmsgOut = " + pmsgOut.ToString() +
                ", ReturnValue = " + ReturnValue.ToString();
        }
    }
    with IDL{Opnum = 27};
    
    accepts operation IDL_DRSAddCloneDC
    {
        in DRS_HANDLE hDrs with IDL{PointerType = PointerKind.RefPtr};
        in DWORD dwInVersion;
        in DRS_MSG_ADDCLONEDCREQ[dwInVersion] pmsgIn
               with IDL{Switch_Is = dwInVersion,
                                         PointerType = PointerKind.RefPtr,
                                         IndirectionLevel = 1};
        out DWORD pdwOutVersion
                with IDL{PointerType = PointerKind.RefPtr, IndirectionLevel = 1};
        out DRS_MSG_ADDCLONEDCREPLY[pdwOutVersion] pmsgOut
                with IDL{Switch_Is = pdwOutVersion,
                                          PointerType = PointerKind.RefPtr,
                                          IndirectionLevel = 1};
        result ULONG ReturnValue;
        
        override string ToString()
        {
            return
                "IDL_DRSAddCloneDC" + ", hDrs = " + hDrs.ToString() +
                ", dwInVersion = " + dwInVersion.ToString() + ", pmsgIn = " +
                pmsgIn.ToString() + ", pdwOutVersion = " +
                pdwOutVersion.ToString() + ", pmsgOut = " + pmsgOut.ToString() +
                ", ReturnValue = " + ReturnValue.ToString();
        }
    }
    with IDL{Opnum = 28};
    
    accepts operation IDL_DRSWriteNgcKey
    {
        in DRS_HANDLE hDrs with IDL{PointerType = PointerKind.RefPtr};
        in DWORD dwInVersion;
        in DRS_MSG_WRITENGCKEYREQ[dwInVersion] pmsgIn
               with IDL{Switch_Is = dwInVersion,
                                         PointerType = PointerKind.RefPtr,
                                         IndirectionLevel = 1};
        out DWORD pdwOutVersion
                with IDL{PointerType = PointerKind.RefPtr, IndirectionLevel = 1};
        out DRS_MSG_WRITENGCKEYREPLY[pdwOutVersion] pmsgOut
                with IDL{Switch_Is = pdwOutVersion,
                                          PointerType = PointerKind.RefPtr,
                                          IndirectionLevel = 1};
        result ULONG ReturnValue;
        
        override string ToString()
        {
            return
                "IDL_DRSWriteNgcKey" + ", hDrs = " + hDrs.ToString() +
                ", dwInVersion = " + dwInVersion.ToString() + ", pmsgIn = " +
                pmsgIn.ToString() + ", pdwOutVersion = " +
                pdwOutVersion.ToString() + ", pmsgOut = " + pmsgOut.ToString() +
                ", ReturnValue = " + ReturnValue.ToString();
        }
    }
    with IDL{Opnum = 29};
    
    accepts operation IDL_DRSReadNgcKey
    {
        in DRS_HANDLE hDrs with IDL{PointerType = PointerKind.RefPtr};
        in DWORD dwInVersion;
        in DRS_MSG_READNGCKEYREQ[dwInVersion] pmsgIn
               with IDL{Switch_Is = dwInVersion,
                                         PointerType = PointerKind.RefPtr,
                                         IndirectionLevel = 1};
        out DWORD pdwOutVersion
                with IDL{PointerType = PointerKind.RefPtr, IndirectionLevel = 1};
        out DRS_MSG_READNGCKEYREPLY[pdwOutVersion] pmsgOut
                with IDL{Switch_Is = pdwOutVersion,
                                          PointerType = PointerKind.RefPtr,
                                          IndirectionLevel = 1};
        result ULONG ReturnValue;
        
        override string ToString()
        {
            return
                "IDL_DRSReadNgcKey" + ", hDrs = " + hDrs.ToString() +
                ", dwInVersion = " + dwInVersion.ToString() + ", pmsgIn = " +
                pmsgIn.ToString() + ", pdwOutVersion = " +
                pdwOutVersion.ToString() + ", pmsgOut = " + pmsgOut.ToString() +
                ", ReturnValue = " + ReturnValue.ToString();
        }
    }
    with IDL{Opnum = 30};
}
with IDL{Uuid = {e3514235-4b06-11d1-ab04-00c04fc2dcd2},
                          Version = "4.0",
                          Pointer_default = PointerKind.UniquePtr};

contract dsaop
{
    accepts operation IDL_DSAPrepareScript
    {
        in optional handle_t hRpc;
        in DWORD dwInVersion;
        in DSA_MSG_PREPARE_SCRIPT_REQ[dwInVersion] pmsgIn
               with IDL{Switch_Is = dwInVersion,
                                         PointerType = PointerKind.RefPtr,
                                         IndirectionLevel = 1};
        out DWORD pdwOutVersion
                with IDL{PointerType = PointerKind.RefPtr, IndirectionLevel = 1};
        out DSA_MSG_PREPARE_SCRIPT_REPLY[pdwOutVersion] pmsgOut
                with IDL{Switch_Is = pdwOutVersion,
                                          PointerType = PointerKind.RefPtr,
                                          IndirectionLevel = 1};
        result ULONG ReturnValue;
        
        override string ToString()
        {
            return
                "IDL_DSAPrepareScript" + ", hRpc = " + hRpc.ToString() +
                ", dwInVersion = " + dwInVersion.ToString() + ", pmsgIn = " +
                pmsgIn.ToString() + ", pdwOutVersion = " +
                pdwOutVersion.ToString() + ", pmsgOut = " + pmsgOut.ToString() +
                ", ReturnValue = " + ReturnValue.ToString();
        }
    }
    with IDL{Opnum = 0};
    
    accepts operation IDL_DSAExecuteScript
    {
        in optional handle_t hRpc;
        in DWORD dwInVersion;
        in DSA_MSG_EXECUTE_SCRIPT_REQ[dwInVersion] pmsgIn
               with IDL{Switch_Is = dwInVersion,
                                         PointerType = PointerKind.RefPtr,
                                         IndirectionLevel = 1};
        out DWORD pdwOutVersion
                with IDL{PointerType = PointerKind.RefPtr, IndirectionLevel = 1};
        out DSA_MSG_EXECUTE_SCRIPT_REPLY[pdwOutVersion] pmsgOut
                with IDL{Switch_Is = pdwOutVersion,
                                          PointerType = PointerKind.RefPtr,
                                          IndirectionLevel = 1};
        result ULONG ReturnValue;
        
        override string ToString()
        {
            return
                "IDL_DSAExecuteScript" + ", hRpc = " + hRpc.ToString() +
                ", dwInVersion = " + dwInVersion.ToString() + ", pmsgIn = " +
                pmsgIn.ToString() + ", pdwOutVersion = " +
                pdwOutVersion.ToString() + ", pmsgOut = " + pmsgOut.ToString() +
                ", ReturnValue = " + ReturnValue.ToString();
        }
    }
    with IDL{Opnum = 1};
}
with IDL{Uuid = {7c44d7d4-31d5-424c-bd5e-2b3e1f323d22},
                          Version = "1.0",
                          Pointer_default = PointerKind.UniquePtr};

typedef DRS_EXTENSIONS = __MIDL_drsuapi_0062 ;

type __MIDL_drsuapi_0062
{
    DWORD cb with IDL{Range = new RangePattern {Low = 1, High = 10000}};
    array<BYTE> rgb with IDL{Size_is = [cb], IndirectionLevel = 1};
}

typedef DRS_HANDLE = ContextHandle ;

typedef DRS_MSG_REPSYNC = __MIDL_drsuapi_0082 ;

type __MIDL_drsuapi_0082[DWORD tag]
{
    optional [|tag in {1}|] DRS_MSG_REPSYNC_V1 V1 with IDL{Case = [1]};
    optional [|tag in {2}|] DRS_MSG_REPSYNC_V2 V2 with IDL{Case = [2]};
}
with IDL{Switch_Type = TypeOf<DWORD>(), UnionKind = UnionKind.NonEncapsulated};

typedef DRS_MSG_REPSYNC_V1 = __MIDL_drsuapi_0080 ;

type __MIDL_drsuapi_0080
{
    DSNAME pNC with IDL{PointerType = PointerKind.RefPtr, IndirectionLevel = 1};
    UUID uuidDsaSrc;
    string pszDsaSrc with IDL{PointerType = PointerKind.UniquePtr,
                                  BaseStringType = TypeOf<char>(),
                                  String = true,
                                  IndirectionLevel = 1};
    ULONG ulOptions;
}

typedef DSNAME = __MIDL_drsuapi_0002 ;

type __MIDL_drsuapi_0002
{
    IDLUlong structLen;
    IDLUlong SidLen;
    UUID Guid;
    NT4SID Sid;
    IDLUlong NameLen;
    array<WCHAR> StringName
        with IDL{Size_is = [NameLen+1],
                  Range = new RangePattern {Low = 0, High = 10485761},
                  IndirectionLevel = 1};
}

typedef NT4SID = __MIDL_drsuapi_0001 ;

type __MIDL_drsuapi_0001
{
    array<char> Data with IDL{Dimensions = [28]};
}

typedef DRS_MSG_REPSYNC_V2 = __MIDL_drsuapi_0081 ;

type __MIDL_drsuapi_0081
{
    DSNAME pNC with IDL
                        {PointerType = PointerKind.RefPtr, IndirectionLevel = 1};
    UUID uuidDsaSrc;
    string pszDsaSrc
        with IDL{PointerType = PointerKind.UniquePtr,
                                  BaseStringType = TypeOf<char>(),
                                  String = true,
                                  IndirectionLevel = 1};
    ULONG ulOptions;
    UUID correlationID;
    VAR_SIZE_BUFFER_WITH_VERSION pReservedBuffer
        with IDL
                 {PointerType = PointerKind.UniquePtr, IndirectionLevel = 1};
}

typedef VAR_SIZE_BUFFER_WITH_VERSION = __MIDL_drsuapi_0073 ;

type __MIDL_drsuapi_0073
{
    ULONG ulVersion;
    ULONG cbByteBuffer;
    ULONGLONG ullPadding;
    array<BYTE> rgbBuffer
        with IDL{Size_is = [cbByteBuffer], IndirectionLevel = 1};
}

typedef DRS_MSG_GETCHGREQ = __MIDL_drsuapi_0075 ;

type __MIDL_drsuapi_0075[DWORD tag]
{
    optional [|tag in {4}|] DRS_MSG_GETCHGREQ_V4 V4
        with IDL{Case = [4]};
    optional [|tag in {5}|] DRS_MSG_GETCHGREQ_V5 V5
        with IDL{Case = [5]};
    optional [|tag in {7}|] DRS_MSG_GETCHGREQ_V7 V7
        with IDL{Case = [7]};
    optional [|tag in {8}|] DRS_MSG_GETCHGREQ_V8 V8
        with IDL{Case = [8]};
    optional [|tag in {10}|] DRS_MSG_GETCHGREQ_V10 V10
        with IDL{Case = [10]};
    optional [|tag in {11}|] DRS_MSG_GETCHGREQ_V11 V11
        with IDL{Case = [11]};
}
with IDL
         {Switch_Type = TypeOf<DWORD>(), UnionKind = UnionKind.NonEncapsulated};

typedef DRS_MSG_GETCHGREQ_V4 = __MIDL_drsuapi_0064 ;

type __MIDL_drsuapi_0064
{
    UUID uuidTransportObj;
    MTX_ADDR pmtxReturnAddress
        with IDL{PointerType = PointerKind.RefPtr, IndirectionLevel = 1};
    DRS_MSG_GETCHGREQ_V3 V3;
}

typedef MTX_ADDR = __MIDL_drsuapi_0010 ;

type __MIDL_drsuapi_0010
{
    IDLUlong mtx_namelen
        with IDL{Range = new RangePattern {Low = 1, High = 256}};
    array<char> mtx_name with IDL{Size_is = [mtx_namelen], IndirectionLevel = 1};
}

typedef DRS_MSG_GETCHGREQ_V3 = __MIDL_drsuapi_0063 ;

type __MIDL_drsuapi_0063
{
    UUID uuidDsaObjDest;
    UUID uuidInvocIdSrc;
    DSNAME pNC with IDL{PointerType = PointerKind.RefPtr, IndirectionLevel = 1};
    USN_VECTOR usnvecFrom;
    UPTODATE_VECTOR_V1_EXT pUpToDateVecDestV1
        with IDL{PointerType = PointerKind.UniquePtr, IndirectionLevel = 1};
    PARTIAL_ATTR_VECTOR_V1_EXT pPartialAttrVecDestV1
        with IDL{PointerType = PointerKind.UniquePtr, IndirectionLevel = 1};
    SCHEMA_PREFIX_TABLE PrefixTableDest;
    ULONG ulFlags;
    ULONG cMaxObjects;
    ULONG cMaxBytes;
    ULONG ulExtendedOp;
}

typedef USN_VECTOR = __MIDL_drsuapi_0003 ;

type __MIDL_drsuapi_0003
{
    USN usnHighObjUpdate;
    USN usnReserved;
    USN usnHighPropUpdate;
}

typedef USN = LONGLONG ;

typedef UPTODATE_VECTOR_V1_EXT = __MIDL_drsuapi_0005 ;

type __MIDL_drsuapi_0005
{
    DWORD dwVersion;
    DWORD dwReserved1;
    DWORD cNumCursors
        with IDL{Range = new RangePattern {Low = 0, High = 1048576}};
    DWORD dwReserved2;
    array<UPTODATE_CURSOR_V1> rgCursors
        with IDL{Size_is = [cNumCursors], IndirectionLevel = 1};
}

typedef UPTODATE_CURSOR_V1 = __MIDL_drsuapi_0004 ;

type __MIDL_drsuapi_0004
{
    UUID uuidDsa;
    USN usnHighPropUpdate;
}

typedef PARTIAL_ATTR_VECTOR_V1_EXT = __MIDL_drsuapi_0009 ;

type __MIDL_drsuapi_0009
{
    DWORD dwVersion;
    DWORD dwReserved1;
    DWORD cAttrs with IDL{Range = new RangePattern {Low = 1, High = 1048576}};
    array<ATTRTYP> rgPartialAttr
        with IDL{Size_is = [cAttrs], IndirectionLevel = 1};
}

typedef ATTRTYP = ULONG ;

typedef SCHEMA_PREFIX_TABLE = __MIDL_drsuapi_0008 ;

type __MIDL_drsuapi_0008
{
    DWORD PrefixCount
        with IDL{Range = new RangePattern {Low = 0, High = 1048576}};
    PrefixTableEntry pPrefixEntry
        with IDL{Size_is = [PrefixCount], IndirectionLevel = 1};
}

typedef PrefixTableEntry = __MIDL_drsuapi_0007 ;

type __MIDL_drsuapi_0007
{
    IDLUlong ndx;
    OID_t prefix;
}

typedef OID_t = __MIDL_drsuapi_0006 ;

type __MIDL_drsuapi_0006
{
    uint length
        with IDL{Range = new RangePattern {Low = 0, High = 10000}};
    array<BYTE> elements
        with IDL{Size_is = [length], IndirectionLevel = 1};
}

typedef DRS_MSG_GETCHGREQ_V5 = __MIDL_drsuapi_0070 ;

type __MIDL_drsuapi_0070
{
    UUID uuidDsaObjDest;
    UUID uuidInvocIdSrc;
    DSNAME pNC with IDL{PointerType = PointerKind.RefPtr, IndirectionLevel = 1};
    USN_VECTOR usnvecFrom;
    UPTODATE_VECTOR_V1_EXT pUpToDateVecDestV1
        with IDL{PointerType = PointerKind.UniquePtr, IndirectionLevel = 1};
    ULONG ulFlags;
    ULONG cMaxObjects;
    ULONG cMaxBytes;
    ULONG ulExtendedOp;
    ULARGE_INTEGER liFsmoInfo;
}

typedef DRS_MSG_GETCHGREQ_V7 = __MIDL_drsuapi_0065 ;

type __MIDL_drsuapi_0065
{
    UUID uuidTransportObj;
    MTX_ADDR pmtxReturnAddress
        with IDL{PointerType = PointerKind.RefPtr, IndirectionLevel = 1};
    DRS_MSG_GETCHGREQ_V3 V3;
    PARTIAL_ATTR_VECTOR_V1_EXT pPartialAttrSet
        with IDL{PointerType = PointerKind.UniquePtr, IndirectionLevel = 1};
    PARTIAL_ATTR_VECTOR_V1_EXT pPartialAttrSetEx
        with IDL{PointerType = PointerKind.UniquePtr, IndirectionLevel = 1};
    SCHEMA_PREFIX_TABLE PrefixTableDest;
}

typedef DRS_MSG_GETCHGREQ_V8 = __MIDL_drsuapi_0071 ;

type __MIDL_drsuapi_0071
{
    UUID uuidDsaObjDest;
    UUID uuidInvocIdSrc;
    DSNAME pNC with IDL{PointerType = PointerKind.RefPtr, IndirectionLevel = 1};
    USN_VECTOR usnvecFrom;
    UPTODATE_VECTOR_V1_EXT pUpToDateVecDest
        with IDL{PointerType = PointerKind.UniquePtr, IndirectionLevel = 1};
    ULONG ulFlags;
    ULONG cMaxObjects;
    ULONG cMaxBytes;
    ULONG ulExtendedOp;
    ULARGE_INTEGER liFsmoInfo;
    PARTIAL_ATTR_VECTOR_V1_EXT pPartialAttrSet
        with IDL{PointerType = PointerKind.UniquePtr, IndirectionLevel = 1};
    PARTIAL_ATTR_VECTOR_V1_EXT pPartialAttrSetEx
        with IDL{PointerType = PointerKind.UniquePtr, IndirectionLevel = 1};
    SCHEMA_PREFIX_TABLE PrefixTableDest;
}

typedef DRS_MSG_GETCHGREQ_V10 = __MIDL_drsuapi_0072 ;

type __MIDL_drsuapi_0072
{
    UUID uuidDsaObjDest;
    UUID uuidInvocIdSrc;
    DSNAME pNC with IDL
                        {PointerType = PointerKind.RefPtr, IndirectionLevel = 1};
    USN_VECTOR usnvecFrom;
    UPTODATE_VECTOR_V1_EXT pUpToDateVecDest
        with IDL{PointerType = PointerKind.UniquePtr, IndirectionLevel = 1};
    ULONG ulFlags;
    ULONG cMaxObjects;
    ULONG cMaxBytes;
    ULONG ulExtendedOp;
    ULARGE_INTEGER liFsmoInfo;
    PARTIAL_ATTR_VECTOR_V1_EXT pPartialAttrSet
        with IDL{PointerType = PointerKind.UniquePtr, IndirectionLevel = 1};
    PARTIAL_ATTR_VECTOR_V1_EXT pPartialAttrSetEx
        with IDL{PointerType = PointerKind.UniquePtr, IndirectionLevel = 1};
    SCHEMA_PREFIX_TABLE PrefixTableDest;
    ULONG ulMoreFlags;
}

typedef DRS_MSG_GETCHGREQ_V11 = __MIDL_drsuapi_0074 ;

type __MIDL_drsuapi_0074
{
    UUID uuidDsaObjDest;
    UUID uuidInvocIdSrc;
    DSNAME pNC with IDL
                        {PointerType = PointerKind.RefPtr, IndirectionLevel = 1};
    USN_VECTOR usnvecFrom;
    UPTODATE_VECTOR_V1_EXT pUpToDateVecDest
        with IDL
                 {PointerType = PointerKind.UniquePtr, IndirectionLevel = 1};
    ULONG ulFlags;
    ULONG cMaxObjects;
    ULONG cMaxBytes;
    ULONG ulExtendedOp;
    ULARGE_INTEGER liFsmoInfo;
    PARTIAL_ATTR_VECTOR_V1_EXT pPartialAttrSet
        with IDL
                 {PointerType = PointerKind.UniquePtr, IndirectionLevel = 1};
    PARTIAL_ATTR_VECTOR_V1_EXT pPartialAttrSetEx
        with IDL
                 {PointerType = PointerKind.UniquePtr, IndirectionLevel = 1};
    SCHEMA_PREFIX_TABLE PrefixTableDest;
    ULONG ulMoreFlags;
    UUID correlationID;
    VAR_SIZE_BUFFER_WITH_VERSION pReservedBuffer
        with IDL
                 {PointerType = PointerKind.UniquePtr, IndirectionLevel = 1};
}

typedef DRS_MSG_GETCHGREPLY = __MIDL_drsuapi_0079 ;

type __MIDL_drsuapi_0079[DWORD tag]
{
    optional [|tag in {1}|] DRS_MSG_GETCHGREPLY_V1 V1
        with IDL{Case = [1]};
    optional [|tag in {2}|] DRS_MSG_GETCHGREPLY_V2 V2
        with IDL{Case = [2]};
    optional [|tag in {6}|] DRS_MSG_GETCHGREPLY_V6 V6
        with IDL{Case = [6]};
    optional [|tag in {7}|] DRS_MSG_GETCHGREPLY_V7 V7
        with IDL{Case = [7]};
    optional [|tag in {9}|] DRS_MSG_GETCHGREPLY_V9 V9
        with IDL{Case = [9]};
}
with IDL
         {Switch_Type = TypeOf<DWORD>(), UnionKind = UnionKind.NonEncapsulated};

typedef DRS_MSG_GETCHGREPLY_V1 = __MIDL_drsuapi_0066 ;

type __MIDL_drsuapi_0066
{
    UUID uuidDsaObjSrc;
    UUID uuidInvocIdSrc;
    DSNAME pNC
        with IDL{PointerType = PointerKind.UniquePtr, IndirectionLevel = 1};
    USN_VECTOR usnvecFrom;
    USN_VECTOR usnvecTo;
    UPTODATE_VECTOR_V1_EXT pUpToDateVecSrcV1
        with IDL{PointerType = PointerKind.UniquePtr, IndirectionLevel = 1};
    SCHEMA_PREFIX_TABLE PrefixTableSrc;
    ULONG ulExtendedRet;
    ULONG cNumObjects;
    ULONG cNumBytes;
    REPLENTINFLIST pObjects
        with IDL{PointerType = PointerKind.UniquePtr, IndirectionLevel = 1};
    BOOL fMoreData;
}

type REPLENTINFLIST
{
    REPLENTINFLIST pNextEntInf with IDL{IndirectionLevel = 1};
    ENTINF Entinf;
    BOOL fIsNCPrefix;
    UUID pParentGuid with IDL{IndirectionLevel = 1};
    PROPERTY_META_DATA_EXT_VECTOR pMetaDataExt with IDL{IndirectionLevel = 1};
}

typedef ENTINF = __MIDL_drsuapi_0015 ;

type __MIDL_drsuapi_0015
{
    DSNAME pName with IDL{IndirectionLevel = 1};
    IDLUlong ulFlags;
    ATTRBLOCK AttrBlock;
}

typedef ATTRBLOCK = __MIDL_drsuapi_0014 ;

type __MIDL_drsuapi_0014
{
    ULONG attrCount
        with IDL{Range = new RangePattern {Low = 0, High = 1048576}};
    array<ATTR> pAttr
        with IDL{Size_is = [attrCount], IndirectionLevel = 1};
}

typedef ATTR = __MIDL_drsuapi_0013 ;

type __MIDL_drsuapi_0013
{
    ATTRTYP attrTyp;
    ATTRVALBLOCK AttrVal;
}

typedef ATTRVALBLOCK = __MIDL_drsuapi_0012 ;

type __MIDL_drsuapi_0012
{
    ULONG valCount with IDL{Range = new RangePattern {Low = 0, High = 10485760}};
    ATTRVAL pAVal with IDL{Size_is = [valCount], IndirectionLevel = 1};
}

typedef ATTRVAL = __MIDL_drsuapi_0011 ;

type __MIDL_drsuapi_0011
{
    ULONG valLen with IDL{Range = new RangePattern {Low = 0, High = 26214400}};
    array<BYTE> pVal with IDL{Size_is = [valLen], IndirectionLevel = 1};
}

typedef PROPERTY_META_DATA_EXT_VECTOR = __MIDL_drsuapi_0017 ;

type __MIDL_drsuapi_0017
{
    DWORD cNumProps with IDL{Range = new RangePattern {Low = 0, High = 1048576}};
    array<PROPERTY_META_DATA_EXT> rgMetaData
        with IDL{Size_is = [cNumProps], IndirectionLevel = 1};
}

typedef PROPERTY_META_DATA_EXT = __MIDL_drsuapi_0016 ;

type __MIDL_drsuapi_0016
{
    DWORD dwVersion;
    DSTIME timeChanged;
    UUID uuidDsaOriginating;
    USN usnOriginating;
}

typedef DSTIME = LONGLONG ;

typedef DRS_MSG_GETCHGREPLY_V2 = __MIDL_drsuapi_0076 ;

type __MIDL_drsuapi_0076
{
    DRS_COMPRESSED_BLOB CompressedV1;
}

typedef DRS_COMPRESSED_BLOB = __MIDL_drsuapi_0069 ;

type __MIDL_drsuapi_0069
{
    DWORD cbUncompressedSize;
    DWORD cbCompressedSize;
    array<BYTE> pbCompressedData
        with IDL{Size_is = [cbCompressedSize], IndirectionLevel = 1};
}

typedef DRS_MSG_GETCHGREPLY_V6 = __MIDL_drsuapi_0067 ;

type __MIDL_drsuapi_0067
{
    UUID uuidDsaObjSrc;
    UUID uuidInvocIdSrc;
    DSNAME pNC
        with IDL{PointerType = PointerKind.UniquePtr, IndirectionLevel = 1};
    USN_VECTOR usnvecFrom;
    USN_VECTOR usnvecTo;
    UPTODATE_VECTOR_V2_EXT pUpToDateVecSrc
        with IDL{PointerType = PointerKind.UniquePtr, IndirectionLevel = 1};
    SCHEMA_PREFIX_TABLE PrefixTableSrc;
    ULONG ulExtendedRet;
    ULONG cNumObjects;
    ULONG cNumBytes;
    REPLENTINFLIST pObjects
        with IDL{PointerType = PointerKind.UniquePtr, IndirectionLevel = 1};
    BOOL fMoreData;
    ULONG cNumNcSizeObjects;
    ULONG cNumNcSizeValues;
    DWORD cNumValues with IDL{Range = new RangePattern {Low = 0, High = 1048576}};
    array<REPLVALINF_V1> rgValues with IDL{Size_is = [cNumValues], IndirectionLevel = 1};
    DWORD dwDRSError;
}

typedef UPTODATE_VECTOR_V2_EXT = __MIDL_drsuapi_0019 ;

type __MIDL_drsuapi_0019
{
    DWORD dwVersion;
    DWORD dwReserved1;
    DWORD cNumCursors
        with IDL{Range = new RangePattern {Low = 0, High = 1048576}};
    DWORD dwReserved2;
    array<UPTODATE_CURSOR_V2> rgCursors
        with IDL{Size_is = [cNumCursors], IndirectionLevel = 1};
}

typedef UPTODATE_CURSOR_V2 = __MIDL_drsuapi_0018 ;

type __MIDL_drsuapi_0018
{
    UUID uuidDsa;
    USN usnHighPropUpdate;
    DSTIME timeLastSyncSuccess;
}

typedef REPLVALINF_V1 = __MIDL_drsuapi_0022 ;

type __MIDL_drsuapi_0022
{
    DSNAME pObject with IDL{IndirectionLevel = 1};
    ATTRTYP attrTyp;
    ATTRVAL Aval;
    BOOL fIsPresent;
    VALUE_META_DATA_EXT_V1 MetaData;
}

typedef VALUE_META_DATA_EXT_V1 = __MIDL_drsuapi_0020 ;

type __MIDL_drsuapi_0020
{
    DSTIME timeCreated;
    PROPERTY_META_DATA_EXT MetaData;
}

typedef DRS_MSG_GETCHGREPLY_V7 = __MIDL_drsuapi_0078 ;

type __MIDL_drsuapi_0078
{
    DWORD dwCompressedVersion;
    DRS_COMP_ALG_TYPE CompressionAlg;
    DRS_COMPRESSED_BLOB CompressedAny;
}

typedef DRS_COMP_ALG_TYPE = __MIDL_drsuapi_0077 ;

pattern __MIDL_drsuapi_0077 = enum 
                              {
                                  DRS_COMP_ALG_NONE = 0,
                                  DRS_COMP_ALG_UNUSED = 1,
                                  DRS_COMP_ALG_MSZIP = 2,
                                  DRS_COMP_ALG_WIN2K3 = 3
                              };

typedef DRS_MSG_GETCHGREPLY_V9 = __MIDL_drsuapi_0068 ;

type __MIDL_drsuapi_0068
{
    UUID uuidDsaObjSrc;
    UUID uuidInvocIdSrc;
    DSNAME pNC
        with IDL{PointerType = PointerKind.UniquePtr, IndirectionLevel = 1};
    USN_VECTOR usnvecFrom;
    USN_VECTOR usnvecTo;
    UPTODATE_VECTOR_V2_EXT pUpToDateVecSrc
        with IDL{PointerType = PointerKind.UniquePtr, IndirectionLevel = 1};
    SCHEMA_PREFIX_TABLE PrefixTableSrc;
    ULONG ulExtendedRet;
    ULONG cNumObjects;
    ULONG cNumBytes;
    REPLENTINFLIST pObjects
        with IDL{PointerType = PointerKind.UniquePtr, IndirectionLevel = 1};
    BOOL fMoreData;
    ULONG cNumNcSizeObjects;
    ULONG cNumNcSizeValues;
    DWORD cNumValues
        with IDL{Range = new RangePattern {Low = 0, High = 1048576}};
    array<REPLVALINF_V3> rgValues
        with IDL{Size_is = [cNumValues], IndirectionLevel = 1};
    DWORD dwDRSError;
}

typedef REPLVALINF_V3 = __MIDL_drsuapi_0023 ;

type __MIDL_drsuapi_0023
{
    DSNAME pObject with IDL{IndirectionLevel = 1};
    ATTRTYP attrTyp;
    ATTRVAL Aval;
    BOOL fIsPresent;
    VALUE_META_DATA_EXT_V3 MetaData;
}

typedef VALUE_META_DATA_EXT_V3 = __MIDL_drsuapi_0021 ;

type __MIDL_drsuapi_0021
{
    DSTIME timeCreated;
    PROPERTY_META_DATA_EXT MetaData;
    DWORD unused1;
    DWORD unused2;
    DWORD unused3;
    DSTIME timeExpired;
}

typedef DRS_MSG_UPDREFS = __MIDL_drsuapi_0085 ;

type __MIDL_drsuapi_0085[DWORD tag]
{
    optional [|tag in {1}|] DRS_MSG_UPDREFS_V1 V1
        with IDL{Case = [1]};
    optional [|tag in {2}|] DRS_MSG_UPDREFS_V2 V2
        with IDL{Case = [2]};
}
with IDL
         {Switch_Type = TypeOf<DWORD>(), UnionKind = UnionKind.NonEncapsulated};

typedef DRS_MSG_UPDREFS_V1 = __MIDL_drsuapi_0083 ;

type __MIDL_drsuapi_0083
{
    DSNAME pNC with IDL
                        {PointerType = PointerKind.RefPtr, IndirectionLevel = 1};
    string pszDsaDest
        with IDL{PointerType = PointerKind.RefPtr,
                                  BaseStringType = TypeOf<char>(),
                                  String = true,
                                  IndirectionLevel = 1};
    UUID uuidDsaObjDest;
    ULONG ulOptions;
}

typedef DRS_MSG_UPDREFS_V2 = __MIDL_drsuapi_0084 ;

type __MIDL_drsuapi_0084
{
    DSNAME pNC with IDL{PointerType = PointerKind.RefPtr, IndirectionLevel = 1};
    string pszDsaDest
        with IDL{PointerType = PointerKind.RefPtr,
                                  BaseStringType = TypeOf<char>(),
                                  String = true,
                                  IndirectionLevel = 1};
    UUID uuidDsaObjDest;
    ULONG ulOptions;
    UUID correlationID;
    VAR_SIZE_BUFFER_WITH_VERSION pReservedBuffer
        with IDL{PointerType = PointerKind.UniquePtr, IndirectionLevel = 1};
}

typedef DRS_MSG_REPADD = __MIDL_drsuapi_0089 ;

type __MIDL_drsuapi_0089[DWORD tag]
{
    optional [|tag in {1}|] DRS_MSG_REPADD_V1 V1 with IDL{Case = [1]};
    optional [|tag in {2}|] DRS_MSG_REPADD_V2 V2 with IDL{Case = [2]};
    optional [|tag in {3}|] DRS_MSG_REPADD_V3 V3 with IDL{Case = [3]};
}
with IDL{Switch_Type = TypeOf<DWORD>(), UnionKind = UnionKind.NonEncapsulated};

typedef DRS_MSG_REPADD_V1 = __MIDL_drsuapi_0086 ;

type __MIDL_drsuapi_0086
{
    DSNAME pNC with IDL{PointerType = PointerKind.RefPtr, IndirectionLevel = 1};
    string pszDsaSrc
        with IDL{PointerType = PointerKind.RefPtr,
                                  BaseStringType = TypeOf<char>(),
                                  String = true,
                                  IndirectionLevel = 1};
    REPLTIMES rtSchedule;
    ULONG ulOptions;
}

typedef REPLTIMES = __MIDL_drsuapi_0024 ;

type __MIDL_drsuapi_0024
{
    array<UCHAR> rgTimes with IDL{Dimensions = [84]};
}

typedef DRS_MSG_REPADD_V2 = __MIDL_drsuapi_0087 ;

type __MIDL_drsuapi_0087
{
    DSNAME pNC with IDL{PointerType = PointerKind.RefPtr, IndirectionLevel = 1};
    DSNAME pSourceDsaDN
        with IDL{PointerType = PointerKind.UniquePtr, IndirectionLevel = 1};
    DSNAME pTransportDN
        with IDL{PointerType = PointerKind.UniquePtr, IndirectionLevel = 1};
    string pszSourceDsaAddress
        with IDL{PointerType = PointerKind.RefPtr,
                                  BaseStringType = TypeOf<char>(),
                                  String = true,
                                  IndirectionLevel = 1};
    REPLTIMES rtSchedule;
    ULONG ulOptions;
}

typedef DRS_MSG_REPADD_V3 = __MIDL_drsuapi_0088 ;

type __MIDL_drsuapi_0088
{
    DSNAME pNC with IDL{PointerType = PointerKind.RefPtr, IndirectionLevel = 1};
    DSNAME pSourceDsaDN
        with IDL{PointerType = PointerKind.UniquePtr, IndirectionLevel = 1};
    DSNAME pTransportDN
        with IDL{PointerType = PointerKind.UniquePtr, IndirectionLevel = 1};
    string pszSourceDsaAddress
        with IDL{PointerType = PointerKind.RefPtr,
                                  BaseStringType = TypeOf<char>(),
                                  String = true,
                                  IndirectionLevel = 1};
    REPLTIMES rtSchedule;
    ULONG ulOptions;
    UUID correlationID;
    VAR_SIZE_BUFFER_WITH_VERSION pReservedBuffer
        with IDL{PointerType = PointerKind.UniquePtr, IndirectionLevel = 1};
}

typedef DRS_MSG_REPDEL = __MIDL_drsuapi_0091 ;

type __MIDL_drsuapi_0091[DWORD tag]
{
    optional [|tag in {1}|] DRS_MSG_REPDEL_V1 V1
        with IDL{Case = [1]};
}
with IDL
         {Switch_Type = TypeOf<DWORD>(), UnionKind = UnionKind.NonEncapsulated};

typedef DRS_MSG_REPDEL_V1 = __MIDL_drsuapi_0090 ;

type __MIDL_drsuapi_0090
{
    DSNAME pNC with IDL
                        {PointerType = PointerKind.RefPtr, IndirectionLevel = 1};
    string pszDsaSrc with IDL{BaseStringType = TypeOf<char>(),
                                               String = true,
                                               IndirectionLevel = 1};
    ULONG ulOptions;
}

typedef DRS_MSG_REPMOD = __MIDL_drsuapi_0093 ;

type __MIDL_drsuapi_0093[DWORD tag]
{
    optional [|tag in {1}|] DRS_MSG_REPMOD_V1 V1 with IDL{Case = [1]};
}
with IDL{Switch_Type = TypeOf<DWORD>(), UnionKind = UnionKind.NonEncapsulated};

typedef DRS_MSG_REPMOD_V1 = __MIDL_drsuapi_0092 ;

type __MIDL_drsuapi_0092
{
    DSNAME pNC with IDL{PointerType = PointerKind.RefPtr, IndirectionLevel = 1};
    UUID uuidSourceDRA;
    string pszSourceDRA
        with IDL{PointerType = PointerKind.UniquePtr,
                                  BaseStringType = TypeOf<char>(),
                                  String = true,
                                  IndirectionLevel = 1};
    REPLTIMES rtSchedule;
    ULONG ulReplicaFlags;
    ULONG ulModifyFields;
    ULONG ulOptions;
}

typedef DRS_MSG_VERIFYREQ = __MIDL_drsuapi_0095 ;

type __MIDL_drsuapi_0095[DWORD tag]
{
    optional [|tag in {1}|] DRS_MSG_VERIFYREQ_V1 V1 with IDL{Case = [1]};
}
with IDL{Switch_Type = TypeOf<DWORD>(), UnionKind = UnionKind.NonEncapsulated};

typedef DRS_MSG_VERIFYREQ_V1 = __MIDL_drsuapi_0094 ;

type __MIDL_drsuapi_0094
{
    DWORD dwFlags;
    DWORD cNames with IDL{Range = new RangePattern {Low = 1, High = 10000}};
    DSNAME rpNames with IDL{Size_is = [cNames, null], IndirectionLevel = 2};
    ATTRBLOCK RequiredAttrs;
    SCHEMA_PREFIX_TABLE PrefixTable;
}

typedef DRS_MSG_VERIFYREPLY = __MIDL_drsuapi_0097 ;

type __MIDL_drsuapi_0097[DWORD tag]
{
    optional [|tag in {1}|] DRS_MSG_VERIFYREPLY_V1 V1 with IDL{Case = [1]};
}
with IDL{Switch_Type = TypeOf<DWORD>(), UnionKind = UnionKind.NonEncapsulated};

typedef DRS_MSG_VERIFYREPLY_V1 = __MIDL_drsuapi_0096 ;

type __MIDL_drsuapi_0096
{
    DWORD @error;
    DWORD cNames with IDL{Range = new RangePattern {Low = 0, High = 10000}};
    ENTINF rpEntInf with IDL{Size_is = [cNames], IndirectionLevel = 1};
    SCHEMA_PREFIX_TABLE PrefixTable;
}

typedef DRS_MSG_REVMEMB_REQ = __MIDL_drsuapi_0100 ;

type __MIDL_drsuapi_0100[DWORD tag]
{
    optional [|tag in {1}|] DRS_MSG_REVMEMB_REQ_V1 V1 with IDL{Case = [1]};
}
with IDL{Switch_Type = TypeOf<DWORD>(), UnionKind = UnionKind.NonEncapsulated};

typedef DRS_MSG_REVMEMB_REQ_V1 = __MIDL_drsuapi_0099 ;

type __MIDL_drsuapi_0099
{
    ULONG cDsNames with IDL{Range = new RangePattern {Low = 1, High = 10000}};
    DSNAME ppDsNames with IDL{Size_is = [cDsNames, null], IndirectionLevel = 2};
    DWORD dwFlags;
    REVERSE_MEMBERSHIP_OPERATION_TYPE OperationType
        with IDL{Range = new RangePattern {Low = 1, High = 7}};
    DSNAME pLimitingDomain with IDL{IndirectionLevel = 1};
}

typedef REVERSE_MEMBERSHIP_OPERATION_TYPE = __MIDL_drsuapi_0098 ;

pattern __MIDL_drsuapi_0098 = enum 
                              {
                                  RevMembGetGroupsForUser = 1,
                                  RevMembGetAliasMembership = 2,
                                  RevMembGetAccountGroups = 3,
                                  RevMembGetResourceGroups = 4,
                                  RevMembGetUniversalGroups = 5,
                                  GroupMembersTransitive = 6,
                                  RevMembGlobalGroupsNonTransitive = 7
                              };

typedef DRS_MSG_REVMEMB_REPLY = __MIDL_drsuapi_0102 ;

type __MIDL_drsuapi_0102[DWORD tag]
{
    optional [|tag in {1}|] DRS_MSG_REVMEMB_REPLY_V1 V1 with IDL{Case = [1]};
}
with IDL{Switch_Type = TypeOf<DWORD>(), UnionKind = UnionKind.NonEncapsulated};

typedef DRS_MSG_REVMEMB_REPLY_V1 = __MIDL_drsuapi_0101 ;

type __MIDL_drsuapi_0101
{
    ULONG errCode;
    ULONG cDsNames with IDL{Range = new RangePattern {Low = 0, High = 10000}};
    ULONG cSidHistory with IDL{Range = new RangePattern {Low = 0, High = 10000}};
    DSNAME ppDsNames with IDL{Size_is = [cDsNames, null], IndirectionLevel = 2};
    DWORD pAttributes with IDL{Size_is = [cDsNames], IndirectionLevel = 1};
    NT4SID ppSidHistory
        with IDL{Size_is = [cSidHistory, null], IndirectionLevel = 2};
}

typedef DRS_MSG_MOVEREQ = __MIDL_drsuapi_0107 ;

type __MIDL_drsuapi_0107[DWORD tag]
{
    optional [|tag in {1}|] DRS_MSG_MOVEREQ_V1 V1 with IDL{Case = [1]};
    optional [|tag in {2}|] DRS_MSG_MOVEREQ_V2 V2 with IDL{Case = [2]};
}
with IDL{Switch_Type = TypeOf<DWORD>(), UnionKind = UnionKind.NonEncapsulated};

typedef DRS_MSG_MOVEREQ_V1 = __MIDL_drsuapi_0103 ;

type __MIDL_drsuapi_0103
{
    char pSourceDSA with IDL{IndirectionLevel = 1};
    ENTINF pObject with IDL{IndirectionLevel = 1};
    UUID pParentUUID with IDL{IndirectionLevel = 1};
    SCHEMA_PREFIX_TABLE PrefixTable;
    ULONG ulFlags;
}

typedef DRS_MSG_MOVEREQ_V2 = __MIDL_drsuapi_0106 ;

type __MIDL_drsuapi_0106
{
    DSNAME pSrcDSA with IDL{IndirectionLevel = 1};
    ENTINF pSrcObject with IDL{IndirectionLevel = 1};
    DSNAME pDstName with IDL{IndirectionLevel = 1};
    DSNAME pExpectedTargetNC with IDL{IndirectionLevel = 1};
    DRS_SecBufferDesc pClientCreds with IDL{IndirectionLevel = 1};
    SCHEMA_PREFIX_TABLE PrefixTable;
    ULONG ulFlags;
}

typedef DRS_SecBufferDesc = __MIDL_drsuapi_0105 ;

type __MIDL_drsuapi_0105
{
    IDLUlong ulVersion;
    IDLUlong cBuffers with IDL{Range = new RangePattern {Low = 0, High = 10000}};
    DRS_SecBuffer Buffers with IDL{Size_is = [cBuffers], IndirectionLevel = 1};
}

typedef DRS_SecBuffer = __MIDL_drsuapi_0104 ;

type __MIDL_drsuapi_0104
{
    IDLUlong cbBuffer with IDL{Range = new RangePattern {Low = 0, High = 10000}};
    IDLUlong BufferType;
    array<BYTE> pvBuffer with IDL{Size_is = [cbBuffer], IndirectionLevel = 1};
}

typedef DRS_MSG_MOVEREPLY = __MIDL_drsuapi_0110 ;

type __MIDL_drsuapi_0110[DWORD tag]
{
    optional [|tag in {1}|] DRS_MSG_MOVEREPLY_V1 V1 with IDL{Case = [1]};
    optional [|tag in {2}|] DRS_MSG_MOVEREPLY_V2 V2 with IDL{Case = [2]};
}
with IDL{Switch_Type = TypeOf<DWORD>(), UnionKind = UnionKind.NonEncapsulated};

typedef DRS_MSG_MOVEREPLY_V1 = __MIDL_drsuapi_0108 ;

type __MIDL_drsuapi_0108
{
    ENTINF ppResult with IDL{IndirectionLevel = 2};
    SCHEMA_PREFIX_TABLE PrefixTable;
    ULONG pError with IDL{IndirectionLevel = 1};
}

typedef DRS_MSG_MOVEREPLY_V2 = __MIDL_drsuapi_0109 ;

type __MIDL_drsuapi_0109
{
    ULONG win32Error;
    DSNAME pAddedName
        with IDL{PointerType = PointerKind.UniquePtr, IndirectionLevel = 1};
}

typedef DRS_MSG_NT4_CHGLOG_REQ = __MIDL_drsuapi_0116 ;

type __MIDL_drsuapi_0116[DWORD tag]
{
    optional [|tag in {1}|] DRS_MSG_NT4_CHGLOG_REQ_V1 V1 with IDL{Case = [1]};
}
with IDL{Switch_Type = TypeOf<DWORD>(), UnionKind = UnionKind.NonEncapsulated};

typedef DRS_MSG_NT4_CHGLOG_REQ_V1 = __MIDL_drsuapi_0115 ;

type __MIDL_drsuapi_0115
{
    DWORD dwFlags;
    DWORD PreferredMaximumLength;
    DWORD cbRestart
        with IDL{Range = new RangePattern {Low = 0, High = 10485760}};
    array<BYTE> pRestart with IDL{Size_is = [cbRestart], IndirectionLevel = 1};
}

typedef DRS_MSG_NT4_CHGLOG_REPLY = __MIDL_drsuapi_0119 ;

type __MIDL_drsuapi_0119[DWORD tag]
{
    optional [|tag in {1}|] DRS_MSG_NT4_CHGLOG_REPLY_V1 V1 with IDL{Case = [1]};
}
with IDL{Switch_Type = TypeOf<DWORD>(), UnionKind = UnionKind.NonEncapsulated};

typedef DRS_MSG_NT4_CHGLOG_REPLY_V1 = __MIDL_drsuapi_0118 ;

type __MIDL_drsuapi_0118
{
    DWORD cbRestart
        with IDL{Range = new RangePattern {Low = 0, High = 10485760}};
    DWORD cbLog with IDL{Range = new RangePattern {Low = 0, High = 10485760}};
    NT4_REPLICATION_STATE ReplicationState;
    DWORD ActualNtStatus;
    array<BYTE> pRestart with IDL{Size_is = [cbRestart], IndirectionLevel = 1};
    array<BYTE> pLog with IDL{Size_is = [cbLog], IndirectionLevel = 1};
}

typedef NT4_REPLICATION_STATE = __MIDL_drsuapi_0117 ;

type __MIDL_drsuapi_0117
{
    LARGE_INTEGER SamSerialNumber;
    LARGE_INTEGER SamCreationTime;
    LARGE_INTEGER BuiltinSerialNumber;
    LARGE_INTEGER BuiltinCreationTime;
    LARGE_INTEGER LsaSerialNumber;
    LARGE_INTEGER LsaCreationTime;
}

typedef DRS_MSG_CRACKREQ = __MIDL_drsuapi_0112 ;

type __MIDL_drsuapi_0112[DWORD tag]
{
    optional [|tag in {1}|] DRS_MSG_CRACKREQ_V1 V1 with IDL{Case = [1]};
}
with IDL{Switch_Type = TypeOf<DWORD>(), UnionKind = UnionKind.NonEncapsulated};

typedef DRS_MSG_CRACKREQ_V1 = __MIDL_drsuapi_0111 ;

type __MIDL_drsuapi_0111
{
    ULONG CodePage;
    ULONG LocaleId;
    DWORD dwFlags;
    DWORD formatOffered;
    DWORD formatDesired;
    DWORD cNames with IDL{Range = new RangePattern {Low = 1, High = 10000}};
    string rpNames with IDL{Size_is = [cNames, null],
                                             BaseStringType = TypeOf<WCHAR>(),
                                             String = true,
                                             IndirectionLevel = 2};
}

typedef DRS_MSG_CRACKREPLY = __MIDL_drsuapi_0114 ;

type __MIDL_drsuapi_0114[DWORD tag]
{
    optional [|tag in {1}|] DRS_MSG_CRACKREPLY_V1 V1 with IDL{Case = [1]};
}
with IDL{Switch_Type = TypeOf<DWORD>(), UnionKind = UnionKind.NonEncapsulated};

typedef DRS_MSG_CRACKREPLY_V1 = __MIDL_drsuapi_0113 ;

type __MIDL_drsuapi_0113
{
    DS_NAME_RESULTW pResult with IDL{IndirectionLevel = 1};
}

typedef DS_NAME_RESULTW = __MIDL_drsuapi_0026 ;

type __MIDL_drsuapi_0026
{
    DWORD cItems;
    array<__MIDL_drsuapi_0025> rItems
        with IDL{Size_is = [cItems], IndirectionLevel = 1};
}

type __MIDL_drsuapi_0025
{
    DWORD status;
    string pDomain with IDL{PointerType = PointerKind.UniquePtr,
                                  BaseStringType = TypeOf<WCHAR>(),
                                  String = true,
                                  IndirectionLevel = 1};
    string pName with IDL{PointerType = PointerKind.UniquePtr,
                                           BaseStringType = TypeOf<WCHAR>(),
                                           String = true,
                                           IndirectionLevel = 1};
}

typedef DRS_MSG_SPNREQ = __MIDL_drsuapi_0121 ;

type __MIDL_drsuapi_0121[DWORD tag]
{
    optional [|tag in {1}|] DRS_MSG_SPNREQ_V1 V1 with IDL{Case = [1]};
}
with IDL{Switch_Type = TypeOf<DWORD>(), UnionKind = UnionKind.NonEncapsulated};

typedef DRS_MSG_SPNREQ_V1 = __MIDL_drsuapi_0120 ;

type __MIDL_drsuapi_0120
{
    DWORD @operation;
    DWORD @flags;
    string pwszAccount
        with IDL{BaseStringType = TypeOf<WCHAR>(),
                                  String = true,
                                  IndirectionLevel = 1};
    DWORD cSPN with IDL{Range = new RangePattern {Low = 0, High = 10000}};
    string rpwszSPN with IDL{Size_is = [cSPN, null],
                                              BaseStringType = TypeOf<WCHAR>(),
                                              String = true,
                                              IndirectionLevel = 2};
}

typedef DRS_MSG_SPNREPLY = __MIDL_drsuapi_0123 ;

type __MIDL_drsuapi_0123[DWORD tag]
{
    optional [|tag in {1}|] DRS_MSG_SPNREPLY_V1 V1 with IDL{Case = [1]};
}
with IDL{Switch_Type = TypeOf<DWORD>(), UnionKind = UnionKind.NonEncapsulated};

typedef DRS_MSG_SPNREPLY_V1 = __MIDL_drsuapi_0122 ;

type __MIDL_drsuapi_0122
{
    DWORD retVal;
}

typedef DRS_MSG_RMSVRREQ = __MIDL_drsuapi_0125 ;

type __MIDL_drsuapi_0125[DWORD tag]
{
    optional [|tag in {1}|] DRS_MSG_RMSVRREQ_V1 V1 with IDL{Case = [1]};
}
with IDL{Switch_Type = TypeOf<DWORD>(), UnionKind = UnionKind.NonEncapsulated};

typedef DRS_MSG_RMSVRREQ_V1 = __MIDL_drsuapi_0124 ;

type __MIDL_drsuapi_0124
{
    string ServerDN
        with IDL{BaseStringType = TypeOf<wchar_t>(),
                                  String = true,
                                  IndirectionLevel = 1};
    string DomainDN
        with IDL{BaseStringType = TypeOf<wchar_t>(),
                                  String = true,
                                  IndirectionLevel = 1};
    BOOL fCommit;
}

typedef DRS_MSG_RMSVRREPLY = __MIDL_drsuapi_0127 ;

type __MIDL_drsuapi_0127[DWORD tag]
{
    optional [|tag in {1}|] DRS_MSG_RMSVRREPLY_V1 V1 with IDL{Case = [1]};
}
with IDL{Switch_Type = TypeOf<DWORD>(), UnionKind = UnionKind.NonEncapsulated};

typedef DRS_MSG_RMSVRREPLY_V1 = __MIDL_drsuapi_0126 ;

type __MIDL_drsuapi_0126
{
    BOOL fLastDcInDomain;
}

typedef DRS_MSG_RMDMNREQ = __MIDL_drsuapi_0129 ;

type __MIDL_drsuapi_0129[DWORD tag]
{
    optional [|tag in {1}|] DRS_MSG_RMDMNREQ_V1 V1 with IDL{Case = [1]};
}
with IDL{Switch_Type = TypeOf<DWORD>(), UnionKind = UnionKind.NonEncapsulated};

typedef DRS_MSG_RMDMNREQ_V1 = __MIDL_drsuapi_0128 ;

type __MIDL_drsuapi_0128
{
    string DomainDN
        with IDL{BaseStringType = TypeOf<wchar_t>(),
                                  String = true,
                                  IndirectionLevel = 1};
}

typedef DRS_MSG_RMDMNREPLY = __MIDL_drsuapi_0131 ;

type __MIDL_drsuapi_0131[DWORD tag]
{
    optional [|tag in {1}|] DRS_MSG_RMDMNREPLY_V1 V1 with IDL{Case = [1]};
}
with IDL{Switch_Type = TypeOf<DWORD>(), UnionKind = UnionKind.NonEncapsulated};

typedef DRS_MSG_RMDMNREPLY_V1 = __MIDL_drsuapi_0130 ;

type __MIDL_drsuapi_0130
{
    DWORD Reserved;
}

typedef DRS_MSG_DCINFOREQ = __MIDL_drsuapi_0133 ;

type __MIDL_drsuapi_0133[DWORD tag]
{
    optional [|tag in {1}|] DRS_MSG_DCINFOREQ_V1 V1 with IDL{Case = [1]};
}
with IDL{Switch_Type = TypeOf<DWORD>(), UnionKind = UnionKind.NonEncapsulated};

typedef DRS_MSG_DCINFOREQ_V1 = __MIDL_drsuapi_0132 ;

type __MIDL_drsuapi_0132
{
    string Domain with IDL{BaseStringType = TypeOf<WCHAR>(),
                                            String = true,
                                            IndirectionLevel = 1};
    DWORD InfoLevel;
}

typedef DRS_MSG_DCINFOREPLY = __MIDL_drsuapi_0138 ;

type __MIDL_drsuapi_0138[DWORD tag]
{
    optional [|tag in {1}|] DRS_MSG_DCINFOREPLY_V1 V1 with IDL{Case = [1]};
    optional [|tag in {2}|] DRS_MSG_DCINFOREPLY_V2 V2 with IDL{Case = [2]};
    optional [|tag in {3}|] DRS_MSG_DCINFOREPLY_V3 V3 with IDL{Case = [3]};
    optional [|tag in {0xFFFFFFFF}|] DRS_MSG_DCINFOREPLY_VFFFFFFFF VFFFFFFFF
        with IDL{Case = [0xFFFFFFFF]};
}
with IDL{Switch_Type = TypeOf<DWORD>(), UnionKind = UnionKind.NonEncapsulated};

typedef DRS_MSG_DCINFOREPLY_V1 = __MIDL_drsuapi_0134 ;

type __MIDL_drsuapi_0134
{
    DWORD cItems with IDL{Range = new RangePattern {Low = 0, High = 10000}};
    array<DS_DOMAIN_CONTROLLER_INFO_1W> rItems
        with IDL{Size_is = [cItems], IndirectionLevel = 1};
}

typedef DS_DOMAIN_CONTROLLER_INFO_1W = __MIDL_drsuapi_0027 ;

type __MIDL_drsuapi_0027
{
    string NetbiosName with IDL{PointerType = PointerKind.UniquePtr,
                                  BaseStringType = TypeOf<WCHAR>(),
                                  String = true,
                                  IndirectionLevel = 1};
    string DnsHostName with IDL{PointerType = PointerKind.UniquePtr,
                                  BaseStringType = TypeOf<WCHAR>(),
                                  String = true,
                                  IndirectionLevel = 1};
    string SiteName with IDL{PointerType = PointerKind.UniquePtr,
                                  BaseStringType = TypeOf<WCHAR>(),
                                  String = true,
                                  IndirectionLevel = 1};
    string ComputerObjectName with IDL{PointerType = PointerKind.UniquePtr,
                                  BaseStringType = TypeOf<WCHAR>(),
                                  String = true,
                                  IndirectionLevel = 1};
    string ServerObjectName with IDL{PointerType = PointerKind.UniquePtr,
                                  BaseStringType = TypeOf<WCHAR>(),
                                  String = true,
                                  IndirectionLevel = 1};
    BOOL fIsPdc;
    BOOL fDsEnabled;
}

typedef DRS_MSG_DCINFOREPLY_V2 = __MIDL_drsuapi_0135 ;

type __MIDL_drsuapi_0135
{
    DWORD cItems with IDL{Range = new RangePattern {Low = 0, High = 10000}};
    array<DS_DOMAIN_CONTROLLER_INFO_2W> rItems
        with IDL{Size_is = [cItems], IndirectionLevel = 1};
}

typedef DS_DOMAIN_CONTROLLER_INFO_2W = __MIDL_drsuapi_0028 ;

type __MIDL_drsuapi_0028
{
    string NetbiosName with IDL{PointerType = PointerKind.UniquePtr,
                                  BaseStringType = TypeOf<WCHAR>(),
                                  String = true,
                                  IndirectionLevel = 1};
    string DnsHostName with IDL{PointerType = PointerKind.UniquePtr,
                                  BaseStringType = TypeOf<WCHAR>(),
                                  String = true,
                                  IndirectionLevel = 1};
    string SiteName with IDL{PointerType = PointerKind.UniquePtr,
                                  BaseStringType = TypeOf<WCHAR>(),
                                  String = true,
                                  IndirectionLevel = 1};
    string SiteObjectName with IDL{PointerType = PointerKind.UniquePtr,
                                  BaseStringType = TypeOf<WCHAR>(),
                                  String = true,
                                  IndirectionLevel = 1};
    string ComputerObjectName with IDL{PointerType = PointerKind.UniquePtr,
                                  BaseStringType = TypeOf<WCHAR>(),
                                  String = true,
                                  IndirectionLevel = 1};
    string ServerObjectName with IDL{PointerType = PointerKind.UniquePtr,
                                  BaseStringType = TypeOf<WCHAR>(),
                                  String = true,
                                  IndirectionLevel = 1};
    string NtdsDsaObjectName with IDL{PointerType = PointerKind.UniquePtr,
                                  BaseStringType = TypeOf<WCHAR>(),
                                  String = true,
                                  IndirectionLevel = 1};
    BOOL fIsPdc;
    BOOL fDsEnabled;
    BOOL fIsGc;
    UUID SiteObjectGuid;
    UUID ComputerObjectGuid;
    UUID ServerObjectGuid;
    UUID NtdsDsaObjectGuid;
}

typedef DRS_MSG_DCINFOREPLY_V3 = __MIDL_drsuapi_0136 ;

type __MIDL_drsuapi_0136
{
    DWORD cItems with IDL{Range = new RangePattern {Low = 0, High = 10000}};
    array<DS_DOMAIN_CONTROLLER_INFO_3W> rItems
        with IDL{Size_is = [cItems], IndirectionLevel = 1};
}

typedef DS_DOMAIN_CONTROLLER_INFO_3W = __MIDL_drsuapi_0029 ;

type __MIDL_drsuapi_0029
{
    string NetbiosName with IDL{PointerType = PointerKind.UniquePtr,
                                  BaseStringType = TypeOf<WCHAR>(),
                                  String = true,
                                  IndirectionLevel = 1};
    string DnsHostName with IDL{PointerType = PointerKind.UniquePtr,
                                  BaseStringType = TypeOf<WCHAR>(),
                                  String = true,
                                  IndirectionLevel = 1};
    string SiteName with IDL{PointerType = PointerKind.UniquePtr,
                                  BaseStringType = TypeOf<WCHAR>(),
                                  String = true,
                                  IndirectionLevel = 1};
    string SiteObjectName with IDL{PointerType = PointerKind.UniquePtr,
                                  BaseStringType = TypeOf<WCHAR>(),
                                  String = true,
                                  IndirectionLevel = 1};
    string ComputerObjectName with IDL{PointerType = PointerKind.UniquePtr,
                                  BaseStringType = TypeOf<WCHAR>(),
                                  String = true,
                                  IndirectionLevel = 1};
    string ServerObjectName with IDL{PointerType = PointerKind.UniquePtr,
                                  BaseStringType = TypeOf<WCHAR>(),
                                  String = true,
                                  IndirectionLevel = 1};
    string NtdsDsaObjectName with IDL{PointerType = PointerKind.UniquePtr,
                                  BaseStringType = TypeOf<WCHAR>(),
                                  String = true,
                                  IndirectionLevel = 1};
    BOOL fIsPdc;
    BOOL fDsEnabled;
    BOOL fIsGc;
    BOOL fIsRodc;
    UUID SiteObjectGuid;
    UUID ComputerObjectGuid;
    UUID ServerObjectGuid;
    UUID NtdsDsaObjectGuid;
}

typedef DRS_MSG_DCINFOREPLY_VFFFFFFFF = __MIDL_drsuapi_0137 ;

type __MIDL_drsuapi_0137
{
    DWORD cItems with IDL{Range = new RangePattern {Low = 0, High = 10000}};
    array<DS_DOMAIN_CONTROLLER_INFO_FFFFFFFFW> rItems
        with IDL{Size_is = [cItems], IndirectionLevel = 1};
}

typedef DS_DOMAIN_CONTROLLER_INFO_FFFFFFFFW = __MIDL_drsuapi_0030 ;

type __MIDL_drsuapi_0030
{
    DWORD IPAddress;
    DWORD NotificationCount;
    DWORD secTimeConnected;
    DWORD Flags;
    DWORD TotalRequests;
    DWORD Reserved1;
    string UserName with IDL{PointerType = PointerKind.UniquePtr,
                                  BaseStringType = TypeOf<WCHAR>(),
                                  String = true,
                                  IndirectionLevel = 1};
}

typedef DRS_MSG_ADDENTRYREQ = __MIDL_drsuapi_0142 ;

type __MIDL_drsuapi_0142[DWORD tag]
{
    optional [|tag in {1}|] DRS_MSG_ADDENTRYREQ_V1 V1 with IDL{Case = [1]};
    optional [|tag in {2}|] DRS_MSG_ADDENTRYREQ_V2 V2 with IDL{Case = [2]};
    optional [|tag in {3}|] DRS_MSG_ADDENTRYREQ_V3 V3 with IDL{Case = [3]};
}
with IDL{Switch_Type = TypeOf<DWORD>(), UnionKind = UnionKind.NonEncapsulated};

typedef DRS_MSG_ADDENTRYREQ_V1 = __MIDL_drsuapi_0139 ;

type __MIDL_drsuapi_0139
{
    DSNAME pObject
        with IDL{PointerType = PointerKind.RefPtr, IndirectionLevel = 1};
    ATTRBLOCK AttrBlock;
}

typedef DRS_MSG_ADDENTRYREQ_V2 = __MIDL_drsuapi_0140 ;

type __MIDL_drsuapi_0140
{
    ENTINFLIST EntInfList;
}

type ENTINFLIST
{
    ENTINFLIST pNextEntInf with IDL{IndirectionLevel = 1};
    ENTINF Entinf;
}

typedef DRS_MSG_ADDENTRYREQ_V3 = __MIDL_drsuapi_0141 ;

type __MIDL_drsuapi_0141
{
    ENTINFLIST EntInfList;
    DRS_SecBufferDesc pClientCreds
        with IDL{IndirectionLevel = 1};
}

typedef DRS_MSG_ADDENTRYREPLY = __MIDL_drsuapi_0149 ;

type __MIDL_drsuapi_0149[DWORD tag]
{
    optional [|tag in {1}|] DRS_MSG_ADDENTRYREPLY_V1 V1 with IDL{Case = [1]};
    optional [|tag in {2}|] DRS_MSG_ADDENTRYREPLY_V2 V2 with IDL{Case = [2]};
    optional [|tag in {3}|] DRS_MSG_ADDENTRYREPLY_V3 V3 with IDL{Case = [3]};
}
with IDL{Switch_Type = TypeOf<DWORD>(), UnionKind = UnionKind.NonEncapsulated};

typedef DRS_MSG_ADDENTRYREPLY_V1 = __MIDL_drsuapi_0143 ;

type __MIDL_drsuapi_0143
{
    UUID Guid;
    NT4SID Sid;
    DWORD errCode;
    DWORD dsid;
    DWORD extendedErr;
    DWORD extendedData;
    USHORT problem;
}

typedef DRS_MSG_ADDENTRYREPLY_V2 = __MIDL_drsuapi_0145 ;

type __MIDL_drsuapi_0145
{
    DSNAME pErrorObject
        with IDL{PointerType = PointerKind.UniquePtr, IndirectionLevel = 1};
    DWORD errCode;
    DWORD dsid;
    DWORD extendedErr;
    DWORD extendedData;
    USHORT problem;
    ULONG cObjectsAdded
        with IDL{Range = new RangePattern {Low = 0, High = 10000}};
    array<ADDENTRY_REPLY_INFO> infoList
        with IDL{Size_is = [cObjectsAdded], IndirectionLevel = 1};
}

typedef ADDENTRY_REPLY_INFO = __MIDL_drsuapi_0144 ;

type __MIDL_drsuapi_0144
{
    UUID objGuid;
    NT4SID objSid;
}

typedef DRS_MSG_ADDENTRYREPLY_V3 = __MIDL_drsuapi_0148 ;

type __MIDL_drsuapi_0148
{
    DSNAME pdsErrObject with IDL{IndirectionLevel = 1};
    DWORD dwErrVer;
    DRS_ERROR_DATA[dwErrVer] pErrData
        with IDL{Switch_Is = dwErrVer, IndirectionLevel = 1};
    ULONG cObjectsAdded
        with IDL{Range = new RangePattern {Low = 0, High = 10000}};
    array<ADDENTRY_REPLY_INFO> infoList
        with IDL{Size_is = [cObjectsAdded], IndirectionLevel = 1};
}

typedef DRS_ERROR_DATA = __MIDL_drsuapi_0147 ;

type __MIDL_drsuapi_0147[DWORD tag]
{
    optional [|tag in {1}|] DRS_ERROR_DATA_V1 V1 with IDL{Case = [1]};
}
with IDL{Switch_Type = TypeOf<DWORD>(), UnionKind = UnionKind.NonEncapsulated};

typedef DRS_ERROR_DATA_V1 = __MIDL_drsuapi_0146 ;

type __MIDL_drsuapi_0146
{
    DWORD dwRepError;
    DWORD errCode;
    DIRERR_DRS_WIRE_V1[errCode] pErrInfo
        with IDL{Switch_Is = errCode, IndirectionLevel = 1};
}

typedef DIRERR_DRS_WIRE_V1 = __MIDL_drsuapi_0040 ;

type __MIDL_drsuapi_0040[DWORD tag]
{
    optional [|tag in {1}|] ATRERR_DRS_WIRE_V1 AtrErr with IDL{Case = [1]};
    optional [|tag in {2}|] NAMERR_DRS_WIRE_V1 NamErr with IDL{Case = [2]};
    optional [|tag in {3}|] REFERR_DRS_WIRE_V1 RefErr with IDL{Case = [3]};
    optional [|tag in {4}|] SECERR_DRS_WIRE_V1 SecErr with IDL{Case = [4]};
    optional [|tag in {5}|] SVCERR_DRS_WIRE_V1 SvcErr with IDL{Case = [5]};
    optional [|tag in {6}|] UPDERR_DRS_WIRE_V1 UpdErr with IDL{Case = [6]};
    optional [|tag in {7}|] SYSERR_DRS_WIRE_V1 SysErr with IDL{Case = [7]};
}
with IDL{Switch_Type = TypeOf<DWORD>(), UnionKind = UnionKind.NonEncapsulated};

typedef ATRERR_DRS_WIRE_V1 = __MIDL_drsuapi_0032 ;

type __MIDL_drsuapi_0032
{
    DSNAME pObject with IDL{IndirectionLevel = 1};
    ULONG count;
    PROBLEMLIST_DRS_WIRE_V1 FirstProblem;
}

type PROBLEMLIST_DRS_WIRE_V1
{
    PROBLEMLIST_DRS_WIRE_V1 pNextProblem with IDL{IndirectionLevel = 1};
    INTFORMPROB_DRS_WIRE_V1 intprob;
}

typedef INTFORMPROB_DRS_WIRE_V1 = __MIDL_drsuapi_0031 ;

type __MIDL_drsuapi_0031
{
    DWORD dsid;
    DWORD extendedErr;
    DWORD extendedData;
    USHORT problem;
    ATTRTYP @type;
    BOOL valReturned;
    ATTRVAL Val;
}

typedef NAMERR_DRS_WIRE_V1 = __MIDL_drsuapi_0033 ;

type __MIDL_drsuapi_0033
{
    DWORD dsid;
    DWORD extendedErr;
    DWORD extendedData;
    USHORT problem;
    DSNAME pMatched with IDL{IndirectionLevel = 1};
}

typedef REFERR_DRS_WIRE_V1 = __MIDL_drsuapi_0035 ;

type __MIDL_drsuapi_0035
{
    DWORD dsid;
    DWORD extendedErr;
    DWORD extendedData;
    CONTREF_DRS_WIRE_V1 Refer;
}

type CONTREF_DRS_WIRE_V1
{
    DSNAME pTarget with IDL{IndirectionLevel = 1};
    NAMERESOP_DRS_WIRE_V1 OpState;
    USHORT aliasRDN;
    USHORT RDNsInternal;
    USHORT refType;
    USHORT count;
    DSA_ADDRESS_LIST_DRS_WIRE_V1 pDAL with IDL{IndirectionLevel = 1};
    CONTREF_DRS_WIRE_V1 pNextContRef with IDL{IndirectionLevel = 1};
    BOOL bNewChoice;
    UCHAR choice;
}

typedef NAMERESOP_DRS_WIRE_V1 = __MIDL_drsuapi_0034 ;

type __MIDL_drsuapi_0034
{
    UCHAR nameRes;
    UCHAR unusedPad;
    USHORT nextRDN;
}

type DSA_ADDRESS_LIST_DRS_WIRE_V1
{
    DSA_ADDRESS_LIST_DRS_WIRE_V1 pNextAddress with IDL{IndirectionLevel = 1};
    RPC_UNICODE_STRING pAddress with IDL{IndirectionLevel = 1};
}

typedef SECERR_DRS_WIRE_V1 = __MIDL_drsuapi_0036 ;

type __MIDL_drsuapi_0036
{
    DWORD dsid;
    DWORD extendedErr;
    DWORD extendedData;
    USHORT problem;
}

typedef SVCERR_DRS_WIRE_V1 = __MIDL_drsuapi_0037 ;

type __MIDL_drsuapi_0037
{
    DWORD dsid;
    DWORD extendedErr;
    DWORD extendedData;
    USHORT problem;
}

typedef UPDERR_DRS_WIRE_V1 = __MIDL_drsuapi_0038 ;

type __MIDL_drsuapi_0038
{
    DWORD dsid;
    DWORD extendedErr;
    DWORD extendedData;
    USHORT problem;
}

typedef SYSERR_DRS_WIRE_V1 = __MIDL_drsuapi_0039 ;

type __MIDL_drsuapi_0039
{
    DWORD dsid;
    DWORD extendedErr;
    DWORD extendedData;
    USHORT problem;
}

typedef DRS_MSG_KCC_EXECUTE = __MIDL_drsuapi_0151 ;

type __MIDL_drsuapi_0151[DWORD tag]
{
    optional [|tag in {1}|] DRS_MSG_KCC_EXECUTE_V1 V1 with IDL{Case = [1]};
}
with IDL{Switch_Type = TypeOf<DWORD>(), UnionKind = UnionKind.NonEncapsulated};

typedef DRS_MSG_KCC_EXECUTE_V1 = __MIDL_drsuapi_0150 ;

type __MIDL_drsuapi_0150
{
    DWORD dwTaskID;
    DWORD dwFlags;
}

typedef DRS_MSG_GETREPLINFO_REQ = __MIDL_drsuapi_0158 ;

type __MIDL_drsuapi_0158[DWORD tag]
{
    optional [|tag in {1}|] DRS_MSG_GETREPLINFO_REQ_V1 V1 with IDL{Case = [1]};
    optional [|tag in {2}|] DRS_MSG_GETREPLINFO_REQ_V2 V2 with IDL{Case = [2]};
}
with IDL{Switch_Type = TypeOf<DWORD>(), UnionKind = UnionKind.NonEncapsulated};

typedef DRS_MSG_GETREPLINFO_REQ_V1 = __MIDL_drsuapi_0156 ;

type __MIDL_drsuapi_0156
{
    DWORD InfoType;
    string pszObjectDN
        with IDL{BaseStringType = TypeOf<wchar_t>(),
                                  String = true,
                                  IndirectionLevel = 1};
    UUID uuidSourceDsaObjGuid;
}

typedef DRS_MSG_GETREPLINFO_REQ_V2 = __MIDL_drsuapi_0157 ;

type __MIDL_drsuapi_0157
{
    DWORD InfoType;
    string pszObjectDN
        with IDL{BaseStringType = TypeOf<wchar_t>(),
                                  String = true,
                                  IndirectionLevel = 1};
    UUID uuidSourceDsaObjGuid;
    DWORD ulFlags;
    string pszAttributeName
        with IDL{BaseStringType = TypeOf<wchar_t>(),
                                  String = true,
                                  IndirectionLevel = 1};
    string pszValueDN
        with IDL{BaseStringType = TypeOf<wchar_t>(),
                                  String = true,
                                  IndirectionLevel = 1};
    DWORD dwEnumerationContext;
}

typedef DRS_MSG_GETREPLINFO_REPLY = __MIDL_drsuapi_0159 ;

type __MIDL_drsuapi_0159[DWORD tag]
{
    optional [|tag in {0}|] DS_REPL_NEIGHBORSW pNeighbors
        with IDL{Case = [0], IndirectionLevel = 1};
    optional [|tag in {1}|] DS_REPL_CURSORS pCursors
        with IDL{Case = [1], IndirectionLevel = 1};
    optional [|tag in {2}|] DS_REPL_OBJ_META_DATA pObjMetaData
        with IDL{Case = [2], IndirectionLevel = 1};
    optional [|tag in {3}|] DS_REPL_KCC_DSA_FAILURESW pConnectFailures
        with IDL{Case = [3], IndirectionLevel = 1};
    optional [|tag in {4}|] DS_REPL_KCC_DSA_FAILURESW pLinkFailures
        with IDL{Case = [4], IndirectionLevel = 1};
    optional [|tag in {5}|] DS_REPL_PENDING_OPSW pPendingOps
        with IDL{Case = [5], IndirectionLevel = 1};
    optional [|tag in {6}|] DS_REPL_ATTR_VALUE_META_DATA pAttrValueMetaData
        with IDL{Case = [6], IndirectionLevel = 1};
    optional [|tag in {7}|] DS_REPL_CURSORS_2 pCursors2
        with IDL{Case = [7], IndirectionLevel = 1};
    optional [|tag in {8}|] DS_REPL_CURSORS_3W pCursors3
        with IDL{Case = [8], IndirectionLevel = 1};
    optional [|tag in {9}|] DS_REPL_OBJ_META_DATA_2 pObjMetaData2
        with IDL{Case = [9], IndirectionLevel = 1};
    optional [|tag in {10}|] DS_REPL_ATTR_VALUE_META_DATA_2 pAttrValueMetaData2
        with IDL{Case = [10], IndirectionLevel = 1};
    optional [|tag in {0xFFFFFFFA}|] DS_REPL_SERVER_OUTGOING_CALLS
        pServerOutgoingCalls
        with IDL{Case = [0xFFFFFFFA], IndirectionLevel = 1};
    optional [|tag in {0xFFFFFFFB}|] UPTODATE_VECTOR_V1_EXT pUpToDateVec
        with IDL{Case = [0xFFFFFFFB], IndirectionLevel = 1};
    optional [|tag in {0xFFFFFFFC}|] DS_REPL_CLIENT_CONTEXTS pClientContexts
        with IDL{Case = [0xFFFFFFFC], IndirectionLevel = 1};
    optional [|tag in {0xFFFFFFFE}|] DS_REPL_NEIGHBORSW pRepsTo
        with IDL{Case = [0xFFFFFFFE], IndirectionLevel = 1};
}
with IDL{Switch_Type = TypeOf<DWORD>(), UnionKind = UnionKind.NonEncapsulated};

typedef DS_REPL_NEIGHBORSW = __MIDL_drsuapi_0042 ;

type __MIDL_drsuapi_0042
{
    DWORD cNumNeighbors;
    DWORD dwReserved;
    array<DS_REPL_NEIGHBORW> rgNeighbor
        with IDL{Size_is = [cNumNeighbors], IndirectionLevel = 1};
}

typedef DS_REPL_NEIGHBORW = __MIDL_drsuapi_0041 ;

type __MIDL_drsuapi_0041
{
    string pszNamingContext
        with IDL{BaseStringType = TypeOf<wchar_t>(),
                                  String = true,
                                  IndirectionLevel = 1};
    string pszSourceDsaDN
        with IDL{BaseStringType = TypeOf<wchar_t>(),
                                  String = true,
                                  IndirectionLevel = 1};
    string pszSourceDsaAddress
        with IDL{BaseStringType = TypeOf<wchar_t>(),
                                  String = true,
                                  IndirectionLevel = 1};
    string pszAsyncIntersiteTransportDN
        with IDL{BaseStringType = TypeOf<wchar_t>(),
                                  String = true,
                                  IndirectionLevel = 1};
    DWORD dwReplicaFlags;
    DWORD dwReserved;
    UUID uuidNamingContextObjGuid;
    UUID uuidSourceDsaObjGuid;
    UUID uuidSourceDsaInvocationID;
    UUID uuidAsyncIntersiteTransportObjGuid;
    USN usnLastObjChangeSynced;
    USN usnAttributeFilter;
    FILETIME ftimeLastSyncSuccess;
    FILETIME ftimeLastSyncAttempt;
    DWORD dwLastSyncResult;
    DWORD cNumConsecutiveSyncFailures;
}

typedef DS_REPL_CURSORS = __MIDL_drsuapi_0044 ;

type __MIDL_drsuapi_0044
{
    DWORD cNumCursors;
    DWORD dwReserved;
    array<DS_REPL_CURSOR> rgCursor
        with IDL{Size_is = [cNumCursors], IndirectionLevel = 1};
}

typedef DS_REPL_CURSOR = __MIDL_drsuapi_0043 ;

type __MIDL_drsuapi_0043
{
    UUID uuidSourceDsaInvocationID;
    USN usnAttributeFilter;
}

typedef DS_REPL_OBJ_META_DATA = __MIDL_drsuapi_0048 ;

type __MIDL_drsuapi_0048
{
    DWORD cNumEntries;
    DWORD dwReserved;
    array<DS_REPL_ATTR_META_DATA> rgMetaData
        with IDL{Size_is = [cNumEntries], IndirectionLevel = 1};
}

typedef DS_REPL_ATTR_META_DATA = __MIDL_drsuapi_0045 ;

type __MIDL_drsuapi_0045
{
    string pszAttributeName
        with IDL{BaseStringType = TypeOf<wchar_t>(),
                                  String = true,
                                  IndirectionLevel = 1};
    DWORD dwVersion;
    FILETIME ftimeLastOriginatingChange;
    UUID uuidLastOriginatingDsaInvocationID;
    USN usnOriginatingChange;
    USN usnLocalChange;
}

typedef DS_REPL_KCC_DSA_FAILURESW = __MIDL_drsuapi_0047 ;

type __MIDL_drsuapi_0047
{
    DWORD cNumEntries;
    DWORD dwReserved;
    array<DS_REPL_KCC_DSA_FAILUREW> rgDsaFailure
        with IDL{Size_is = [cNumEntries], IndirectionLevel = 1};
}

typedef DS_REPL_KCC_DSA_FAILUREW = __MIDL_drsuapi_0046 ;

type __MIDL_drsuapi_0046
{
    string pszDsaDN
        with IDL{BaseStringType = TypeOf<wchar_t>(),
                                  String = true,
                                  IndirectionLevel = 1};
    UUID uuidDsaObjGuid;
    FILETIME ftimeFirstFailure;
    DWORD cNumFailures;
    DWORD dwLastResult;
}

typedef DS_REPL_PENDING_OPSW = __MIDL_drsuapi_0051 ;

type __MIDL_drsuapi_0051
{
    FILETIME ftimeCurrentOpStarted;
    DWORD cNumPendingOps;
    array<DS_REPL_OPW> rgPendingOp
        with IDL{Size_is = [cNumPendingOps], IndirectionLevel = 1};
}

typedef DS_REPL_OPW = __MIDL_drsuapi_0050 ;

type __MIDL_drsuapi_0050
{
    FILETIME ftimeEnqueued;
    ULONG ulSerialNumber;
    ULONG ulPriority;
    DS_REPL_OP_TYPE OpType;
    ULONG ulOptions;
    string pszNamingContext
        with IDL{BaseStringType = TypeOf<wchar_t>(),
                                  String = true,
                                  IndirectionLevel = 1};
    string pszDsaDN
        with IDL{BaseStringType = TypeOf<wchar_t>(),
                                  String = true,
                                  IndirectionLevel = 1};
    string pszDsaAddress
        with IDL{BaseStringType = TypeOf<wchar_t>(),
                                  String = true,
                                  IndirectionLevel = 1};
    UUID uuidNamingContextObjGuid;
    UUID uuidDsaObjGuid;
}

typedef DS_REPL_OP_TYPE = __MIDL_drsuapi_0049 ;

pattern __MIDL_drsuapi_0049 = enum 
                              {
                                  DS_REPL_OP_TYPE_SYNC = 0,
                                  DS_REPL_OP_TYPE_ADD = 1,
                                  DS_REPL_OP_TYPE_DELETE = 2,
                                  DS_REPL_OP_TYPE_MODIFY = 3,
                                  DS_REPL_OP_TYPE_UPDATE_REFS = 4
                              };

typedef DS_REPL_ATTR_VALUE_META_DATA = __MIDL_drsuapi_0053 ;

type __MIDL_drsuapi_0053
{
    DWORD cNumEntries;
    DWORD dwEnumerationContext;
    array<DS_REPL_VALUE_META_DATA> rgMetaData
        with IDL{Size_is = [cNumEntries], IndirectionLevel = 1};
}

typedef DS_REPL_VALUE_META_DATA = __MIDL_drsuapi_0052 ;

type __MIDL_drsuapi_0052
{
    string pszAttributeName
        with IDL{BaseStringType = TypeOf<wchar_t>(),
                                  String = true,
                                  IndirectionLevel = 1};
    string pszObjectDn
        with IDL{BaseStringType = TypeOf<wchar_t>(),
                                  String = true,
                                  IndirectionLevel = 1};
    DWORD cbData;
    array<BYTE> pbData with IDL{Size_is = [cbData],
                                          PointerType = PointerKind.FullPtr,
                                          IndirectionLevel = 1};
    FILETIME ftimeDeleted;
    FILETIME ftimeCreated;
    DWORD dwVersion;
    FILETIME ftimeLastOriginatingChange;
    UUID uuidLastOriginatingDsaInvocationID;
    USN usnOriginatingChange;
    USN usnLocalChange;
}

typedef DS_REPL_CURSORS_2 = __MIDL_drsuapi_0055 ;

type __MIDL_drsuapi_0055
{
    DWORD cNumCursors;
    DWORD dwEnumerationContext;
    array<DS_REPL_CURSOR_2> rgCursor
        with IDL{Size_is = [cNumCursors], IndirectionLevel = 1};
}

typedef DS_REPL_CURSOR_2 = __MIDL_drsuapi_0054 ;

type __MIDL_drsuapi_0054
{
    UUID uuidSourceDsaInvocationID;
    USN usnAttributeFilter;
    FILETIME ftimeLastSyncSuccess;
}

typedef DS_REPL_CURSORS_3W = __MIDL_drsuapi_0057 ;

type __MIDL_drsuapi_0057
{
    DWORD cNumCursors;
    DWORD dwEnumerationContext;
    array<DS_REPL_CURSOR_3W> rgCursor
        with IDL{Size_is = [cNumCursors], IndirectionLevel = 1};
}

typedef DS_REPL_CURSOR_3W = __MIDL_drsuapi_0056 ;

type __MIDL_drsuapi_0056
{
    UUID uuidSourceDsaInvocationID;
    USN usnAttributeFilter;
    FILETIME ftimeLastSyncSuccess;
    string pszSourceDsaDN
        with IDL{BaseStringType = TypeOf<wchar_t>(),
                                  String = true,
                                  IndirectionLevel = 1};
}

typedef DS_REPL_OBJ_META_DATA_2 = __MIDL_drsuapi_0059 ;

type __MIDL_drsuapi_0059
{
    DWORD cNumEntries;
    DWORD dwReserved;
    array<DS_REPL_ATTR_META_DATA_2> rgMetaData
        with IDL{Size_is = [cNumEntries], IndirectionLevel = 1};
}

typedef DS_REPL_ATTR_META_DATA_2 = __MIDL_drsuapi_0058 ;

type __MIDL_drsuapi_0058
{
    string pszAttributeName
        with IDL{BaseStringType = TypeOf<wchar_t>(),
                                  String = true,
                                  IndirectionLevel = 1};
    DWORD dwVersion;
    FILETIME ftimeLastOriginatingChange;
    UUID uuidLastOriginatingDsaInvocationID;
    USN usnOriginatingChange;
    USN usnLocalChange;
    string pszLastOriginatingDsaDN
        with IDL{BaseStringType = TypeOf<wchar_t>(),
                                  String = true,
                                  IndirectionLevel = 1};
}

typedef DS_REPL_ATTR_VALUE_META_DATA_2 = __MIDL_drsuapi_0061 ;

type __MIDL_drsuapi_0061
{
    DWORD cNumEntries;
    DWORD dwEnumerationContext;
    array<DS_REPL_VALUE_META_DATA_2> rgMetaData
        with IDL{Size_is = [cNumEntries], IndirectionLevel = 1};
}

typedef DS_REPL_VALUE_META_DATA_2 = __MIDL_drsuapi_0060 ;

type __MIDL_drsuapi_0060
{
    string pszAttributeName
        with IDL{BaseStringType = TypeOf<wchar_t>(),
                                  String = true,
                                  IndirectionLevel = 1};
    string pszObjectDn
        with IDL{BaseStringType = TypeOf<wchar_t>(),
                                  String = true,
                                  IndirectionLevel = 1};
    DWORD cbData;
    array<BYTE> pbData with IDL{Size_is = [cbData],
                                          PointerType = PointerKind.FullPtr,
                                          IndirectionLevel = 1};
    FILETIME ftimeDeleted;
    FILETIME ftimeCreated;
    DWORD dwVersion;
    FILETIME ftimeLastOriginatingChange;
    UUID uuidLastOriginatingDsaInvocationID;
    USN usnOriginatingChange;
    USN usnLocalChange;
    string pszLastOriginatingDsaDN
        with IDL{BaseStringType = TypeOf<wchar_t>(),
                                  String = true,
                                  IndirectionLevel = 1};
}

typedef DS_REPL_SERVER_OUTGOING_CALLS = __MIDL_drsuapi_0155 ;

type __MIDL_drsuapi_0155
{
    DWORD cNumCalls with IDL{Range = new RangePattern {Low = 0, High = 256}};
    DWORD dwReserved;
    array<DS_REPL_SERVER_OUTGOING_CALL> rgCall
        with IDL{Size_is = [cNumCalls], IndirectionLevel = 1};
}

typedef DS_REPL_SERVER_OUTGOING_CALL = __MIDL_drsuapi_0154 ;

type __MIDL_drsuapi_0154
{
    string pszServerName
        with IDL{BaseStringType = TypeOf<wchar_t>(),
                                  String = true,
                                  IndirectionLevel = 1};
    BOOL fIsHandleBound;
    BOOL fIsHandleFromCache;
    BOOL fIsHandleInCache;
    DWORD dwThreadId;
    DWORD dwBindingTimeoutMins;
    DSTIME dstimeCreated;
    DWORD dwCallType;
}

typedef DS_REPL_CLIENT_CONTEXTS = __MIDL_drsuapi_0153 ;

type __MIDL_drsuapi_0153
{
    DWORD cNumContexts
        with IDL{Range = new RangePattern {Low = 0, High = 10000}};
    DWORD dwReserved;
    array<DS_REPL_CLIENT_CONTEXT> rgContext
        with IDL{Size_is = [cNumContexts], IndirectionLevel = 1};
}

typedef DS_REPL_CLIENT_CONTEXT = __MIDL_drsuapi_0152 ;

type __MIDL_drsuapi_0152
{
    ULONGLONG hCtx;
    LONG lReferenceCount;
    BOOL fIsBound;
    UUID uuidClient;
    DSTIME timeLastUsed;
    ULONG IPAddr;
    int pid;
}

typedef DRS_MSG_ADDSIDREQ = __MIDL_drsuapi_0161 ;

type __MIDL_drsuapi_0161[DWORD tag]
{
    optional [|tag in {1}|] DRS_MSG_ADDSIDREQ_V1 V1 with IDL{Case = [1]};
}
with IDL{Switch_Type = TypeOf<DWORD>(), UnionKind = UnionKind.NonEncapsulated};

typedef DRS_MSG_ADDSIDREQ_V1 = __MIDL_drsuapi_0160 ;

type __MIDL_drsuapi_0160
{
    DWORD Flags;
    string SrcDomain
        with IDL{BaseStringType = TypeOf<WCHAR>(),
                                  String = true,
                                  IndirectionLevel = 1};
    string SrcPrincipal
        with IDL{BaseStringType = TypeOf<WCHAR>(),
                                  String = true,
                                  IndirectionLevel = 1};
    string SrcDomainController
        with IDL{PointerType = PointerKind.FullPtr,
                                  BaseStringType = TypeOf<WCHAR>(),
                                  String = true,
                                  IndirectionLevel = 1};
    DWORD SrcCredsUserLength
        with IDL{Range = new RangePattern {Low = 0, High = 256}};
    array<BYTE> SrcCredsUser
        with IDL{Size_is = [SrcCredsUserLength], IndirectionLevel = 1};
    DWORD SrcCredsDomainLength
        with IDL{Range = new RangePattern {Low = 0, High = 256}};
    array<BYTE> SrcCredsDomain
        with IDL{Size_is = [SrcCredsDomainLength], IndirectionLevel = 1};
    DWORD SrcCredsPasswordLength
        with IDL{Range = new RangePattern {Low = 0, High = 256}};
    array<BYTE> SrcCredsPassword
        with IDL{Size_is = [SrcCredsPasswordLength], IndirectionLevel = 1};
    string DstDomain
        with IDL{BaseStringType = TypeOf<WCHAR>(),
                                  String = true,
                                  IndirectionLevel = 1};
    string DstPrincipal
        with IDL{BaseStringType = TypeOf<WCHAR>(),
                                  String = true,
                                  IndirectionLevel = 1};
}

typedef DRS_MSG_ADDSIDREPLY = __MIDL_drsuapi_0163 ;

type __MIDL_drsuapi_0163[DWORD tag]
{
    optional [|tag in {1}|] DRS_MSG_ADDSIDREPLY_V1 V1
        with IDL{Case = [1]};
}
with IDL
         {Switch_Type = TypeOf<DWORD>(), UnionKind = UnionKind.NonEncapsulated};

typedef DRS_MSG_ADDSIDREPLY_V1 = __MIDL_drsuapi_0162 ;

type __MIDL_drsuapi_0162
{
    DWORD dwWin32Error;
}

typedef DRS_MSG_GETMEMBERSHIPS2_REQ = __MIDL_drsuapi_0165 ;

type __MIDL_drsuapi_0165[DWORD tag]
{
    optional [|tag in {1}|] DRS_MSG_GETMEMBERSHIPS2_REQ_V1 V1 with IDL{Case = [1]};
}
with IDL{Switch_Type = TypeOf<DWORD>(), UnionKind = UnionKind.NonEncapsulated};

typedef DRS_MSG_GETMEMBERSHIPS2_REQ_V1 = __MIDL_drsuapi_0164 ;

type __MIDL_drsuapi_0164
{
    ULONG Count with IDL{Range = new RangePattern {Low = 1, High = 10000}};
    DRS_MSG_REVMEMB_REQ_V1 Requests
        with IDL{Size_is = [Count], IndirectionLevel = 1};
}

typedef DRS_MSG_GETMEMBERSHIPS2_REPLY = __MIDL_drsuapi_0167 ;

type __MIDL_drsuapi_0167[DWORD tag]
{
    optional [|tag in {1}|] DRS_MSG_GETMEMBERSHIPS2_REPLY_V1 V1
        with IDL{Case = [1]};
}
with IDL{Switch_Type = TypeOf<DWORD>(), UnionKind = UnionKind.NonEncapsulated};

typedef DRS_MSG_GETMEMBERSHIPS2_REPLY_V1 = __MIDL_drsuapi_0166 ;

type __MIDL_drsuapi_0166
{
    ULONG Count with IDL{Range = new RangePattern {Low = 0, High = 10000}};
    DRS_MSG_REVMEMB_REPLY_V1 Replies
        with IDL{Size_is = [Count], IndirectionLevel = 1};
}

typedef DRS_MSG_REPVERIFYOBJ = __MIDL_drsuapi_0169 ;

type __MIDL_drsuapi_0169[DWORD tag]
{
    optional [|tag in {1}|] DRS_MSG_REPVERIFYOBJ_V1 V1 with IDL{Case = [1]};
}
with IDL{Switch_Type = TypeOf<DWORD>(), UnionKind = UnionKind.NonEncapsulated};

typedef DRS_MSG_REPVERIFYOBJ_V1 = __MIDL_drsuapi_0168 ;

type __MIDL_drsuapi_0168
{
    DSNAME pNC with IDL{PointerType = PointerKind.RefPtr, IndirectionLevel = 1};
    UUID uuidDsaSrc;
    ULONG ulOptions;
}

typedef DRS_MSG_EXISTREQ = __MIDL_drsuapi_0171 ;

type __MIDL_drsuapi_0171[DWORD tag]
{
    optional [|tag in {1}|] DRS_MSG_EXISTREQ_V1 V1 with IDL{Case = [1]};
}
with IDL{Switch_Type = TypeOf<DWORD>(), UnionKind = UnionKind.NonEncapsulated};

typedef DRS_MSG_EXISTREQ_V1 = __MIDL_drsuapi_0170 ;

type __MIDL_drsuapi_0170
{
    UUID guidStart;
    DWORD cGuids;
    DSNAME pNC with IDL{IndirectionLevel = 1};
    UPTODATE_VECTOR_V1_EXT pUpToDateVecCommonV1 with IDL{IndirectionLevel = 1};
    array<UCHAR> Md5Digest with IDL{Dimensions = [16]};
}

typedef DRS_MSG_EXISTREPLY = __MIDL_drsuapi_0173 ;

type __MIDL_drsuapi_0173[DWORD tag]
{
    optional [|tag in {1}|] DRS_MSG_EXISTREPLY_V1 V1 with IDL{Case = [1]};
}
with IDL{Switch_Type = TypeOf<DWORD>(), UnionKind = UnionKind.NonEncapsulated};

typedef DRS_MSG_EXISTREPLY_V1 = __MIDL_drsuapi_0172 ;

type __MIDL_drsuapi_0172
{
    DWORD dwStatusFlags;
    DWORD cNumGuids
        with IDL{Range = new RangePattern {Low = 0, High = 10485760}};
    UUID rgGuids with IDL{Size_is = [cNumGuids], IndirectionLevel = 1};
}

typedef DRS_MSG_QUERYSITESREQ = __MIDL_drsuapi_0175 ;

type __MIDL_drsuapi_0175[DWORD tag]
{
    optional [|tag in {1}|] DRS_MSG_QUERYSITESREQ_V1 V1 with IDL{Case = [1]};
}
with IDL{Switch_Type = TypeOf<DWORD>(), UnionKind = UnionKind.NonEncapsulated};

typedef DRS_MSG_QUERYSITESREQ_V1 = __MIDL_drsuapi_0174 ;

type __MIDL_drsuapi_0174
{
    string pwszFromSite
        with IDL{BaseStringType = TypeOf<WCHAR>(),
                                  String = true,
                                  IndirectionLevel = 1};
    DWORD cToSites
        with IDL{Range = new RangePattern {Low = 1, High = 10000}};
    string rgszToSites
        with IDL{Size_is = [cToSites, null],
                                  BaseStringType = TypeOf<WCHAR>(),
                                  String = true,
                                  IndirectionLevel = 2};
    DWORD dwFlags;
}

typedef DRS_MSG_QUERYSITESREPLY = __MIDL_drsuapi_0178 ;

type __MIDL_drsuapi_0178[DWORD tag]
{
    optional [|tag in {1}|] DRS_MSG_QUERYSITESREPLY_V1 V1 with IDL{Case = [1]};
}
with IDL{Switch_Type = TypeOf<DWORD>(), UnionKind = UnionKind.NonEncapsulated};

typedef DRS_MSG_QUERYSITESREPLY_V1 = __MIDL_drsuapi_0177 ;

type __MIDL_drsuapi_0177
{
    DWORD cToSites with IDL{Range = new RangePattern {Low = 0, High = 10000}};
    DRS_MSG_QUERYSITESREPLYELEMENT_V1 rgCostInfo
        with IDL{Size_is = [cToSites], IndirectionLevel = 1};
    DWORD dwFlags;
}

typedef DRS_MSG_QUERYSITESREPLYELEMENT_V1 = __MIDL_drsuapi_0176 ;

type __MIDL_drsuapi_0176
{
    DWORD dwErrorCode;
    DWORD dwCost;
}

typedef DRS_MSG_INIT_DEMOTIONREQ = __MIDL_drsuapi_0180 ;

type __MIDL_drsuapi_0180[DWORD tag]
{
    optional [|tag in {1}|] DRS_MSG_INIT_DEMOTIONREQ_V1 V1 with IDL{Case = [1]};
}
with IDL{Switch_Type = TypeOf<DWORD>(), UnionKind = UnionKind.NonEncapsulated};

typedef DRS_MSG_INIT_DEMOTIONREQ_V1 = __MIDL_drsuapi_0179 ;

type __MIDL_drsuapi_0179
{
    DWORD dwReserved;
}

typedef DRS_MSG_INIT_DEMOTIONREPLY = __MIDL_drsuapi_0182 ;

type __MIDL_drsuapi_0182[DWORD tag]
{
    optional [|tag in {1}|] DRS_MSG_INIT_DEMOTIONREPLY_V1 V1 with IDL{Case = [1]};
}
with IDL{Switch_Type = TypeOf<DWORD>(), UnionKind = UnionKind.NonEncapsulated};

typedef DRS_MSG_INIT_DEMOTIONREPLY_V1 = __MIDL_drsuapi_0181 ;

type __MIDL_drsuapi_0181
{
    DWORD dwOpError;
}

typedef DRS_MSG_REPLICA_DEMOTIONREQ = __MIDL_drsuapi_0184 ;

type __MIDL_drsuapi_0184[DWORD tag]
{
    optional [|tag in {1}|] DRS_MSG_REPLICA_DEMOTIONREQ_V1 V1 with IDL{Case = [1]};
}
with IDL{Switch_Type = TypeOf<DWORD>(), UnionKind = UnionKind.NonEncapsulated};

typedef DRS_MSG_REPLICA_DEMOTIONREQ_V1 = __MIDL_drsuapi_0183 ;

type __MIDL_drsuapi_0183
{
    DWORD dwFlags;
    UUID uuidHelperDest;
    DSNAME pNC with IDL{PointerType = PointerKind.RefPtr, IndirectionLevel = 1};
}

typedef DRS_MSG_REPLICA_DEMOTIONREPLY = __MIDL_drsuapi_0186 ;

type __MIDL_drsuapi_0186[DWORD tag]
{
    optional [|tag in {1}|] DRS_MSG_REPLICA_DEMOTIONREPLY_V1 V1 with IDL{Case = [1]};
}
with IDL{Switch_Type = TypeOf<DWORD>(), UnionKind = UnionKind.NonEncapsulated};

typedef DRS_MSG_REPLICA_DEMOTIONREPLY_V1 = __MIDL_drsuapi_0185 ;

type __MIDL_drsuapi_0185
{
    DWORD dwOpError;
}

typedef DRS_MSG_FINISH_DEMOTIONREQ = __MIDL_drsuapi_0188 ;

type __MIDL_drsuapi_0188[DWORD tag]
{
    optional [|tag in {1}|] DRS_MSG_FINISH_DEMOTIONREQ_V1 V1 with IDL{Case = [1]};
}
with IDL{Switch_Type = TypeOf<DWORD>(), UnionKind = UnionKind.NonEncapsulated};

typedef DRS_MSG_FINISH_DEMOTIONREQ_V1 = __MIDL_drsuapi_0187 ;

type __MIDL_drsuapi_0187
{
    DWORD dwOperations;
    UUID uuidHelperDest;
    string szScriptBase
        with IDL{BaseStringType = TypeOf<wchar_t>(),
                                  String = true,
                                  IndirectionLevel = 1};
}

typedef DRS_MSG_FINISH_DEMOTIONREPLY = __MIDL_drsuapi_0190 ;

type __MIDL_drsuapi_0190[DWORD tag]
{
    optional [|tag in {1}|] DRS_MSG_FINISH_DEMOTIONREPLY_V1 V1 with IDL{Case = [1]};
}
with IDL{Switch_Type = TypeOf<DWORD>(), UnionKind = UnionKind.NonEncapsulated};

typedef DRS_MSG_FINISH_DEMOTIONREPLY_V1 = __MIDL_drsuapi_0189 ;

type __MIDL_drsuapi_0189
{
    DWORD dwOperationsDone;
    DWORD dwOpFailed;
    DWORD dwOpError;
}

typedef DRS_MSG_ADDCLONEDCREQ = __MIDL_drsuapi_0192 ;

type __MIDL_drsuapi_0192[DWORD tag]
{
    optional [|tag in {1}|] DRS_MSG_ADDCLONEDCREQ_V1 V1 with IDL{Case = [1]};
}
with IDL{Switch_Type = TypeOf<DWORD>(), UnionKind = UnionKind.NonEncapsulated};

typedef DRS_MSG_ADDCLONEDCREQ_V1 = __MIDL_drsuapi_0191 ;

type __MIDL_drsuapi_0191
{
    string pwszCloneDCName
        with IDL{BaseStringType = TypeOf<WCHAR>(),
                                  String = true,
                                  IndirectionLevel = 1};
    string pwszSite with IDL{BaseStringType = TypeOf<WCHAR>(),
                                              String = true,
                                              IndirectionLevel = 1};
}

typedef DRS_MSG_ADDCLONEDCREPLY = __MIDL_drsuapi_0194 ;

type __MIDL_drsuapi_0194[DWORD tag]
{
    optional [|tag in {1}|] DRS_MSG_ADDCLONEDCREPLY_V1 V1 with IDL{Case = [1]};
}
with IDL{Switch_Type = TypeOf<DWORD>(), UnionKind = UnionKind.NonEncapsulated};

typedef DRS_MSG_ADDCLONEDCREPLY_V1 = __MIDL_drsuapi_0193 ;

type __MIDL_drsuapi_0193
{
    string pwszCloneDCName
        with IDL{BaseStringType = TypeOf<WCHAR>(),
                                  String = true,
                                  IndirectionLevel = 1};
    string pwszSite with IDL{BaseStringType = TypeOf<WCHAR>(),
                                              String = true,
                                              IndirectionLevel = 1};
    DWORD cPasswordLength
        with IDL{Range = new RangePattern {Low = 0, High = 1024}};
    WCHAR pwsNewDCAccountPassword
        with IDL{Size_is = [cPasswordLength], IndirectionLevel = 1};
}

typedef DRS_MSG_WRITENGCKEYREQ = __MIDL_drsuapi_0195 ;

type __MIDL_drsuapi_0195[DWORD tag]
{
    optional [|tag in {1}|] DRS_MSG_WRITENGCKEYREQ_V1 V1
        with IDL{Case = [1]};
}
with IDL
         {Switch_Type = TypeOf<DWORD>(), UnionKind = UnionKind.NonEncapsulated};

type DRS_MSG_WRITENGCKEYREQ_V1
{
    string pwszAccount
        with IDL{BaseStringType = TypeOf<WCHAR>(),
                                  String = true,
                                  IndirectionLevel = 1};
    DWORD cNgcKey
        with IDL{Range = new RangePattern {Low = 0, High = 0xFFFF}};
    UCHAR pNgcKey
        with IDL{Size_is = [cNgcKey], IndirectionLevel = 1};
}

typedef DRS_MSG_WRITENGCKEYREPLY = __MIDL_drsuapi_0196 ;

type __MIDL_drsuapi_0196[DWORD tag]
{
    optional [|tag in {1}|] DRS_MSG_WRITENGCKEYREPLY_V1 V1
        with IDL{Case = [1]};
}
with IDL
         {Switch_Type = TypeOf<DWORD>(), UnionKind = UnionKind.NonEncapsulated};

type DRS_MSG_WRITENGCKEYREPLY_V1
{
    DWORD retVal;
}

typedef DRS_MSG_READNGCKEYREQ = __MIDL_drsuapi_0197 ;

type __MIDL_drsuapi_0197[DWORD tag]
{
    optional [|tag in {1}|] DRS_MSG_READNGCKEYREQ_V1 V1
        with IDL{Case = [1]};
}
with IDL
         {Switch_Type = TypeOf<DWORD>(), UnionKind = UnionKind.NonEncapsulated};

type DRS_MSG_READNGCKEYREQ_V1
{
    string pwszAccount
        with IDL{BaseStringType = TypeOf<WCHAR>(),
                                  String = true,
                                  IndirectionLevel = 1};
}

typedef DRS_MSG_READNGCKEYREPLY = __MIDL_drsuapi_0198 ;

type __MIDL_drsuapi_0198[DWORD tag]
{
    optional [|tag in {1}|] DRS_MSG_READNGCKEYREPLY_V1 V1
        with IDL{Case = [1]};
}
with IDL
         {Switch_Type = TypeOf<DWORD>(), UnionKind = UnionKind.NonEncapsulated};

type DRS_MSG_READNGCKEYREPLY_V1
{
    DWORD retVal;
    DWORD cNgcKey
        with IDL{Range = new RangePattern {Low = 0, High = 0xFFFF}};
    array<UCHAR> pNgcKey
        with IDL{Size_is = [cNgcKey], IndirectionLevel = 1};
}

typedef DSA_MSG_PREPARE_SCRIPT_REQ = __MIDL_dsaop_0006 ;

type __MIDL_dsaop_0006[DWORD tag]
{
    optional [|tag in {1}|] DSA_MSG_PREPARE_SCRIPT_REQ_V1 V1 with IDL{Case = [1]};
}
with IDL{Switch_Type = TypeOf<DWORD>(), UnionKind = UnionKind.NonEncapsulated};

typedef DSA_MSG_PREPARE_SCRIPT_REQ_V1 = __MIDL_dsaop_0005 ;

type __MIDL_dsaop_0005
{
    DWORD Reserved;
}

typedef DSA_MSG_PREPARE_SCRIPT_REPLY = __MIDL_dsaop_0008 ;

type __MIDL_dsaop_0008[DWORD tag]
{
    optional [|tag in {1}|] DSA_MSG_PREPARE_SCRIPT_REPLY_V1 V1 with IDL{Case = [1]};
}
with IDL{Switch_Type = TypeOf<DWORD>(), UnionKind = UnionKind.NonEncapsulated};

typedef DSA_MSG_PREPARE_SCRIPT_REPLY_V1 = __MIDL_dsaop_0007 ;

type __MIDL_dsaop_0007
{
    DWORD dwOperationStatus;
    string pwErrMessage
        with IDL{BaseStringType = TypeOf<wchar_t>(),
                                  String = true,
                                  IndirectionLevel = 1};
    DWORD cbPassword
        with IDL{Range = new RangePattern {Low = 0, High = 1024}};
    BYTE pbPassword
        with IDL{Size_is = [cbPassword], IndirectionLevel = 1};
    DWORD cbHashBody
        with IDL{Range = new RangePattern {Low = 0, High = 10485760}};
    BYTE pbHashBody
        with IDL{Size_is = [cbHashBody], IndirectionLevel = 1};
    DWORD cbHashSignature
        with IDL{Range = new RangePattern {Low = 0, High = 10485760}};
    BYTE pbHashSignature
        with IDL{Size_is = [cbHashSignature], IndirectionLevel = 1};
}

typedef DSA_MSG_EXECUTE_SCRIPT_REQ = __MIDL_dsaop_0002 ;

type __MIDL_dsaop_0002[DWORD tag]
{
    optional [|tag in {1}|] DSA_MSG_EXECUTE_SCRIPT_REQ_V1 V1 with IDL{Case = [1]};
}
with IDL{Switch_Type = TypeOf<DWORD>(), UnionKind = UnionKind.NonEncapsulated};

typedef DSA_MSG_EXECUTE_SCRIPT_REQ_V1 = __MIDL_dsaop_0001 ;

type __MIDL_dsaop_0001
{
    DWORD Flags;
    DWORD cbPassword with IDL{Range = new RangePattern {Low = 1, High = 1024}};
    BYTE pbPassword with IDL{Size_is = [cbPassword], IndirectionLevel = 1};
}

typedef DSA_MSG_EXECUTE_SCRIPT_REPLY = __MIDL_dsaop_0004 ;

type __MIDL_dsaop_0004[DWORD tag]
{
    optional [|tag in {1}|] DSA_MSG_EXECUTE_SCRIPT_REPLY_V1 V1 with IDL{Case = [1]};
}
with IDL{Switch_Type = TypeOf<DWORD>(), UnionKind = UnionKind.NonEncapsulated};

typedef DSA_MSG_EXECUTE_SCRIPT_REPLY_V1 = __MIDL_dsaop_0003 ;

type __MIDL_dsaop_0003
{
    DWORD dwOperationStatus;
    string pwErrMessage
        with IDL{BaseStringType = TypeOf<wchar_t>(),
                                  String = true,
                                  IndirectionLevel = 1};
}
