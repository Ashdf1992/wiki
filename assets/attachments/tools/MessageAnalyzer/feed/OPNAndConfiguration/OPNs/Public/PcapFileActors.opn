module PcapFileActors with 
OPNAuthoring
{
    Copyright = "(c) Microsoft Corporation",
    References = 
        [
        ],
    RevisionSummary =
        [
            new Revision{Class = RevisionClass.Major, Version = "1.0.0", Date = "12/31/2012"}
        ]
};

using Standard;
using PcapFile;
using PPPoE;
using Utility;

autostart actor PcapFileToPublicProtocol(PcapFile.PcapFileEndpoint pcap)
{
    process pcap accepts pk:PcapFile.Packet{Network is PcapLinkTypeCode.LINKTYPE_PPP_ETHER}
    {
        switch (pk.Payload)
        {
            case d:PPPoE.Datagram from BinaryDecoder<PPPoE.Datagram> =>
                dispatch endpoint PPPoE.Node[d.SessionID] accepts d;
            default =>
                ThrowDecodingException("PcapFile", "PPPoE");
        }
    }
}

autostart actor PcapNgFileToPublicProtocol(PcapFile.PcapNgFileEndpoint pcapNg)
{
    process pcapNg accepts pk:PcapFile.PacketNg{LinkType is PcapNgLinkTypeCode.LINKTYPE_PPP_ETHER}
    {
        switch (pk.Payload)
        {
            case d:PPPoE.Datagram from BinaryDecoder<PPPoE.Datagram> =>
                dispatch endpoint PPPoE.Node[d.SessionID] accepts d;
            default =>
                ThrowDecodingException("PcapNgFile", "PPPoE");
        }
    }
}
