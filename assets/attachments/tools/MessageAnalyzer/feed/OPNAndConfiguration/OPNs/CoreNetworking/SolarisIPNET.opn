protocol SolarisIPNET with 
BinaryEncodingDefaults{Endian = Endian.Big},
Documentation
{
    ProtocolName = "Solaris IPNET",
    ShortName = "SolarisIPNET",
    Description = ""
},
OPNAuthoring
{
    Copyright = "(c) Microsoft Corporation",
    References =
        [
            new Reference{Name = "ipnet(7D)", Link = "http://docs.oracle.com/cd/E36784_01/html/E36884/ipnet-7d.html"},
            new Reference{Name = "DLT type for OpenSolaris IPNET", Link = "http://seclists.org/tcpdump/2009/q3/90"},
        ],
        RevisionSummary =
        [
            new Revision{Class = RevisionClass.Major, Version = "380832", Date="08/14/2015"}
        ]
};

using Standard;

endpoint Node accepts Frame;

const byte AddressFamilyIPv4 = 2;
const byte AddressFamilyIPv6 = 26;

message Frame
{
    byte Version;
    byte Family;
    ushort HookType;
    uint PacketLength;
    uint InterfaceIndex;
    uint GroupInterfaceIndex;
    uint ZoneIdSource;
    uint ZoneIdDest;
    binary Payload;

    override string ToString()
    {
        return "Version: " + Version.ToString() + ", Family: " + Family.ToString() + ", HookType: " + HookType.ToString() + ", PacketLength: " + PacketLength.ToString();
    }
}
