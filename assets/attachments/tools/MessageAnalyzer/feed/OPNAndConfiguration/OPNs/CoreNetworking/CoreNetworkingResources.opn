// OPN CoreNetworking strings library
module CoreNetworkingResources;

// IPv6.opn
string IPV6_STR_A_MULTIPLE_OF = "and a multiple of {0}";

// CapFileActors.opn
string CAPFILEACTORS_DECRYPTION_ERROR = "DecryptedFrame: Decryption is in error";

// TCP.opn
string TCP_RETRANSMITTED_BY = "TCP: This segment is retransmitted by message #{0}.";
string TCP_TCB_SHOULD_INITIALIZED_BEFORE = "TCP: TCB.{0}(), TCB is assumed to be initialized before data segment is added.";
string TCP_LOST_SEQ_RANGE = "TCP: Lost TCP segments, sequence range {0} ~ {1}.";
string TCP_RETRANSMIT_ORIGINAL = "TCP: Retransmitted, original message is {0}.";
string TCP_ACK_FOR_SYN_LOST = "TCP: ACK message for SYN message is lost.";
string TCP_TCP_RETRANSMIT_SYN = "TCP: Retransmitted SYN, original message is {0}.";
string TCP_LOST_HANDSHAKE = "TCP: Segment lost, missing 3-way handshake.";
string TCP_DUP_ACK = "TCP: Duplicate ACK of message {0}.";
string TCP_DUP_ACK_DUE_TO_SACK = "TCP: Duplicate ACK of message {0}, due to SACK update.";
string TCP_FAST_RETRANSMIT_ORIGINAL = "TCP: Request fast retransmit of sequence number {0}. Original message is {1}.";
string TCP_WINDOW_SCALE_COUNT_GREATER_THAN_14 = "TCP, The shift count of window scale factor should be less than or equal to 14, not {0}.";
string TCP_INITIALSEQUENCENUMBER_IS_NOTHING = "TCP: TCPDecodingCache.AddDataSegment(), InitialSequenceNumber annotation should be assigned value when under layer protocol constructs Segments.";
string TCP_ACK_PRIOR_TO_DATA_SEGMENT = "TCP: This data segment was acknowledged before it arrived, which infers an out-of-order capturing issue.";

// OCSP.opn
string OCSP_REQUEST_DECODE_FAIL = "OCSP: OCSPRequest cannot be decoded successfully.";

// Radiotap.opn
string RADIOTAP_DECODING_RTAPDATA_FAILED = "Radiotap: the {0} type cannot be decoded successfully when the corresponding bit in it_present is set.";

// OAuth2.opn
string OAUTH2_STR_FIELD_MUST_EXIST = "OAuth2: {0} field is required for {1} message.";
string OAUTH2_STR_ERROR_CODE = "OAuth2: The error of the message is {0}.";
string OAUTH2_STR_UNDEFINED_ERROR_CODE = "OAuth2: The error of the message is {0}, which is undefined in RFC6749";
string OAUTH2_STR_FIELD_MUST_EXIST_WHEN_GRANT_TYPE = "OAuth2: The {0} field in message {1} must exist when grant_type is {2}.";
string OAuth2_CERT_DECODING_FAILURE = "OAuth2: The x5c field in type JWT cannot be decoded successfully.";

// WiFi
string WIFI_INSUFFICIENT_DATA = "WiFi: Incomplete {0} payload for full reassembly, due to missing contiguous messages.";
string WIFI_DUPLICATE_GAS_RES_FRAGMENT = "WiFi: Duplicate GAS Comeback Response Frame";
string WIFI_DUPLICATE_FRAGMENT = "WiFi: Duplicate WiFi message";
string WIFI_INVALID_BODY = "WiFi: Invalid WiFi message body.";

// WinInet
string WININET_INSUFFICIENT_REQUEST_BODY = "WinInet: Incomplete request body, possibly due to missing fragment(s).";

// ICMPv6
string ICMPv6_CHECK_MULTI_VALUE = "ICMPv6: The {0} in type {1} must be {2} or {3}.";

// DHCP
string MESSAGE_COOKIE = "DHCP: Message cookie must be set to [99,130,83,99].";
string SLPDirectoryAgentMandatory = "DHCP: Mandatory byte must not be set to any byte value for which the high order bit (0x80) is set, not {0}.";
string MAGIC_OPTION = "DHCP: The IPv4Address field in type Magic must be set to f1:00:74:7e.";

// DHCPv6
string REPAY_MESSAGE_OPTION_CHECK = "DHCPv6: Relay Message must include a relay message option.";
string STATUSMESSAGE_NOT_NULL = "DHCPv6: The StatusMessage field in type StatusCodeOption must not be null.";

// POP3.opn
string RETR_RESPONSE_LENGTH_INVALID = "POP3: The Length in type RetrRespType is not equal to the actual payload length.";

// MIME.opn
string MIME_CLOSE_DELIMITER_MISSING = "MIME: Close delimiter is missing.";

// HTTP2.opn
string HTTP2_REACH_LEAF_NODE_UNEXPECTEDLY = "HTTP2: Reach leaf node unexpectedly during decompress by Huffman tree.";
